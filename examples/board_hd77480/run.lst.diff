--- run.lst.fc	2013-06-14 15:20:38.131587490 -0400
+++ run.lst.sc	2013-06-14 10:24:48.979911861 -0400
@@ -7,22 +7,22 @@
 ac_input_init period 20000uS or 200000 cycles
 LCD: 37uS is 370 cycles for your AVR
 LCD: 1uS is 10 cycles for your AVR
 Demo : This is HD44780 LCD demo
    You can configure the width&height of the LCD in the code
    Press 'r' to start recording a 'wave' file - with a LOT of data
    Press 's' to stop recording
 000000: rjmp .25 [0034]
 000034: clr r1[00]
 000034: 									SREG = .Z......
-000036: 									SREG = ........
 000036: out SREG, r1[00]
+000036: 									SREG = ........
 000038: ldi YL, 0xff
 00003a: ldi YH, 0x02
 00003c: out SPH, YH[02]
 00003e: out SPL, YL[ff]
 000040: ldi r17, 0x01
 000042: ldi XL, 0x00
 000044: ldi XH, 0x01
 000046: ldi ZL, 0x16
 000048: ldi ZH, 0x08
 00004a: rjmp .2 [0050]
@@ -172,22 +172,22 @@
 0001c6: push YL[ff] (@02fc)
 0001c8: push YH[02] (@02fb)
 0001ca: in YL, SPL[fb]
 0001cc: in YH, SPH[02]
 0001ce: sbiw YL:YH[02fb], 0x10
 0001ce: 									SREG = ........
 0001d0: in r0, SREG[00]
 0001d2: cli
 0001d2: 									SREG = ........
 0001d4: out SPH, YH[02]
-0001d6: 									SREG = ........
 0001d6: out SREG, r0[00]
+0001d6: 									SREG = ........
 0001d8: out SPL, YL[eb]
 0001da: rcall .-116 [00f4]
 0000f4: sbi io:24[0000], 0x10 = 10
 0000f6: sbi io:24[0010], 0x40 = 50
 0000f8: sbi io:24[0050], 0x20 = 70
 0000fa: in r24, io:24[70]
 0000fc: ori r24[70], 0x0f
 0000fc: 									SREG = ........
 0000fe: out io:24, r24[7f]
 000100: ldi r24, 0x7b
@@ -145756,1836 +145756,1836 @@
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
 000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
 000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
 000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[00], 0xff = 01
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[01]
 000174: cpi r24[01], 0x32
 000174: 									SREG = C.N.SH..
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[01], 0xff = 02
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[02]
 000174: cpi r24[02], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[02], 0xff = 03
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[03]
 000174: cpi r24[03], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[03], 0xff = 04
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[04]
 000174: cpi r24[04], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[04], 0xff = 05
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[05]
 000174: cpi r24[05], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[05], 0xff = 06
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[06]
 000174: cpi r24[06], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[06], 0xff = 07
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[07]
 000174: cpi r24[07], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[07], 0xff = 08
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[08]
 000174: cpi r24[08], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[08], 0xff = 09
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[09]
 000174: cpi r24[09], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[09], 0xff = 0a
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[0a]
 000174: cpi r24[0a], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[0a], 0xff = 0b
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[0b]
 000174: cpi r24[0b], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[0b], 0xff = 0c
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[0c]
 000174: cpi r24[0c], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[0c], 0xff = 0d
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[0d]
 000174: cpi r24[0d], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[0d], 0xff = 0e
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[0e]
 000174: cpi r24[0e], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[0e], 0xff = 0f
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[0f]
 000174: cpi r24[0f], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[0f], 0xff = 10
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[10]
 000174: cpi r24[10], 0x32
 000174: 									SREG = C.N.SH..
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[10], 0xff = 11
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[11]
 000174: cpi r24[11], 0x32
 000174: 									SREG = C.N.SH..
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[11], 0xff = 12
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[12]
 000174: cpi r24[12], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[12], 0xff = 13
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[13]
 000174: cpi r24[13], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[13], 0xff = 14
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[14]
 000174: cpi r24[14], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[14], 0xff = 15
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[15]
 000174: cpi r24[15], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[15], 0xff = 16
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[16]
 000174: cpi r24[16], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[16], 0xff = 17
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[17]
 000174: cpi r24[17], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[17], 0xff = 18
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[18]
 000174: cpi r24[18], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[18], 0xff = 19
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[19]
 000174: cpi r24[19], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[19], 0xff = 1a
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[1a]
 000174: cpi r24[1a], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[1a], 0xff = 1b
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[1b]
 000174: cpi r24[1b], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[1b], 0xff = 1c
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[1c]
 000174: cpi r24[1c], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[1c], 0xff = 1d
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[1d]
 000174: cpi r24[1d], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[1d], 0xff = 1e
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[1e]
 000174: cpi r24[1e], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[1e], 0xff = 1f
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[1f]
 000174: cpi r24[1f], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[1f], 0xff = 20
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[20]
 000174: cpi r24[20], 0x32
 000174: 									SREG = C.N.SH..
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[20], 0xff = 21
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[21]
 000174: cpi r24[21], 0x32
 000174: 									SREG = C.N.SH..
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[21], 0xff = 22
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[22]
 000174: cpi r24[22], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[22], 0xff = 23
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[23]
 000174: cpi r24[23], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[23], 0xff = 24
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[24]
 000174: cpi r24[24], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[24], 0xff = 25
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[25]
 000174: cpi r24[25], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[25], 0xff = 26
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[26]
 000174: cpi r24[26], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[26], 0xff = 27
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[27]
 000174: cpi r24[27], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[27], 0xff = 28
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[28]
 000174: cpi r24[28], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[28], 0xff = 29
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[29]
 000174: cpi r24[29], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[29], 0xff = 2a
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[2a]
 000174: cpi r24[2a], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[2a], 0xff = 2b
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[2b]
 000174: cpi r24[2b], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[2b], 0xff = 2c
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[2c]
 000174: cpi r24[2c], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[2c], 0xff = 2d
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[2d]
 000174: cpi r24[2d], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[2d], 0xff = 2e
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[2e]
 000174: cpi r24[2e], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[2e], 0xff = 2f
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[2f]
 000174: cpi r24[2f], 0x32
 000174: 									SREG = C.N.S...
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[2f], 0xff = 30
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[30]
 000174: cpi r24[30], 0x32
 000174: 									SREG = C.N.SH..
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[30], 0xff = 31
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[31]
 000174: cpi r24[31], 0x32
 000174: 									SREG = C.N.SH..
 000176: brne .32 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z.....I
+000226: 									SREG = CZ.....I
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = .......I
+000216: 									SREG = C......I
 000218: out io:53, r24[01]
 00021a: sleep
 000002: rjmp .172 [015c]
 00015c: push r1[00] (@02e8)
 00015e: push r0[00] (@02e7)
-000160: in r0, SREG[00]
-000162: push r0[00] (@02e6)
+000160: in r0, SREG[01]
+000162: push r0[01] (@02e6)
 000164: clr r1[00]
-000164: 									SREG = .Z......
+000164: 									SREG = CZ......
 000166: push r24[01] (@02e5)
 000168: push r25[7f] (@02e4)
 00016a: lds r24[01], 0x010f
 00016e: subi r24[31], 0xff = 32
 00016e: 									SREG = C.......
 000170: sts 0x010f, r24[32]
 000174: cpi r24[32], 0x32
 000174: 									SREG = .Z......
 000176: brne .32 [01b8]	; Will not branch
 000178: lds r24[32], 0x0110
@@ -147593,400 +147593,400 @@
 00017c: 									SREG = C.......
 00017e: sts 0x0110, r24[01]
 000182: sts 0x010f, r1[00]
 000186: ldi r25, 0x01
 000188: sts 0x010e, r25[01]
 00018c: cpi r24[01], 0x3c
 00018c: 									SREG = C.N.SH..
 00018e: brne .20 [01b8]	; Will branch
 0001b8: pop r25 (@02e5)[7f]
 0001ba: pop r24 (@02e6)[01]
-0001bc: pop r0 (@02e7)[00]
-0001be: 									SREG = ........
-0001be: out SREG, r0[00]
+0001bc: pop r0 (@02e7)[01]
+0001be: out SREG, r0[01]
+0001be: 									SREG = C.......
 0001c0: pop r0 (@02e8)[00]
 0001c2: pop r1 (@02e9)[00]
 0001c4: reti
 00021c: in r24, io:53[01]
 00021e: andi r24[01], 0xfe
-00021e: 									SREG = .Z.....I
+00021e: 									SREG = CZ.....I
 000220: out io:53, r24[00]
 000222: lds r24[00], 0x010e
 000226: tst r24[01]
-000226: 									SREG = .......I
+000226: 									SREG = C......I
 000228: breq .-11 [0214]	; Will not branch
 00022a: sts 0x010e, r1[00]
 00022e: ldi r22, 0x00
 000230: ldi r24, 0x01
 000232: rcall .-191 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[01] = 01
 0000bc: mov YH, r22[00] = 00
 0000be: swap r24[01] = 10
 0000c0: andi r24[10], 0x0f
-0000c0: 									SREG = .Z.....I
+0000c0: 									SREG = CZ.....I
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[000e], 0x40 = 0e
 00006e: tst r22[00]
-00006e: 									SREG = .Z.....I
+00006e: 									SREG = CZ.....I
 000070: breq .2 [0076]	; Will branch
 000076: cbi io:25[000e], 0x10 = 0e
 000078: in r25, io:25[0e]
 00007a: andi r25[0e], 0xf0
-00007a: 									SREG = .Z.....I
+00007a: 									SREG = CZ.....I
 00007c: or r25[00], r24[00] = 00
-00007c: 									SREG = .Z.....I
+00007c: 									SREG = CZ.....I
 00007e: out io:25, r25[00]
 000080: sbi io:25[0000], 0x20 = 20
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0020], 0x20 = 00
 00008a: ret
 0000c4: mov r22, YH[00] = 00
 0000c6: mov r24, YL[01] = 01
 0000c8: andi r24[01], 0x0f
-0000c8: 									SREG = .......I
+0000c8: 									SREG = C......I
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0000], 0x40 = 00
 00006e: tst r22[00]
-00006e: 									SREG = .Z.....I
+00006e: 									SREG = CZ.....I
 000070: breq .2 [0076]	; Will branch
 000076: cbi io:25[0000], 0x10 = 00
 000078: in r25, io:25[00]
 00007a: andi r25[00], 0xf0
-00007a: 									SREG = .Z.....I
+00007a: 									SREG = CZ.....I
 00007c: or r25[00], r24[01] = 01
-00007c: 									SREG = .......I
+00007c: 									SREG = C......I
 00007e: out io:25, r25[01]
 000080: sbi io:25[0001], 0x20 = 21
 hd44780_write_command 01
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0021], 0x20 = 01
 00008a: ret
 000234: ldi r24, 0x01
 000236: rcall .-167 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0001], 0x40 = 41
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0041], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = .......I
+0000b2: 									SREG = C......I
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S..I
+0000dc: 									SREG = C.N.S..I
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0001], 0x40 = 41
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0041], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z.....I
+0000b2: 									SREG = CZ.....I
 0000b4: ret
 0000e2: or r24[00], YH[80] = 80
-0000e2: 									SREG = ..N.S..I
+0000e2: 									SREG = C.N.S..I
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[80], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0001], 0x40 = 41
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0041], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z.....I
+0000b2: 									SREG = CZ.....I
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z.....I
+0000dc: 									SREG = CZ.....I
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0001], 0x40 = 41
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0041], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z.....I
+0000b2: 									SREG = CZ.....I
 0000b4: ret
 0000e2: or r24[00], YH[00] = 00
-0000e2: 									SREG = .Z.....I
+0000e2: 									SREG = CZ.....I
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[00], 0x80	; Will branch
 0000f2: ret
 000238: ldi r22, 0x00
 00023a: ldi r24, 0x84
 00023c: rcall .-196 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[84] = 84
 0000bc: mov YH, r22[00] = 00
 0000be: swap r24[84] = 48
 0000c0: andi r24[48], 0x0f
-0000c0: 									SREG = .......I
+0000c0: 									SREG = C......I
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[0001], 0x40 = 01
 00006e: tst r22[00]
-00006e: 									SREG = .Z.....I
+00006e: 									SREG = CZ.....I
 000070: breq .2 [0076]	; Will branch
 000076: cbi io:25[0001], 0x10 = 01
 000078: in r25, io:25[01]
 00007a: andi r25[01], 0xf0
-00007a: 									SREG = .Z.....I
+00007a: 									SREG = CZ.....I
 00007c: or r25[00], r24[08] = 08
-00007c: 									SREG = .......I
+00007c: 									SREG = C......I
 00007e: out io:25, r25[08]
 000080: sbi io:25[0008], 0x20 = 28
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0028], 0x20 = 08
 00008a: ret
 0000c4: mov r22, YH[00] = 00
 0000c6: mov r24, YL[84] = 84
 0000c8: andi r24[84], 0x0f
-0000c8: 									SREG = .......I
+0000c8: 									SREG = C......I
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0008], 0x40 = 08
 00006e: tst r22[00]
-00006e: 									SREG = .Z.....I
+00006e: 									SREG = CZ.....I
 000070: breq .2 [0076]	; Will branch
 000076: cbi io:25[0008], 0x10 = 08
 000078: in r25, io:25[08]
 00007a: andi r25[08], 0xf0
-00007a: 									SREG = .Z.....I
+00007a: 									SREG = CZ.....I
 00007c: or r25[00], r24[04] = 04
-00007c: 									SREG = .......I
+00007c: 									SREG = C......I
 00007e: out io:25, r25[04]
 000080: sbi io:25[0004], 0x20 = 24
 hd44780_write_command 84
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0024], 0x20 = 04
 00008a: ret
 00023e: ldi r24, 0x00
 000240: rcall .-172 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0004], 0x40 = 44
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0044], 0x10 = 44
 00009e: sbi io:25[0044], 0x20 = 64
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0064], 0x20 = 44
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0044], 0x40 = 04
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = .......I
+0000b2: 									SREG = C......I
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S..I
+0000dc: 									SREG = C.N.S..I
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0004], 0x40 = 44
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0044], 0x10 = 44
 00009e: sbi io:25[0044], 0x20 = 64
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[64]
 0000a8: cbi io:25[0064], 0x20 = 44
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0044], 0x40 = 04
 0000b2: andi r24[64], 0x0f
-0000b2: 									SREG = .......I
+0000b2: 									SREG = C......I
 0000b4: ret
 0000e2: or r24[04], YH[80] = 84
-0000e2: 									SREG = ..N.S..I
+0000e2: 									SREG = C.N.S..I
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[84], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0004], 0x40 = 44
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0044], 0x10 = 44
 00009e: sbi io:25[0044], 0x20 = 64
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0064], 0x20 = 44
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0044], 0x40 = 04
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z.....I
+0000b2: 									SREG = CZ.....I
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z.....I
+0000dc: 									SREG = CZ.....I
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0004], 0x40 = 44
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = .......I
+000090: 									SREG = C......I
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z.....I
+000094: 									SREG = CZ.....I
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0044], 0x10 = 44
 00009e: sbi io:25[0044], 0x20 = 64
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[64]
 0000a8: cbi io:25[0064], 0x20 = 44
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = .......I
+0000ac: 									SREG = C......I
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0044], 0x40 = 04
 0000b2: andi r24[64], 0x0f
-0000b2: 									SREG = .......I
+0000b2: 									SREG = C......I
 0000b4: ret
 0000e2: or r24[04], YH[00] = 04
-0000e2: 									SREG = .......I
+0000e2: 									SREG = C......I
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[04], 0x80	; Will branch
 0000f2: ret
 000242: lds r24[04], 0x0110
 000246: push r1[00] (@02ea)
 000248: push r24[01] (@02e9)
 00024a: lds r24[01], 0x0111
 00024e: push r1[00] (@02e8)
@@ -148004,53 +148004,53 @@
 00028a: ldi ZL, 0x48
 00028c: ldi ZH, 0x01
 00028e: rjmp .664 [07c0]
 0007c0: push r16[ec] (@02de)
 0007c2: push r17[02] (@02dd)
 0007c4: push YL[eb] (@02dc)
 0007c6: push YH[02] (@02db)
 0007c8: in YL, SPL[db]
 0007ca: in YH, SPH[02]
 0007cc: sub YL[db], XL[10] = cb
-0007cc: 									SREG = ..NV...I
+0007cc: 									SREG = ..N.S..I
 0007ce: sbc YH[02], XH[00] = 02
 0007ce: 									SREG = .......I
-0007d0: in r0, SREG[00]
+0007d0: in r0, SREG[01]
 0007d2: cli
 0007d2: 									SREG = ........
 0007d4: out SPH, YH[02]
-0007d6: 									SREG = ........
-0007d6: out SREG, r0[00]
+0007d6: out SREG, r0[80]
+0007d6: 									SREG = .......I
 0007d8: out SPL, YL[cb]
 0007da: ijmp Z[0290]
-000290: ld r16, (YL+23[02e2])=[ec]
-000292: ld r17, (YL+24[02e3])=[02]
+000290: ld r16, (Y+23[02e2])=[ec]
+000292: ld r17, (Y+24[02e3])=[02]
 000294: ldi r24, 0x06
-000296: st (YL+4[02cf]), r24[18]
-000298: st (YL+2[02cd]), r17[11]
-00029a: st (YL+1[02cc]), r16[10]
+000296: st (Y+4[02cf]), r24[06]
+000298: st (Y+2[02cd]), r17[02]
+00029a: st (Y+1[02cc]), r16[ec]
 00029c: ldi r24, 0xff
 00029e: ldi r25, 0x7f
-0002a0: st (YL+6[02d1]), r25[19]
-0002a2: st (YL+5[02d0]), r24[18]
+0002a0: st (Y+6[02d1]), r25[7f]
+0002a2: st (Y+5[02d0]), r24[ff]
 0002a4: movw r20:r21, YL:YH[02cb]
 0002a6: subi r20[cb], 0xe5 = e6
-0002a6: 									SREG = C.N.S...
+0002a6: 									SREG = C.N.S..I
 0002a8: sbci r21[02], 0xff = 02
-0002a8: 									SREG = C.......
-0002aa: st (YL+16[02db]), r21[15]
-0002ac: st (YL+15[02da]), r20[14]
-0002ae: ld r22, (YL+25[02e4])=[00]
-0002b0: ld r23, (YL+26[02e5])=[01]
+0002a8: 									SREG = C......I
+0002aa: st (Y+16[02db]), r21[02]
+0002ac: st (Y+15[02da]), r20[e6]
+0002ae: ld r22, (Y+25[02e4])=[00]
+0002b0: ld r23, (Y+26[02e5])=[01]
 0002b2: movw r24:r25, YL:YH[02cb]
-0002b4: adiw r24:r25[02cb], 0x01 = 0x02cc
-0002b4: 									SREG = ........
+0002b4: adiw r24:r25[02cb], 0x01
+0002b4: 									SREG = .......I
 0002b6: rcall .8 [02c8]
 0002c8: ldi XL, 0x0c
 0002ca: ldi XH, 0x00
 0002cc: ldi ZL, 0x69
 0002ce: ldi ZH, 0x01
 0002d0: rjmp .617 [07a4]
 0007a4: push r2[00] (@02c8)
 0007a6: push r3[00] (@02c7)
 0007a8: push r4[00] (@02c6)
 0007aa: push r5[00] (@02c5)
@@ -148064,3307 +148064,38101 @@
 0007ba: push r13[00] (@02bd)
 0007bc: push r14[00] (@02bc)
 0007be: push r15[01] (@02bb)
 0007c0: push r16[ec] (@02ba)
 0007c2: push r17[02] (@02b9)
 0007c4: push YL[cb] (@02b8)
 0007c6: push YH[02] (@02b7)
 0007c8: in YL, SPL[b7]
 0007ca: in YH, SPH[02]
 0007cc: sub YL[b7], XL[0c] = ab
-0007cc: 									SREG = ..NV.H..
+0007cc: 									SREG = ..N.SH.I
 0007ce: sbc YH[02], XH[00] = 02
-0007ce: 									SREG = ........
-0007d0: in r0, SREG[00]
+0007ce: 									SREG = .......I
+0007d0: in r0, SREG[80]
 0007d2: cli
 0007d2: 									SREG = ........
 0007d4: out SPH, YH[02]
-0007d6: 									SREG = ........
-0007d6: out SREG, r0[00]
+0007d6: out SREG, r0[80]
+0007d6: 									SREG = .......I
 0007d8: out SPL, YL[ab]
 0007da: ijmp Z[02d2]
 0002d2: movw r14:r15, r24:r25[02cc]
 0002d4: movw r12:r13, r22:r23[0100]
 0002d6: movw r16:r17, r20:r21[02e6]
 0002d8: movw ZL:ZH, r24:r25[02cc]
-0002da: st (ZL+7[02d3]), r1[01]
-0002dc: st (ZL+6[02d2]), r1[01]
-0002de: ld r24, (ZL+3[02cf])=[06]
+0002da: st (Z+7[02d3]), r1[00]
+0002dc: st (Z+6[02d2]), r1[00]
+0002de: ld r24, (Z+3[02cf])=[06]
 0002e0: sbrs r24[06], 0x02	; Will branch
 0002e4: clr r8[00]
-0002e4: 									SREG = .Z......
+0002e4: 									SREG = .Z.....I
 0002e6: inc r8[00] = 01
-0002e6: 									SREG = ........
+0002e6: 									SREG = .......I
 0002e8: mov r9, r1[00] = 00
 0002ea: add r8[01], YL[ab] = ac
-0002ea: 									SREG = ..NV....
+0002ea: 									SREG = ..N.S..I
 0002ec: addc r9[00], YH[02] = 02
-0002ec: 									SREG = ........
+0002ec: 									SREG = .......I
 0002ee: movw ZL:ZH, r14:r15[02cc]
-0002f0: ld r25, (ZL+3[02cf])=[06]
+0002f0: ld r25, (Z+3[02cf])=[06]
 0002f2: movw ZL:ZH, r12:r13[0100]
 0002f4: sbrc r25[06], 0x08	; Will branch
 0002f8: sbrs r25[06], 0x08	; Will not branch
-0002fa: ld r24, ZL[0101]++
+0002fa: ld r24, Z[0100]++
 0002fc: movw r12:r13, ZL:ZH[0101]
 0002fe: tst r24[25]
-0002fe: 									SREG = ........
+0002fe: 									SREG = .......I
 000300: brne .1 [0304]	; Will branch
 000304: cpi r24[25], 0x25
-000304: 									SREG = .Z......
+000304: 									SREG = .Z.....I
 000306: brne .7 [0316]	; Will not branch
 000308: sbrc r25[06], 0x08	; Will branch
 00030c: sbrs r25[06], 0x08	; Will not branch
-00030e: ld r24, ZL[0102]++
+00030e: ld r24, Z[0101]++
 000310: movw r12:r13, ZL:ZH[0102]
 000312: cpi r24[32], 0x25
-000312: 									SREG = .....H..
+000312: 									SREG = .....H.I
 000314: brne .4 [031e]	; Will branch
 00031e: mov r7, r1[00] = 00
 000320: mov r3, r1[00] = 00
 000322: ldi r18, 0x00
 000324: cpi r18[00], 0x20
-000324: 									SREG = C.N.S...
+000324: 									SREG = C.N.S..I
 000326: brcc .21 [0352]	; Will not branch
 000328: cpi r24[32], 0x2b
-000328: 									SREG = .....H..
+000328: 									SREG = .....H.I
 00032a: breq .12 [0344]	; Will not branch
 00032c: brcc .5 [0338]	; Will branch
 000338: cpi r24[32], 0x2d
-000338: 									SREG = .....H..
+000338: 									SREG = .....H.I
 00033a: breq .7 [034a]	; Will not branch
 00033c: cpi r24[32], 0x30
-00033c: 									SREG = ........
+00033c: 									SREG = .......I
 00033e: brne .9 [0352]	; Will branch
 000352: sbrc r18[00], 0x80	; Will branch
 000356: mov r19, r24[32] = 32
 000358: subi r19[32], 0x30 = 02
-000358: 									SREG = ........
+000358: 									SREG = .......I
 00035a: cpi r19[02], 0x0a
-00035a: 									SREG = C.N.SH..
+00035a: 									SREG = C.N.SH.I
 00035c: brcc .15 [037c]	; Will not branch
 00035e: sbrs r18[00], 0x40	; Will not branch
 000360: rjmp .6 [036e]
 00036e: ldi r24, 0x0a
 000370: mul r3[00], r24[0a] = 0000
-000370: 									SREG = .ZN.SH..
+000370: 									SREG = .ZN.SH.I
 000372: add r19[02], r0[00] = 02
-000372: 									SREG = ........
+000372: 									SREG = .......I
 000374: clr r1[00]
-000374: 									SREG = .Z......
+000374: 									SREG = .Z.....I
 000376: mov r3, r19[02] = 02
 000378: ori r18[00], 0x20
-000378: 									SREG = ........
+000378: 									SREG = .......I
 00037a: rjmp .12 [0394]
 000394: movw ZL:ZH, r12:r13[0102]
 000396: sbrc r25[06], 0x08	; Will branch
 00039a: sbrs r25[06], 0x08	; Will not branch
-00039c: ld r24, ZL[0103]++
+00039c: ld r24, Z[0102]++
 00039e: movw r12:r13, ZL:ZH[0103]
 0003a0: cpse r24[64], r1[00]	; Will not skip
 0003a2: rjmp .-64 [0324]
 000324: cpi r18[20], 0x20
-000324: 									SREG = .Z......
+000324: 									SREG = .Z.....I
 000326: brcc .21 [0352]	; Will branch
 000352: sbrc r18[20], 0x80	; Will branch
 000356: mov r19, r24[64] = 64
 000358: subi r19[64], 0x30 = 34
-000358: 									SREG = ........
+000358: 									SREG = .......I
 00035a: cpi r19[34], 0x0a
-00035a: 									SREG = .....H..
+00035a: 									SREG = .....H.I
 00035c: brcc .15 [037c]	; Will branch
 00037c: cpi r24[64], 0x2e
-00037c: 									SREG = .....H..
+00037c: 									SREG = .....H.I
 00037e: brne .4 [0388]	; Will branch
 000388: cpi r24[64], 0x6c
-000388: 									SREG = C.N.SH..
+000388: 									SREG = C.N.SH.I
 00038a: brne .2 [0390]	; Will branch
 000390: cpi r24[64], 0x68
-000390: 									SREG = C.N.SH..
+000390: 									SREG = C.N.SH.I
 000392: brne .8 [03a4]	; Will branch
 0003a4: mov r25, r24[64] = 64
 0003a6: subi r25[64], 0x45 = 1f
-0003a6: 									SREG = .....H..
+0003a6: 									SREG = .....H.I
 0003a8: cpi r25[1f], 0x03
-0003a8: 									SREG = ........
+0003a8: 									SREG = .......I
 0003aa: brcs .3 [03b2]	; Will not branch
 0003ac: subi r25[1f], 0x20 = ff
-0003ac: 									SREG = C.N.S...
+0003ac: 									SREG = C.N.S..I
 0003ae: cpi r25[ff], 0x03
-0003ae: 									SREG = ..NV....
+0003ae: 									SREG = ..N.S..I
 0003b0: brcc .5 [03bc]	; Will branch
 0003bc: cpi r24[64], 0x63
-0003bc: 									SREG = ........
+0003bc: 									SREG = .......I
 0003be: breq .6 [03cc]	; Will not branch
 0003c0: cpi r24[64], 0x73
-0003c0: 									SREG = C.N.S...
+0003c0: 									SREG = C.N.S..I
 0003c2: breq .14 [03e0]	; Will not branch
 0003c4: cpi r24[64], 0x53
-0003c4: 									SREG = ........
+0003c4: 									SREG = .......I
 0003c6: breq .1 [03ca]	; Will not branch
 0003c8: rjmp .90 [047e]
 00047e: cpi r24[64], 0x64
-00047e: 									SREG = .Z......
+00047e: 									SREG = .Z.....I
 000480: breq .2 [0486]	; Will branch
 000486: movw ZL:ZH, r16:r17[02e6]
 000488: sbrs r18[20], 0x80	; Will not branch
 00048a: rjmp .7 [049a]
-00049a: ld r22, (ZL+0[02e6])=[00]
-00049c: ld r23, (ZL+1[02e7])=[00]
+00049a: ld r22, (Z+0[02e6])=[00]
+00049c: ld r23, (Z+1[02e7])=[00]
 00049e: clr r24[64]
-00049e: 									SREG = .Z......
+00049e: 									SREG = .Z.....I
 0004a0: sbrc r23[00], 0x80	; Will branch
 0004a4: mov r25, r24[00] = 00
 0004a6: subi r16[e6], 0xfe = e8
-0004a6: 									SREG = C.N.S...
+0004a6: 									SREG = C.N.S..I
 0004a8: sbci r17[02], 0xff = 02
-0004a8: 									SREG = C.......
+0004a8: 									SREG = C......I
 0004aa: ldi r20, 0x6f
 0004ac: mov r6, r20[6f] = 6f
 0004ae: and r6[6f], r18[20] = 20
-0004ae: 									SREG = C.......
+0004ae: 									SREG = C......I
 0004b0: sbrs r25[00], 0x80	; Will not branch
 0004b2: rjmp .9 [04c6]
 0004c6: ldi r18, 0x0a
 0004c8: ldi r19, 0x00
 0004ca: movw r20:r21, r8:r9[02ac]
 0004cc: rcall .269 [06e8]
 0006e8: movw ZL:ZH, r20:r21[02ac]
 0006ea: clr XL[0c]
-0006ea: 									SREG = CZ......
+0006ea: 									SREG = CZ.....I
 0006ec: cpi r18[0a], 0x08
-0006ec: 									SREG = ........
+0006ec: 									SREG = .......I
 0006ee: breq .42 [0744]	; Will not branch
 0006f0: cpi r18[0a], 0x10
-0006f0: 									SREG = C.N.S...
+0006f0: 									SREG = C.N.S..I
 0006f2: breq .48 [0754]	; Will not branch
 0006f4: clt
-0006f4: 									SREG = C.N.S...
+0006f4: 									SREG = C.N.S..I
 0006f6: push r22[00] (@02a8)
 0006f8: andi r22[00], 0xfe
-0006f8: 									SREG = CZ......
+0006f8: 									SREG = CZ.....I
 0006fa: subi r22[00], 0xfe = 02
-0006fa: 									SREG = C.......
+0006fa: 									SREG = C......I
 0006fc: sbci r23[00], 0xff = 00
-0006fc: 									SREG = C.......
+0006fc: 									SREG = C......I
 0006fe: sbci r24[00], 0xff = 00
-0006fe: 									SREG = C.......
+0006fe: 									SREG = C......I
 000700: sbci r25[00], 0xff = 00
-000700: 									SREG = C.......
+000700: 									SREG = C......I
 000702: sbci XL[00], 0xff = 00
-000702: 									SREG = C.......
+000702: 									SREG = C......I
 000704: ldi XH, 0x01
 000706: rcall .62 [0784]
 000784: movw r18:r19, r22:r23[0002]
 000786: movw r20:r21, r24:r25[0000]
 000788: mov r0, XL[00] = 00
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[02]
-000792: 									SREG = ........
+000792: 									SREG = .......I
 000794: dec XH[01] = 00
-000794: 									SREG = .Z......
+000794: 									SREG = .Z.....I
 000796: brne .-7 [078a]	; Will not branch
 000798: add r22[02], r18[01] = 03
-000798: 									SREG = ........
+000798: 									SREG = .......I
 00079a: addc r23[00], r19[00] = 00
-00079a: 									SREG = .Z......
+00079a: 									SREG = .Z.....I
 00079c: addc r24[00], r20[00] = 00
-00079c: 									SREG = .Z......
+00079c: 									SREG = .Z.....I
 00079e: addc r25[00], r21[00] = 00
-00079e: 									SREG = .Z......
+00079e: 									SREG = .Z.....I
 0007a0: addc XL[00], r0[00] = 00
-0007a0: 									SREG = .Z......
+0007a0: 									SREG = .Z.....I
 0007a2: ret
 000708: ldi XH, 0x04
 00070a: rcall .60 [0784]
 000784: movw r18:r19, r22:r23[0003]
 000786: movw r20:r21, r24:r25[0000]
 000788: mov r0, XL[00] = 00
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[03]
-000792: 									SREG = C..VS...
+000792: 									SREG = C..VS..I
 000794: dec XH[04] = 03
-000794: 									SREG = C.......
+000794: 									SREG = C......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[01]
-000792: 									SREG = CZ.VS...
+000792: 									SREG = CZ.VS..I
 000794: dec XH[03] = 02
-000794: 									SREG = C.......
+000794: 									SREG = C......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[00]
-000792: 									SREG = .Z......
+000792: 									SREG = .Z.....I
 000794: dec XH[02] = 01
-000794: 									SREG = ........
+000794: 									SREG = .......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[00]
-000792: 									SREG = .Z......
+000792: 									SREG = .Z.....I
 000794: dec XH[01] = 00
-000794: 									SREG = .Z......
+000794: 									SREG = .Z.....I
 000796: brne .-7 [078a]	; Will not branch
 000798: add r22[03], r18[00] = 03
-000798: 									SREG = ........
+000798: 									SREG = .......I
 00079a: addc r23[00], r19[00] = 00
-00079a: 									SREG = .Z......
+00079a: 									SREG = .Z.....I
 00079c: addc r24[00], r20[00] = 00
-00079c: 									SREG = .Z......
+00079c: 									SREG = .Z.....I
 00079e: addc r25[00], r21[00] = 00
-00079e: 									SREG = .Z......
+00079e: 									SREG = .Z.....I
 0007a0: addc XL[00], r0[00] = 00
-0007a0: 									SREG = .Z......
+0007a0: 									SREG = .Z.....I
 0007a2: ret
 00070c: add r22[03], r23[00] = 03
-00070c: 									SREG = ........
+00070c: 									SREG = .......I
 00070e: addc r23[00], r24[00] = 00
-00070e: 									SREG = .Z......
+00070e: 									SREG = .Z.....I
 000710: addc r24[00], r25[00] = 00
-000710: 									SREG = .Z......
+000710: 									SREG = .Z.....I
 000712: addc r25[00], XL[00] = 00
-000712: 									SREG = .Z......
+000712: 									SREG = .Z.....I
 000714: addc XL[00], r1[00] = 00
-000714: 									SREG = .Z......
+000714: 									SREG = .Z.....I
 000716: add r22[03], r24[00] = 03
-000716: 									SREG = ........
+000716: 									SREG = .......I
 000718: addc r23[00], r25[00] = 00
-000718: 									SREG = .Z......
+000718: 									SREG = .Z.....I
 00071a: addc r24[00], XL[00] = 00
-00071a: 									SREG = .Z......
+00071a: 									SREG = .Z.....I
 00071c: addc r25[00], r1[00] = 00
-00071c: 									SREG = .Z......
+00071c: 									SREG = .Z.....I
 00071e: addc XL[00], r1[00] = 00
-00071e: 									SREG = .Z......
+00071e: 									SREG = .Z.....I
 000720: add r22[03], XL[00] = 03
-000720: 									SREG = ........
+000720: 									SREG = .......I
 000722: addc r23[00], r1[00] = 00
-000722: 									SREG = .Z......
+000722: 									SREG = .Z.....I
 000724: addc r24[00], r1[00] = 00
-000724: 									SREG = .Z......
+000724: 									SREG = .Z.....I
 000726: addc r25[00], r1[00] = 00
-000726: 									SREG = .Z......
+000726: 									SREG = .Z.....I
 000728: addc XL[00], r1[00] = 00
-000728: 									SREG = .Z......
+000728: 									SREG = .Z.....I
 00072a: rcall .32 [076c]
 00076c: ldi XH, 0x04
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[03]
-000776: 									SREG = C..VS...
+000776: 									SREG = C..VS..I
 000778: dec XH[04] = 03
-000778: 									SREG = C.......
+000778: 									SREG = C......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[01]
-000776: 									SREG = CZ.VS...
+000776: 									SREG = CZ.VS..I
 000778: dec XH[03] = 02
-000778: 									SREG = C.......
+000778: 									SREG = C......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[00]
-000776: 									SREG = .Z......
+000776: 									SREG = .Z.....I
 000778: dec XH[02] = 01
-000778: 									SREG = ........
+000778: 									SREG = .......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[00]
-000776: 									SREG = .Z......
+000776: 									SREG = .Z.....I
 000778: dec XH[01] = 00
-000778: 									SREG = .Z......
+000778: 									SREG = .Z.....I
 00077a: brne .-7 [076e]	; Will not branch
 00077c: sbiw r24:r25[0000], 0x00
-00077c: 									SREG = .Z......
+00077c: 									SREG = .Z.....I
 00077e: cpc r22[00], r1[00] = 00
-00077e: 									SREG = .Z......
+00077e: 									SREG = .Z.....I
 000780: cpc r23[00], r1[00] = 00
-000780: 									SREG = .Z......
+000780: 									SREG = .Z.....I
 000782: ret
 00072c: brne .1 [0730]	; Will not branch
 00072e: set
-00072e: 									SREG = .Z....T.
+00072e: 									SREG = .Z....TI
 000730: pop r19 (@02a9)[00]
 000732: ldi r18, 0x0a
 000734: mul r18[0a], r22[00] = 0000
-000734: 									SREG = .Z....T.
+000734: 									SREG = .Z....TI
 000736: clr r1[00]
-000736: 									SREG = .Z....T.
+000736: 									SREG = .Z....TI
 000738: sub r19[00], r0[00] = 00
-000738: 									SREG = .Z....T.
+000738: 									SREG = .Z....TI
 00073a: subi r19[00], 0xd0 = 30
-00073a: 									SREG = C.....T.
+00073a: 									SREG = C.....TI
 00073c: st Z[02ac]++, r19[30] 
 00073e: brtc .-37 [06f6]	; Will not branch
 000740: movw r24:r25, ZL:ZH[02ad]
 000742: ret
 0004ce: mov r10, r24[ad] = ad
 0004d0: sub r10[ad], r8[ac] = 01
-0004d0: 									SREG = ...VS.T.
+0004d0: 									SREG = ......TI
 0004d2: rjmp .67 [055a]
 00055a: sbrs r6[20], 0x40	; Will not branch
 00055c: rjmp .11 [0574]
 000574: mov r11, r10[01] = 01
 000576: mov r19, r6[20] = 20
 000578: rjmp .3 [0580]
 000580: sbrs r19[20], 0x10	; Will not branch
 000582: rjmp .13 [059e]
 00059e: mov r24, r19[20] = 20
 0005a0: andi r24[20], 0x86
-0005a0: 									SREG = .Z....T.
+0005a0: 									SREG = .Z....TI
 0005a2: breq .1 [05a6]	; Will branch
 0005a6: sbrc r19[20], 0x08	; Will branch
 0005aa: sbrs r19[20], 0x01	; Will not branch
 0005ac: rjmp .14 [05ca]
 0005ca: cp r11[01], r3[02] = ff
-0005ca: 									SREG = C.N.SHT.
+0005ca: 									SREG = C.N.SHTI
 0005cc: brcs .-9 [05bc]	; Will branch
 0005bc: movw r22:r23, r14:r15[02cc]
 0005be: ldi r24, 0x20
 0005c0: ldi r25, 0x00
-0005c2: st (YL+12[02b7]), r19[13]
+0005c2: st (Y+12[02b7]), r19[20]
 0005c4: rcall .101 [0690]
 000690: push r16[e8] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[0020]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[00]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[00]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[00], r24[ff] = 01
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[ec]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[ec]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02ec]++, r16[20] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ed]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[00]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0000], 0x01 = 0x0001
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[00]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0000], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[01]
 0006dc: movw r24:r25, r16:r17[0020]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[e8]
 0006e6: ret
 0005c6: inc r11[01] = 02
-0005c6: 									SREG = .....HT.
-0005c8: ld r19, (YL+12[02b7])=[20]
+0005c6: 									SREG = .....HTI
+0005c8: ld r19, (Y+12[02b7])=[20]
 0005ca: cp r11[02], r3[02] = 00
-0005ca: 									SREG = .Z....T.
+0005ca: 									SREG = .Z....TI
 0005cc: brcs .-9 [05bc]	; Will not branch
 0005ce: rjmp .4 [05d8]
 0005d8: mov r3, r1[00] = 00
 0005da: sbrs r19[20], 0x10	; Will not branch
 0005dc: rjmp .17 [0600]
 000600: mov r24, r19[20] = 20
 000602: andi r24[20], 0x86
-000602: 									SREG = .Z....T.
+000602: 									SREG = .Z....TI
 000604: breq .16 [0626]	; Will branch
 000626: cp r10[01], r7[00] = 01
-000626: 									SREG = ......T.
+000626: 									SREG = ......TI
 000628: brcs .-7 [061c]	; Will not branch
 00062a: dec r10[01] = 00
-00062a: 									SREG = .Z....T.
+00062a: 									SREG = .Z....TI
 00062c: movw ZL:ZH, r8:r9[02ac]
 00062e: add ZL[ac], r10[00] = ac
-00062e: 									SREG = ..NV..T.
+00062e: 									SREG = ..N.S.TI
 000630: addc ZH[02], r1[00] = 02
-000630: 									SREG = ......T.
+000630: 									SREG = ......TI
 000632: movw r22:r23, r14:r15[02cc]
-000634: ld r24, (ZL+0[02ac])=[30]
+000634: ld r24, (Z+0[02ac])=[30]
 000636: ldi r25, 0x00
 000638: rcall .43 [0690]
 000690: push r16[e8] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[0030]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[01]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[01]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[01], r24[ff] = 02
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[ed]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[ed]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02ed]++, r16[30] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ee]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[01]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0001], 0x01 = 0x0002
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[01]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0001], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[02]
 0006dc: movw r24:r25, r16:r17[0030]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[e8]
 0006e6: ret
 00063a: cpse r10[00], r1[00]	; Will skip
 00063e: rjmp .5 [064a]
 00064a: cpse r3[00], r1[00]	; Will skip
 00064e: rjmp .-433 [02ee]
 0002ee: movw ZL:ZH, r14:r15[02cc]
-0002f0: ld r25, (ZL+3[02cf])=[06]
+0002f0: ld r25, (Z+3[02cf])=[06]
 0002f2: movw ZL:ZH, r12:r13[0103]
 0002f4: sbrc r25[06], 0x08	; Will branch
 0002f8: sbrs r25[06], 0x08	; Will not branch
-0002fa: ld r24, ZL[0104]++
+0002fa: ld r24, Z[0103]++
 0002fc: movw r12:r13, ZL:ZH[0104]
 0002fe: tst r24[3a]
-0002fe: 									SREG = .....HT.
+0002fe: 									SREG = .....HTI
 000300: brne .1 [0304]	; Will branch
 000304: cpi r24[3a], 0x25
-000304: 									SREG = ......T.
+000304: 									SREG = ......TI
 000306: brne .7 [0316]	; Will branch
 000316: movw r22:r23, r14:r15[02cc]
 000318: ldi r25, 0x00
 00031a: rcall .442 [0690]
 000690: push r16[e8] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[003a]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[02]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[02]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[02], r24[ff] = 03
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[ee]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[ee]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02ee]++, r16[3a] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ef]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[02]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0002], 0x01 = 0x0003
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[02]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0002], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[03]
 0006dc: movw r24:r25, r16:r17[003a]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[e8]
 0006e6: ret
 00031c: rjmp .-24 [02ee]
 0002ee: movw ZL:ZH, r14:r15[02cc]
-0002f0: ld r25, (ZL+3[02cf])=[06]
+0002f0: ld r25, (Z+3[02cf])=[06]
 0002f2: movw ZL:ZH, r12:r13[0104]
 0002f4: sbrc r25[06], 0x08	; Will branch
 0002f8: sbrs r25[06], 0x08	; Will not branch
-0002fa: ld r24, ZL[0105]++
+0002fa: ld r24, Z[0104]++
 0002fc: movw r12:r13, ZL:ZH[0105]
 0002fe: tst r24[25]
-0002fe: 									SREG = .....HT.
+0002fe: 									SREG = .....HTI
 000300: brne .1 [0304]	; Will branch
 000304: cpi r24[25], 0x25
-000304: 									SREG = .Z....T.
+000304: 									SREG = .Z....TI
 000306: brne .7 [0316]	; Will not branch
 000308: sbrc r25[06], 0x08	; Will branch
 00030c: sbrs r25[06], 0x08	; Will not branch
-00030e: ld r24, ZL[0106]++
+00030e: ld r24, Z[0105]++
 000310: movw r12:r13, ZL:ZH[0106]
 000312: cpi r24[30], 0x25
-000312: 									SREG = .....HT.
+000312: 									SREG = .....HTI
 000314: brne .4 [031e]	; Will branch
 00031e: mov r7, r1[00] = 00
 000320: mov r3, r1[00] = 00
 000322: ldi r18, 0x00
 000324: cpi r18[00], 0x20
-000324: 									SREG = C.N.S.T.
+000324: 									SREG = C.N.S.TI
 000326: brcc .21 [0352]	; Will not branch
 000328: cpi r24[30], 0x2b
-000328: 									SREG = .....HT.
+000328: 									SREG = .....HTI
 00032a: breq .12 [0344]	; Will not branch
 00032c: brcc .5 [0338]	; Will branch
 000338: cpi r24[30], 0x2d
-000338: 									SREG = .....HT.
+000338: 									SREG = .....HTI
 00033a: breq .7 [034a]	; Will not branch
 00033c: cpi r24[30], 0x30
-00033c: 									SREG = .Z....T.
+00033c: 									SREG = .Z....TI
 00033e: brne .9 [0352]	; Will not branch
 000340: ori r18[00], 0x01
-000340: 									SREG = ......T.
+000340: 									SREG = ......TI
 000342: rjmp .40 [0394]
 000394: movw ZL:ZH, r12:r13[0106]
 000396: sbrc r25[06], 0x08	; Will branch
 00039a: sbrs r25[06], 0x08	; Will not branch
-00039c: ld r24, ZL[0107]++
+00039c: ld r24, Z[0106]++
 00039e: movw r12:r13, ZL:ZH[0107]
 0003a0: cpse r24[32], r1[00]	; Will not skip
 0003a2: rjmp .-64 [0324]
 000324: cpi r18[01], 0x20
-000324: 									SREG = C.N.S.T.
+000324: 									SREG = C.N.S.TI
 000326: brcc .21 [0352]	; Will not branch
 000328: cpi r24[32], 0x2b
-000328: 									SREG = .....HT.
+000328: 									SREG = .....HTI
 00032a: breq .12 [0344]	; Will not branch
 00032c: brcc .5 [0338]	; Will branch
 000338: cpi r24[32], 0x2d
-000338: 									SREG = .....HT.
+000338: 									SREG = .....HTI
 00033a: breq .7 [034a]	; Will not branch
 00033c: cpi r24[32], 0x30
-00033c: 									SREG = ......T.
+00033c: 									SREG = ......TI
 00033e: brne .9 [0352]	; Will branch
 000352: sbrc r18[01], 0x80	; Will branch
 000356: mov r19, r24[32] = 32
 000358: subi r19[32], 0x30 = 02
-000358: 									SREG = ......T.
+000358: 									SREG = ......TI
 00035a: cpi r19[02], 0x0a
-00035a: 									SREG = C.N.SHT.
+00035a: 									SREG = C.N.SHTI
 00035c: brcc .15 [037c]	; Will not branch
 00035e: sbrs r18[01], 0x40	; Will not branch
 000360: rjmp .6 [036e]
 00036e: ldi r24, 0x0a
 000370: mul r3[00], r24[0a] = 0000
-000370: 									SREG = .ZN.SHT.
+000370: 									SREG = .ZN.SHTI
 000372: add r19[02], r0[00] = 02
-000372: 									SREG = ......T.
+000372: 									SREG = ......TI
 000374: clr r1[00]
-000374: 									SREG = .Z....T.
+000374: 									SREG = .Z....TI
 000376: mov r3, r19[02] = 02
 000378: ori r18[01], 0x20
-000378: 									SREG = ......T.
+000378: 									SREG = ......TI
 00037a: rjmp .12 [0394]
 000394: movw ZL:ZH, r12:r13[0107]
 000396: sbrc r25[06], 0x08	; Will branch
 00039a: sbrs r25[06], 0x08	; Will not branch
-00039c: ld r24, ZL[0108]++
+00039c: ld r24, Z[0107]++
 00039e: movw r12:r13, ZL:ZH[0108]
 0003a0: cpse r24[64], r1[00]	; Will not skip
 0003a2: rjmp .-64 [0324]
 000324: cpi r18[21], 0x20
-000324: 									SREG = ......T.
+000324: 									SREG = ......TI
 000326: brcc .21 [0352]	; Will branch
 000352: sbrc r18[21], 0x80	; Will branch
 000356: mov r19, r24[64] = 64
 000358: subi r19[64], 0x30 = 34
-000358: 									SREG = ......T.
+000358: 									SREG = ......TI
 00035a: cpi r19[34], 0x0a
-00035a: 									SREG = .....HT.
+00035a: 									SREG = .....HTI
 00035c: brcc .15 [037c]	; Will branch
 00037c: cpi r24[64], 0x2e
-00037c: 									SREG = .....HT.
+00037c: 									SREG = .....HTI
 00037e: brne .4 [0388]	; Will branch
 000388: cpi r24[64], 0x6c
-000388: 									SREG = C.N.SHT.
+000388: 									SREG = C.N.SHTI
 00038a: brne .2 [0390]	; Will branch
 000390: cpi r24[64], 0x68
-000390: 									SREG = C.N.SHT.
+000390: 									SREG = C.N.SHTI
 000392: brne .8 [03a4]	; Will branch
 0003a4: mov r25, r24[64] = 64
 0003a6: subi r25[64], 0x45 = 1f
-0003a6: 									SREG = .....HT.
+0003a6: 									SREG = .....HTI
 0003a8: cpi r25[1f], 0x03
-0003a8: 									SREG = ......T.
+0003a8: 									SREG = ......TI
 0003aa: brcs .3 [03b2]	; Will not branch
 0003ac: subi r25[1f], 0x20 = ff
-0003ac: 									SREG = C.N.S.T.
+0003ac: 									SREG = C.N.S.TI
 0003ae: cpi r25[ff], 0x03
-0003ae: 									SREG = ..NV..T.
+0003ae: 									SREG = ..N.S.TI
 0003b0: brcc .5 [03bc]	; Will branch
 0003bc: cpi r24[64], 0x63
-0003bc: 									SREG = ......T.
+0003bc: 									SREG = ......TI
 0003be: breq .6 [03cc]	; Will not branch
 0003c0: cpi r24[64], 0x73
-0003c0: 									SREG = C.N.S.T.
+0003c0: 									SREG = C.N.S.TI
 0003c2: breq .14 [03e0]	; Will not branch
 0003c4: cpi r24[64], 0x53
-0003c4: 									SREG = ......T.
+0003c4: 									SREG = ......TI
 0003c6: breq .1 [03ca]	; Will not branch
 0003c8: rjmp .90 [047e]
 00047e: cpi r24[64], 0x64
-00047e: 									SREG = .Z....T.
+00047e: 									SREG = .Z....TI
 000480: breq .2 [0486]	; Will branch
 000486: movw ZL:ZH, r16:r17[02e8]
 000488: sbrs r18[21], 0x80	; Will not branch
 00048a: rjmp .7 [049a]
-00049a: ld r22, (ZL+0[02e8])=[00]
-00049c: ld r23, (ZL+1[02e9])=[00]
+00049a: ld r22, (Z+0[02e8])=[00]
+00049c: ld r23, (Z+1[02e9])=[00]
 00049e: clr r24[64]
-00049e: 									SREG = .Z....T.
+00049e: 									SREG = .Z....TI
 0004a0: sbrc r23[00], 0x80	; Will branch
 0004a4: mov r25, r24[00] = 00
 0004a6: subi r16[e8], 0xfe = ea
-0004a6: 									SREG = C.N.S.T.
+0004a6: 									SREG = C.N.S.TI
 0004a8: sbci r17[02], 0xff = 02
-0004a8: 									SREG = C.....T.
+0004a8: 									SREG = C.....TI
 0004aa: ldi r20, 0x6f
 0004ac: mov r6, r20[6f] = 6f
 0004ae: and r6[6f], r18[21] = 21
-0004ae: 									SREG = C.....T.
+0004ae: 									SREG = C.....TI
 0004b0: sbrs r25[00], 0x80	; Will not branch
 0004b2: rjmp .9 [04c6]
 0004c6: ldi r18, 0x0a
 0004c8: ldi r19, 0x00
 0004ca: movw r20:r21, r8:r9[02ac]
 0004cc: rcall .269 [06e8]
 0006e8: movw ZL:ZH, r20:r21[02ac]
 0006ea: clr XL[00]
-0006ea: 									SREG = CZ....T.
+0006ea: 									SREG = CZ....TI
 0006ec: cpi r18[0a], 0x08
-0006ec: 									SREG = ......T.
+0006ec: 									SREG = ......TI
 0006ee: breq .42 [0744]	; Will not branch
 0006f0: cpi r18[0a], 0x10
-0006f0: 									SREG = C.N.S.T.
+0006f0: 									SREG = C.N.S.TI
 0006f2: breq .48 [0754]	; Will not branch
 0006f4: clt
-0006f4: 									SREG = C.N.S...
+0006f4: 									SREG = C.N.S..I
 0006f6: push r22[00] (@02a8)
 0006f8: andi r22[00], 0xfe
-0006f8: 									SREG = CZ......
+0006f8: 									SREG = CZ.....I
 0006fa: subi r22[00], 0xfe = 02
-0006fa: 									SREG = C.......
+0006fa: 									SREG = C......I
 0006fc: sbci r23[00], 0xff = 00
-0006fc: 									SREG = C.......
+0006fc: 									SREG = C......I
 0006fe: sbci r24[00], 0xff = 00
-0006fe: 									SREG = C.......
+0006fe: 									SREG = C......I
 000700: sbci r25[00], 0xff = 00
-000700: 									SREG = C.......
+000700: 									SREG = C......I
 000702: sbci XL[00], 0xff = 00
-000702: 									SREG = C.......
+000702: 									SREG = C......I
 000704: ldi XH, 0x01
 000706: rcall .62 [0784]
 000784: movw r18:r19, r22:r23[0002]
 000786: movw r20:r21, r24:r25[0000]
 000788: mov r0, XL[00] = 00
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[02]
-000792: 									SREG = ........
+000792: 									SREG = .......I
 000794: dec XH[01] = 00
-000794: 									SREG = .Z......
+000794: 									SREG = .Z.....I
 000796: brne .-7 [078a]	; Will not branch
 000798: add r22[02], r18[01] = 03
-000798: 									SREG = ........
+000798: 									SREG = .......I
 00079a: addc r23[00], r19[00] = 00
-00079a: 									SREG = .Z......
+00079a: 									SREG = .Z.....I
 00079c: addc r24[00], r20[00] = 00
-00079c: 									SREG = .Z......
+00079c: 									SREG = .Z.....I
 00079e: addc r25[00], r21[00] = 00
-00079e: 									SREG = .Z......
+00079e: 									SREG = .Z.....I
 0007a0: addc XL[00], r0[00] = 00
-0007a0: 									SREG = .Z......
+0007a0: 									SREG = .Z.....I
 0007a2: ret
 000708: ldi XH, 0x04
 00070a: rcall .60 [0784]
 000784: movw r18:r19, r22:r23[0003]
 000786: movw r20:r21, r24:r25[0000]
 000788: mov r0, XL[00] = 00
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[03]
-000792: 									SREG = C..VS...
+000792: 									SREG = C..VS..I
 000794: dec XH[04] = 03
-000794: 									SREG = C.......
+000794: 									SREG = C......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[01]
-000792: 									SREG = CZ.VS...
+000792: 									SREG = CZ.VS..I
 000794: dec XH[03] = 02
-000794: 									SREG = C.......
+000794: 									SREG = C......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[00]
-000792: 									SREG = .Z......
+000792: 									SREG = .Z.....I
 000794: dec XH[02] = 01
-000794: 									SREG = ........
+000794: 									SREG = .......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[00]
-000792: 									SREG = .Z......
+000792: 									SREG = .Z.....I
 000794: dec XH[01] = 00
-000794: 									SREG = .Z......
+000794: 									SREG = .Z.....I
 000796: brne .-7 [078a]	; Will not branch
 000798: add r22[03], r18[00] = 03
-000798: 									SREG = ........
+000798: 									SREG = .......I
 00079a: addc r23[00], r19[00] = 00
-00079a: 									SREG = .Z......
+00079a: 									SREG = .Z.....I
 00079c: addc r24[00], r20[00] = 00
-00079c: 									SREG = .Z......
+00079c: 									SREG = .Z.....I
 00079e: addc r25[00], r21[00] = 00
-00079e: 									SREG = .Z......
+00079e: 									SREG = .Z.....I
 0007a0: addc XL[00], r0[00] = 00
-0007a0: 									SREG = .Z......
+0007a0: 									SREG = .Z.....I
 0007a2: ret
 00070c: add r22[03], r23[00] = 03
-00070c: 									SREG = ........
+00070c: 									SREG = .......I
 00070e: addc r23[00], r24[00] = 00
-00070e: 									SREG = .Z......
+00070e: 									SREG = .Z.....I
 000710: addc r24[00], r25[00] = 00
-000710: 									SREG = .Z......
+000710: 									SREG = .Z.....I
 000712: addc r25[00], XL[00] = 00
-000712: 									SREG = .Z......
+000712: 									SREG = .Z.....I
 000714: addc XL[00], r1[00] = 00
-000714: 									SREG = .Z......
+000714: 									SREG = .Z.....I
 000716: add r22[03], r24[00] = 03
-000716: 									SREG = ........
+000716: 									SREG = .......I
 000718: addc r23[00], r25[00] = 00
-000718: 									SREG = .Z......
+000718: 									SREG = .Z.....I
 00071a: addc r24[00], XL[00] = 00
-00071a: 									SREG = .Z......
+00071a: 									SREG = .Z.....I
 00071c: addc r25[00], r1[00] = 00
-00071c: 									SREG = .Z......
+00071c: 									SREG = .Z.....I
 00071e: addc XL[00], r1[00] = 00
-00071e: 									SREG = .Z......
+00071e: 									SREG = .Z.....I
 000720: add r22[03], XL[00] = 03
-000720: 									SREG = ........
+000720: 									SREG = .......I
 000722: addc r23[00], r1[00] = 00
-000722: 									SREG = .Z......
+000722: 									SREG = .Z.....I
 000724: addc r24[00], r1[00] = 00
-000724: 									SREG = .Z......
+000724: 									SREG = .Z.....I
 000726: addc r25[00], r1[00] = 00
-000726: 									SREG = .Z......
+000726: 									SREG = .Z.....I
 000728: addc XL[00], r1[00] = 00
-000728: 									SREG = .Z......
+000728: 									SREG = .Z.....I
 00072a: rcall .32 [076c]
 00076c: ldi XH, 0x04
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[03]
-000776: 									SREG = C..VS...
+000776: 									SREG = C..VS..I
 000778: dec XH[04] = 03
-000778: 									SREG = C.......
+000778: 									SREG = C......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[01]
-000776: 									SREG = CZ.VS...
+000776: 									SREG = CZ.VS..I
 000778: dec XH[03] = 02
-000778: 									SREG = C.......
+000778: 									SREG = C......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[00]
-000776: 									SREG = .Z......
+000776: 									SREG = .Z.....I
 000778: dec XH[02] = 01
-000778: 									SREG = ........
+000778: 									SREG = .......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[00]
-000776: 									SREG = .Z......
+000776: 									SREG = .Z.....I
 000778: dec XH[01] = 00
-000778: 									SREG = .Z......
+000778: 									SREG = .Z.....I
 00077a: brne .-7 [076e]	; Will not branch
 00077c: sbiw r24:r25[0000], 0x00
-00077c: 									SREG = .Z......
+00077c: 									SREG = .Z.....I
 00077e: cpc r22[00], r1[00] = 00
-00077e: 									SREG = .Z......
+00077e: 									SREG = .Z.....I
 000780: cpc r23[00], r1[00] = 00
-000780: 									SREG = .Z......
+000780: 									SREG = .Z.....I
 000782: ret
 00072c: brne .1 [0730]	; Will not branch
 00072e: set
-00072e: 									SREG = .Z....T.
+00072e: 									SREG = .Z....TI
 000730: pop r19 (@02a9)[00]
 000732: ldi r18, 0x0a
 000734: mul r18[0a], r22[00] = 0000
-000734: 									SREG = .Z....T.
+000734: 									SREG = .Z....TI
 000736: clr r1[00]
-000736: 									SREG = .Z....T.
+000736: 									SREG = .Z....TI
 000738: sub r19[00], r0[00] = 00
-000738: 									SREG = .Z....T.
+000738: 									SREG = .Z....TI
 00073a: subi r19[00], 0xd0 = 30
-00073a: 									SREG = C.....T.
+00073a: 									SREG = C.....TI
 00073c: st Z[02ac]++, r19[30] 
 00073e: brtc .-37 [06f6]	; Will not branch
 000740: movw r24:r25, ZL:ZH[02ad]
 000742: ret
 0004ce: mov r10, r24[ad] = ad
 0004d0: sub r10[ad], r8[ac] = 01
-0004d0: 									SREG = ...VS.T.
+0004d0: 									SREG = ......TI
 0004d2: rjmp .67 [055a]
 00055a: sbrs r6[21], 0x40	; Will not branch
 00055c: rjmp .11 [0574]
 000574: mov r11, r10[01] = 01
 000576: mov r19, r6[21] = 21
 000578: rjmp .3 [0580]
 000580: sbrs r19[21], 0x10	; Will not branch
 000582: rjmp .13 [059e]
 00059e: mov r24, r19[21] = 21
 0005a0: andi r24[21], 0x86
-0005a0: 									SREG = .Z....T.
+0005a0: 									SREG = .Z....TI
 0005a2: breq .1 [05a6]	; Will branch
 0005a6: sbrc r19[21], 0x08	; Will branch
 0005aa: sbrs r19[21], 0x01	; Will branch
 0005ae: mov r7, r10[01] = 01
 0005b0: cp r11[01], r3[02] = ff
-0005b0: 									SREG = C.N.SHT.
+0005b0: 									SREG = C.N.SHTI
 0005b2: brcc .11 [05ca]	; Will not branch
 0005b4: add r7[01], r3[02] = 03
-0005b4: 									SREG = ......T.
+0005b4: 									SREG = ......TI
 0005b6: sub r7[03], r11[01] = 02
-0005b6: 									SREG = ......T.
+0005b6: 									SREG = ......TI
 0005b8: mov r11, r3[02] = 02
 0005ba: rjmp .7 [05ca]
 0005ca: cp r11[02], r3[02] = 00
-0005ca: 									SREG = .Z....T.
+0005ca: 									SREG = .Z....TI
 0005cc: brcs .-9 [05bc]	; Will not branch
 0005ce: rjmp .4 [05d8]
 0005d8: mov r3, r1[00] = 00
 0005da: sbrs r19[21], 0x10	; Will not branch
 0005dc: rjmp .17 [0600]
 000600: mov r24, r19[21] = 21
 000602: andi r24[21], 0x86
-000602: 									SREG = .Z....T.
+000602: 									SREG = .Z....TI
 000604: breq .16 [0626]	; Will branch
 000626: cp r10[01], r7[02] = ff
-000626: 									SREG = C.N.SHT.
+000626: 									SREG = C.N.SHTI
 000628: brcs .-7 [061c]	; Will branch
 00061c: movw r22:r23, r14:r15[02cc]
 00061e: ldi r24, 0x30
 000620: ldi r25, 0x00
 000622: rcall .54 [0690]
 000690: push r16[ea] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[0030]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[03]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[03]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[03], r24[ff] = 04
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[ef]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[ef]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02ef]++, r16[30] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f0]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[03]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0003], 0x01 = 0x0004
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[03]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0003], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[04]
 0006dc: movw r24:r25, r16:r17[0030]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[ea]
 0006e6: ret
 000624: dec r7[02] = 01
-000624: 									SREG = .....HT.
+000624: 									SREG = .....HTI
 000626: cp r10[01], r7[01] = 00
-000626: 									SREG = .Z....T.
+000626: 									SREG = .Z....TI
 000628: brcs .-7 [061c]	; Will not branch
 00062a: dec r10[01] = 00
-00062a: 									SREG = .Z....T.
+00062a: 									SREG = .Z....TI
 00062c: movw ZL:ZH, r8:r9[02ac]
 00062e: add ZL[ac], r10[00] = ac
-00062e: 									SREG = ..NV..T.
+00062e: 									SREG = ..N.S.TI
 000630: addc ZH[02], r1[00] = 02
-000630: 									SREG = ......T.
+000630: 									SREG = ......TI
 000632: movw r22:r23, r14:r15[02cc]
-000634: ld r24, (ZL+0[02ac])=[30]
+000634: ld r24, (Z+0[02ac])=[30]
 000636: ldi r25, 0x00
 000638: rcall .43 [0690]
 000690: push r16[ea] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[0030]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[04]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[04]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[04], r24[ff] = 05
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[f0]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[f0]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02f0]++, r16[30] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f1]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[04]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0004], 0x01 = 0x0005
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[04]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0004], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[05]
 0006dc: movw r24:r25, r16:r17[0030]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[ea]
 0006e6: ret
 00063a: cpse r10[00], r1[00]	; Will skip
 00063e: rjmp .5 [064a]
 00064a: cpse r3[00], r1[00]	; Will skip
 00064e: rjmp .-433 [02ee]
 0002ee: movw ZL:ZH, r14:r15[02cc]
-0002f0: ld r25, (ZL+3[02cf])=[06]
+0002f0: ld r25, (Z+3[02cf])=[06]
 0002f2: movw ZL:ZH, r12:r13[0108]
 0002f4: sbrc r25[06], 0x08	; Will branch
 0002f8: sbrs r25[06], 0x08	; Will not branch
-0002fa: ld r24, ZL[0109]++
+0002fa: ld r24, Z[0108]++
 0002fc: movw r12:r13, ZL:ZH[0109]
 0002fe: tst r24[3a]
-0002fe: 									SREG = .....HT.
+0002fe: 									SREG = .....HTI
 000300: brne .1 [0304]	; Will branch
 000304: cpi r24[3a], 0x25
-000304: 									SREG = ......T.
+000304: 									SREG = ......TI
 000306: brne .7 [0316]	; Will branch
 000316: movw r22:r23, r14:r15[02cc]
 000318: ldi r25, 0x00
 00031a: rcall .442 [0690]
 000690: push r16[ea] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[003a]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[05]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[05]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[05], r24[ff] = 06
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[f1]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[f1]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02f1]++, r16[3a] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f2]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[05]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0005], 0x01 = 0x0006
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[05]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0005], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[06]
 0006dc: movw r24:r25, r16:r17[003a]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[ea]
 0006e6: ret
 00031c: rjmp .-24 [02ee]
 0002ee: movw ZL:ZH, r14:r15[02cc]
-0002f0: ld r25, (ZL+3[02cf])=[06]
+0002f0: ld r25, (Z+3[02cf])=[06]
 0002f2: movw ZL:ZH, r12:r13[0109]
 0002f4: sbrc r25[06], 0x08	; Will branch
 0002f8: sbrs r25[06], 0x08	; Will not branch
-0002fa: ld r24, ZL[010a]++
+0002fa: ld r24, Z[0109]++
 0002fc: movw r12:r13, ZL:ZH[010a]
 0002fe: tst r24[25]
-0002fe: 									SREG = .....HT.
+0002fe: 									SREG = .....HTI
 000300: brne .1 [0304]	; Will branch
 000304: cpi r24[25], 0x25
-000304: 									SREG = .Z....T.
+000304: 									SREG = .Z....TI
 000306: brne .7 [0316]	; Will not branch
 000308: sbrc r25[06], 0x08	; Will branch
 00030c: sbrs r25[06], 0x08	; Will not branch
-00030e: ld r24, ZL[010b]++
+00030e: ld r24, Z[010a]++
 000310: movw r12:r13, ZL:ZH[010b]
 000312: cpi r24[30], 0x25
-000312: 									SREG = .....HT.
+000312: 									SREG = .....HTI
 000314: brne .4 [031e]	; Will branch
 00031e: mov r7, r1[00] = 00
 000320: mov r3, r1[00] = 00
 000322: ldi r18, 0x00
 000324: cpi r18[00], 0x20
-000324: 									SREG = C.N.S.T.
+000324: 									SREG = C.N.S.TI
 000326: brcc .21 [0352]	; Will not branch
 000328: cpi r24[30], 0x2b
-000328: 									SREG = .....HT.
+000328: 									SREG = .....HTI
 00032a: breq .12 [0344]	; Will not branch
 00032c: brcc .5 [0338]	; Will branch
 000338: cpi r24[30], 0x2d
-000338: 									SREG = .....HT.
+000338: 									SREG = .....HTI
 00033a: breq .7 [034a]	; Will not branch
 00033c: cpi r24[30], 0x30
-00033c: 									SREG = .Z....T.
+00033c: 									SREG = .Z....TI
 00033e: brne .9 [0352]	; Will not branch
 000340: ori r18[00], 0x01
-000340: 									SREG = ......T.
+000340: 									SREG = ......TI
 000342: rjmp .40 [0394]
 000394: movw ZL:ZH, r12:r13[010b]
 000396: sbrc r25[06], 0x08	; Will branch
 00039a: sbrs r25[06], 0x08	; Will not branch
-00039c: ld r24, ZL[010c]++
+00039c: ld r24, Z[010b]++
 00039e: movw r12:r13, ZL:ZH[010c]
 0003a0: cpse r24[32], r1[00]	; Will not skip
 0003a2: rjmp .-64 [0324]
 000324: cpi r18[01], 0x20
-000324: 									SREG = C.N.S.T.
+000324: 									SREG = C.N.S.TI
 000326: brcc .21 [0352]	; Will not branch
 000328: cpi r24[32], 0x2b
-000328: 									SREG = .....HT.
+000328: 									SREG = .....HTI
 00032a: breq .12 [0344]	; Will not branch
 00032c: brcc .5 [0338]	; Will branch
 000338: cpi r24[32], 0x2d
-000338: 									SREG = .....HT.
+000338: 									SREG = .....HTI
 00033a: breq .7 [034a]	; Will not branch
 00033c: cpi r24[32], 0x30
-00033c: 									SREG = ......T.
+00033c: 									SREG = ......TI
 00033e: brne .9 [0352]	; Will branch
 000352: sbrc r18[01], 0x80	; Will branch
 000356: mov r19, r24[32] = 32
 000358: subi r19[32], 0x30 = 02
-000358: 									SREG = ......T.
+000358: 									SREG = ......TI
 00035a: cpi r19[02], 0x0a
-00035a: 									SREG = C.N.SHT.
+00035a: 									SREG = C.N.SHTI
 00035c: brcc .15 [037c]	; Will not branch
 00035e: sbrs r18[01], 0x40	; Will not branch
 000360: rjmp .6 [036e]
 00036e: ldi r24, 0x0a
 000370: mul r3[00], r24[0a] = 0000
-000370: 									SREG = .ZN.SHT.
+000370: 									SREG = .ZN.SHTI
 000372: add r19[02], r0[00] = 02
-000372: 									SREG = ......T.
+000372: 									SREG = ......TI
 000374: clr r1[00]
-000374: 									SREG = .Z....T.
+000374: 									SREG = .Z....TI
 000376: mov r3, r19[02] = 02
 000378: ori r18[01], 0x20
-000378: 									SREG = ......T.
+000378: 									SREG = ......TI
 00037a: rjmp .12 [0394]
 000394: movw ZL:ZH, r12:r13[010c]
 000396: sbrc r25[06], 0x08	; Will branch
 00039a: sbrs r25[06], 0x08	; Will not branch
-00039c: ld r24, ZL[010d]++
+00039c: ld r24, Z[010c]++
 00039e: movw r12:r13, ZL:ZH[010d]
 0003a0: cpse r24[64], r1[00]	; Will not skip
 0003a2: rjmp .-64 [0324]
 000324: cpi r18[21], 0x20
-000324: 									SREG = ......T.
+000324: 									SREG = ......TI
 000326: brcc .21 [0352]	; Will branch
 000352: sbrc r18[21], 0x80	; Will branch
 000356: mov r19, r24[64] = 64
 000358: subi r19[64], 0x30 = 34
-000358: 									SREG = ......T.
+000358: 									SREG = ......TI
 00035a: cpi r19[34], 0x0a
-00035a: 									SREG = .....HT.
+00035a: 									SREG = .....HTI
 00035c: brcc .15 [037c]	; Will branch
 00037c: cpi r24[64], 0x2e
-00037c: 									SREG = .....HT.
+00037c: 									SREG = .....HTI
 00037e: brne .4 [0388]	; Will branch
 000388: cpi r24[64], 0x6c
-000388: 									SREG = C.N.SHT.
+000388: 									SREG = C.N.SHTI
 00038a: brne .2 [0390]	; Will branch
 000390: cpi r24[64], 0x68
-000390: 									SREG = C.N.SHT.
+000390: 									SREG = C.N.SHTI
 000392: brne .8 [03a4]	; Will branch
 0003a4: mov r25, r24[64] = 64
 0003a6: subi r25[64], 0x45 = 1f
-0003a6: 									SREG = .....HT.
+0003a6: 									SREG = .....HTI
 0003a8: cpi r25[1f], 0x03
-0003a8: 									SREG = ......T.
+0003a8: 									SREG = ......TI
 0003aa: brcs .3 [03b2]	; Will not branch
 0003ac: subi r25[1f], 0x20 = ff
-0003ac: 									SREG = C.N.S.T.
+0003ac: 									SREG = C.N.S.TI
 0003ae: cpi r25[ff], 0x03
-0003ae: 									SREG = ..NV..T.
+0003ae: 									SREG = ..N.S.TI
 0003b0: brcc .5 [03bc]	; Will branch
 0003bc: cpi r24[64], 0x63
-0003bc: 									SREG = ......T.
+0003bc: 									SREG = ......TI
 0003be: breq .6 [03cc]	; Will not branch
 0003c0: cpi r24[64], 0x73
-0003c0: 									SREG = C.N.S.T.
+0003c0: 									SREG = C.N.S.TI
 0003c2: breq .14 [03e0]	; Will not branch
 0003c4: cpi r24[64], 0x53
-0003c4: 									SREG = ......T.
+0003c4: 									SREG = ......TI
 0003c6: breq .1 [03ca]	; Will not branch
 0003c8: rjmp .90 [047e]
 00047e: cpi r24[64], 0x64
-00047e: 									SREG = .Z....T.
+00047e: 									SREG = .Z....TI
 000480: breq .2 [0486]	; Will branch
 000486: movw ZL:ZH, r16:r17[02ea]
 000488: sbrs r18[21], 0x80	; Will not branch
 00048a: rjmp .7 [049a]
-00049a: ld r22, (ZL+0[02ea])=[01]
-00049c: ld r23, (ZL+1[02eb])=[00]
+00049a: ld r22, (Z+0[02ea])=[01]
+00049c: ld r23, (Z+1[02eb])=[00]
 00049e: clr r24[64]
-00049e: 									SREG = .Z....T.
+00049e: 									SREG = .Z....TI
 0004a0: sbrc r23[00], 0x80	; Will branch
 0004a4: mov r25, r24[00] = 00
 0004a6: subi r16[ea], 0xfe = ec
-0004a6: 									SREG = C.N.S.T.
+0004a6: 									SREG = C.N.S.TI
 0004a8: sbci r17[02], 0xff = 02
-0004a8: 									SREG = C.....T.
+0004a8: 									SREG = C.....TI
 0004aa: ldi r20, 0x6f
 0004ac: mov r6, r20[6f] = 6f
 0004ae: and r6[6f], r18[21] = 21
-0004ae: 									SREG = C.....T.
+0004ae: 									SREG = C.....TI
 0004b0: sbrs r25[00], 0x80	; Will not branch
 0004b2: rjmp .9 [04c6]
 0004c6: ldi r18, 0x0a
 0004c8: ldi r19, 0x00
 0004ca: movw r20:r21, r8:r9[02ac]
 0004cc: rcall .269 [06e8]
 0006e8: movw ZL:ZH, r20:r21[02ac]
 0006ea: clr XL[00]
-0006ea: 									SREG = CZ....T.
+0006ea: 									SREG = CZ....TI
 0006ec: cpi r18[0a], 0x08
-0006ec: 									SREG = ......T.
+0006ec: 									SREG = ......TI
 0006ee: breq .42 [0744]	; Will not branch
 0006f0: cpi r18[0a], 0x10
-0006f0: 									SREG = C.N.S.T.
+0006f0: 									SREG = C.N.S.TI
 0006f2: breq .48 [0754]	; Will not branch
 0006f4: clt
-0006f4: 									SREG = C.N.S...
+0006f4: 									SREG = C.N.S..I
 0006f6: push r22[01] (@02a8)
 0006f8: andi r22[01], 0xfe
-0006f8: 									SREG = CZ......
+0006f8: 									SREG = CZ.....I
 0006fa: subi r22[00], 0xfe = 02
-0006fa: 									SREG = C.......
+0006fa: 									SREG = C......I
 0006fc: sbci r23[00], 0xff = 00
-0006fc: 									SREG = C.......
+0006fc: 									SREG = C......I
 0006fe: sbci r24[00], 0xff = 00
-0006fe: 									SREG = C.......
+0006fe: 									SREG = C......I
 000700: sbci r25[00], 0xff = 00
-000700: 									SREG = C.......
+000700: 									SREG = C......I
 000702: sbci XL[00], 0xff = 00
-000702: 									SREG = C.......
+000702: 									SREG = C......I
 000704: ldi XH, 0x01
 000706: rcall .62 [0784]
 000784: movw r18:r19, r22:r23[0002]
 000786: movw r20:r21, r24:r25[0000]
 000788: mov r0, XL[00] = 00
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[02]
-000792: 									SREG = ........
+000792: 									SREG = .......I
 000794: dec XH[01] = 00
-000794: 									SREG = .Z......
+000794: 									SREG = .Z.....I
 000796: brne .-7 [078a]	; Will not branch
 000798: add r22[02], r18[01] = 03
-000798: 									SREG = ........
+000798: 									SREG = .......I
 00079a: addc r23[00], r19[00] = 00
-00079a: 									SREG = .Z......
+00079a: 									SREG = .Z.....I
 00079c: addc r24[00], r20[00] = 00
-00079c: 									SREG = .Z......
+00079c: 									SREG = .Z.....I
 00079e: addc r25[00], r21[00] = 00
-00079e: 									SREG = .Z......
+00079e: 									SREG = .Z.....I
 0007a0: addc XL[00], r0[00] = 00
-0007a0: 									SREG = .Z......
+0007a0: 									SREG = .Z.....I
 0007a2: ret
 000708: ldi XH, 0x04
 00070a: rcall .60 [0784]
 000784: movw r18:r19, r22:r23[0003]
 000786: movw r20:r21, r24:r25[0000]
 000788: mov r0, XL[00] = 00
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[03]
-000792: 									SREG = C..VS...
+000792: 									SREG = C..VS..I
 000794: dec XH[04] = 03
-000794: 									SREG = C.......
+000794: 									SREG = C......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[01]
-000792: 									SREG = CZ.VS...
+000792: 									SREG = CZ.VS..I
 000794: dec XH[03] = 02
-000794: 									SREG = C.......
+000794: 									SREG = C......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[00]
-000792: 									SREG = .Z......
+000792: 									SREG = .Z.....I
 000794: dec XH[02] = 01
-000794: 									SREG = ........
+000794: 									SREG = .......I
 000796: brne .-7 [078a]	; Will branch
 00078a: lsr r0[00]
-00078a: 									SREG = .Z......
+00078a: 									SREG = .Z.....I
 00078c: ror r21[00]
-00078c: 									SREG = .Z......
+00078c: 									SREG = .Z.....I
 00078e: ror r20[00]
-00078e: 									SREG = .Z......
+00078e: 									SREG = .Z.....I
 000790: ror r19[00]
-000790: 									SREG = .Z......
+000790: 									SREG = .Z.....I
 000792: ror r18[00]
-000792: 									SREG = .Z......
+000792: 									SREG = .Z.....I
 000794: dec XH[01] = 00
-000794: 									SREG = .Z......
+000794: 									SREG = .Z.....I
 000796: brne .-7 [078a]	; Will not branch
 000798: add r22[03], r18[00] = 03
-000798: 									SREG = ........
+000798: 									SREG = .......I
 00079a: addc r23[00], r19[00] = 00
-00079a: 									SREG = .Z......
+00079a: 									SREG = .Z.....I
 00079c: addc r24[00], r20[00] = 00
-00079c: 									SREG = .Z......
+00079c: 									SREG = .Z.....I
 00079e: addc r25[00], r21[00] = 00
-00079e: 									SREG = .Z......
+00079e: 									SREG = .Z.....I
 0007a0: addc XL[00], r0[00] = 00
-0007a0: 									SREG = .Z......
+0007a0: 									SREG = .Z.....I
 0007a2: ret
 00070c: add r22[03], r23[00] = 03
-00070c: 									SREG = ........
+00070c: 									SREG = .......I
 00070e: addc r23[00], r24[00] = 00
-00070e: 									SREG = .Z......
+00070e: 									SREG = .Z.....I
 000710: addc r24[00], r25[00] = 00
-000710: 									SREG = .Z......
+000710: 									SREG = .Z.....I
 000712: addc r25[00], XL[00] = 00
-000712: 									SREG = .Z......
+000712: 									SREG = .Z.....I
 000714: addc XL[00], r1[00] = 00
-000714: 									SREG = .Z......
+000714: 									SREG = .Z.....I
 000716: add r22[03], r24[00] = 03
-000716: 									SREG = ........
+000716: 									SREG = .......I
 000718: addc r23[00], r25[00] = 00
-000718: 									SREG = .Z......
+000718: 									SREG = .Z.....I
 00071a: addc r24[00], XL[00] = 00
-00071a: 									SREG = .Z......
+00071a: 									SREG = .Z.....I
 00071c: addc r25[00], r1[00] = 00
-00071c: 									SREG = .Z......
+00071c: 									SREG = .Z.....I
 00071e: addc XL[00], r1[00] = 00
-00071e: 									SREG = .Z......
+00071e: 									SREG = .Z.....I
 000720: add r22[03], XL[00] = 03
-000720: 									SREG = ........
+000720: 									SREG = .......I
 000722: addc r23[00], r1[00] = 00
-000722: 									SREG = .Z......
+000722: 									SREG = .Z.....I
 000724: addc r24[00], r1[00] = 00
-000724: 									SREG = .Z......
+000724: 									SREG = .Z.....I
 000726: addc r25[00], r1[00] = 00
-000726: 									SREG = .Z......
+000726: 									SREG = .Z.....I
 000728: addc XL[00], r1[00] = 00
-000728: 									SREG = .Z......
+000728: 									SREG = .Z.....I
 00072a: rcall .32 [076c]
 00076c: ldi XH, 0x04
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[03]
-000776: 									SREG = C..VS...
+000776: 									SREG = C..VS..I
 000778: dec XH[04] = 03
-000778: 									SREG = C.......
+000778: 									SREG = C......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[01]
-000776: 									SREG = CZ.VS...
+000776: 									SREG = CZ.VS..I
 000778: dec XH[03] = 02
-000778: 									SREG = C.......
+000778: 									SREG = C......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[00]
-000776: 									SREG = .Z......
+000776: 									SREG = .Z.....I
 000778: dec XH[02] = 01
-000778: 									SREG = ........
+000778: 									SREG = .......I
 00077a: brne .-7 [076e]	; Will branch
 00076e: lsr XL[00]
-00076e: 									SREG = .Z......
+00076e: 									SREG = .Z.....I
 000770: ror r25[00]
-000770: 									SREG = .Z......
+000770: 									SREG = .Z.....I
 000772: ror r24[00]
-000772: 									SREG = .Z......
+000772: 									SREG = .Z.....I
 000774: ror r23[00]
-000774: 									SREG = .Z......
+000774: 									SREG = .Z.....I
 000776: ror r22[00]
-000776: 									SREG = .Z......
+000776: 									SREG = .Z.....I
 000778: dec XH[01] = 00
-000778: 									SREG = .Z......
+000778: 									SREG = .Z.....I
 00077a: brne .-7 [076e]	; Will not branch
 00077c: sbiw r24:r25[0000], 0x00
-00077c: 									SREG = .Z......
+00077c: 									SREG = .Z.....I
 00077e: cpc r22[00], r1[00] = 00
-00077e: 									SREG = .Z......
+00077e: 									SREG = .Z.....I
 000780: cpc r23[00], r1[00] = 00
-000780: 									SREG = .Z......
+000780: 									SREG = .Z.....I
 000782: ret
 00072c: brne .1 [0730]	; Will not branch
 00072e: set
-00072e: 									SREG = .Z....T.
+00072e: 									SREG = .Z....TI
 000730: pop r19 (@02a9)[01]
 000732: ldi r18, 0x0a
 000734: mul r18[0a], r22[00] = 0000
-000734: 									SREG = .Z....T.
+000734: 									SREG = .Z....TI
 000736: clr r1[00]
-000736: 									SREG = .Z....T.
+000736: 									SREG = .Z....TI
 000738: sub r19[01], r0[00] = 01
-000738: 									SREG = ......T.
+000738: 									SREG = ......TI
 00073a: subi r19[01], 0xd0 = 31
-00073a: 									SREG = C.....T.
+00073a: 									SREG = C.....TI
 00073c: st Z[02ac]++, r19[31] 
 00073e: brtc .-37 [06f6]	; Will not branch
 000740: movw r24:r25, ZL:ZH[02ad]
 000742: ret
 0004ce: mov r10, r24[ad] = ad
 0004d0: sub r10[ad], r8[ac] = 01
-0004d0: 									SREG = ...VS.T.
+0004d0: 									SREG = ......TI
 0004d2: rjmp .67 [055a]
 00055a: sbrs r6[21], 0x40	; Will not branch
 00055c: rjmp .11 [0574]
 000574: mov r11, r10[01] = 01
 000576: mov r19, r6[21] = 21
 000578: rjmp .3 [0580]
 000580: sbrs r19[21], 0x10	; Will not branch
 000582: rjmp .13 [059e]
 00059e: mov r24, r19[21] = 21
 0005a0: andi r24[21], 0x86
-0005a0: 									SREG = .Z....T.
+0005a0: 									SREG = .Z....TI
 0005a2: breq .1 [05a6]	; Will branch
 0005a6: sbrc r19[21], 0x08	; Will branch
 0005aa: sbrs r19[21], 0x01	; Will branch
 0005ae: mov r7, r10[01] = 01
 0005b0: cp r11[01], r3[02] = ff
-0005b0: 									SREG = C.N.SHT.
+0005b0: 									SREG = C.N.SHTI
 0005b2: brcc .11 [05ca]	; Will not branch
 0005b4: add r7[01], r3[02] = 03
-0005b4: 									SREG = ......T.
+0005b4: 									SREG = ......TI
 0005b6: sub r7[03], r11[01] = 02
-0005b6: 									SREG = ......T.
+0005b6: 									SREG = ......TI
 0005b8: mov r11, r3[02] = 02
 0005ba: rjmp .7 [05ca]
 0005ca: cp r11[02], r3[02] = 00
-0005ca: 									SREG = .Z....T.
+0005ca: 									SREG = .Z....TI
 0005cc: brcs .-9 [05bc]	; Will not branch
 0005ce: rjmp .4 [05d8]
 0005d8: mov r3, r1[00] = 00
 0005da: sbrs r19[21], 0x10	; Will not branch
 0005dc: rjmp .17 [0600]
 000600: mov r24, r19[21] = 21
 000602: andi r24[21], 0x86
-000602: 									SREG = .Z....T.
+000602: 									SREG = .Z....TI
 000604: breq .16 [0626]	; Will branch
 000626: cp r10[01], r7[02] = ff
-000626: 									SREG = C.N.SHT.
+000626: 									SREG = C.N.SHTI
 000628: brcs .-7 [061c]	; Will branch
 00061c: movw r22:r23, r14:r15[02cc]
 00061e: ldi r24, 0x30
 000620: ldi r25, 0x00
 000622: rcall .54 [0690]
 000690: push r16[ec] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[0030]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[06]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[06]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[06], r24[ff] = 07
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[f2]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[f2]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02f2]++, r16[30] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f3]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[06]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0006], 0x01 = 0x0007
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[06]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0006], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[07]
 0006dc: movw r24:r25, r16:r17[0030]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[ec]
 0006e6: ret
 000624: dec r7[02] = 01
-000624: 									SREG = .....HT.
+000624: 									SREG = .....HTI
 000626: cp r10[01], r7[01] = 00
-000626: 									SREG = .Z....T.
+000626: 									SREG = .Z....TI
 000628: brcs .-7 [061c]	; Will not branch
 00062a: dec r10[01] = 00
-00062a: 									SREG = .Z....T.
+00062a: 									SREG = .Z....TI
 00062c: movw ZL:ZH, r8:r9[02ac]
 00062e: add ZL[ac], r10[00] = ac
-00062e: 									SREG = ..NV..T.
+00062e: 									SREG = ..N.S.TI
 000630: addc ZH[02], r1[00] = 02
-000630: 									SREG = ......T.
+000630: 									SREG = ......TI
 000632: movw r22:r23, r14:r15[02cc]
-000634: ld r24, (ZL+0[02ac])=[31]
+000634: ld r24, (Z+0[02ac])=[31]
 000636: ldi r25, 0x00
 000638: rcall .43 [0690]
 000690: push r16[ec] (@02a8)
 000692: push r17[02] (@02a7)
 000694: push YL[ab] (@02a6)
 000696: push YH[02] (@02a5)
 000698: movw r16:r17, r24:r25[0031]
 00069a: movw YL:YH, r22:r23[02cc]
-00069c: ld r24, (YL+3[02cf])=[06]
+00069c: ld r24, (Y+3[02cf])=[06]
 00069e: sbrc r24[06], 0x02	; Will not branch
 0006a0: rjmp .3 [06a8]
 0006a8: sbrs r24[06], 0x04	; Will branch
-0006ac: ld r18, (YL+6[02d2])=[07]
-0006ae: ld r19, (YL+7[02d3])=[00]
-0006b0: ld r24, (YL+4[02d0])=[ff]
-0006b2: ld r25, (YL+5[02d1])=[7f]
+0006ac: ld r18, (Y+6[02d2])=[07]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
 0006b4: cp r18[07], r24[ff] = 08
-0006b4: 									SREG = C....HT.
+0006b4: 									SREG = C....HTI
 0006b6: cpc r19[00], r25[7f] = 80
-0006b6: 									SREG = C.N.SHT.
+0006b6: 									SREG = C.N.SHTI
 0006b8: brbcs .12 [06d2]	; Will not branch
-0006ba: ld ZL, (YL+0[02cc])=[f3]
-0006bc: ld ZH, (YL+1[02cd])=[02]
+0006ba: ld ZL, (Y+0[02cc])=[f3]
+0006bc: ld ZH, (Y+1[02cd])=[02]
 0006be: st Z[02f3]++, r16[31] 
-0006c0: st (YL+1[02cd]), ZH[1f]
-0006c2: st (YL+0[02cc]), ZL[1e]
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f4]
 0006c4: rjmp .6 [06d2]
-0006d2: ld r24, (YL+6[02d2])=[07]
-0006d4: ld r25, (YL+7[02d3])=[00]
-0006d6: adiw r24:r25[0007], 0x01 = 0x0008
-0006d6: 									SREG = .....HT.
-0006d8: st (YL+7[02d3]), r25[19]
-0006da: st (YL+6[02d2]), r24[18]
+0006d2: ld r24, (Y+6[02d2])=[07]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0007], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[08]
 0006dc: movw r24:r25, r16:r17[0031]
 0006de: pop YH (@02a6)[02]
 0006e0: pop YL (@02a7)[ab]
 0006e2: pop r17 (@02a8)[02]
 0006e4: pop r16 (@02a9)[ec]
 0006e6: ret
 00063a: cpse r10[00], r1[00]	; Will skip
 00063e: rjmp .5 [064a]
 00064a: cpse r3[00], r1[00]	; Will skip
 00064e: rjmp .-433 [02ee]
 0002ee: movw ZL:ZH, r14:r15[02cc]
-0002f0: ld r25, (ZL+3[02cf])=[06]
+0002f0: ld r25, (Z+3[02cf])=[06]
 0002f2: movw ZL:ZH, r12:r13[010d]
 0002f4: sbrc r25[06], 0x08	; Will branch
 0002f8: sbrs r25[06], 0x08	; Will not branch
-0002fa: ld r24, ZL[010e]++
+0002fa: ld r24, Z[010d]++
 0002fc: movw r12:r13, ZL:ZH[010e]
 0002fe: tst r24[00]
-0002fe: 									SREG = .Z...HT.
+0002fe: 									SREG = .Z...HTI
 000300: brne .1 [0304]	; Will not branch
 000302: rjmp .422 [0650]
 000650: movw ZL:ZH, r14:r15[02cc]
-000652: ld r18, (ZL+6[02d2])=[08]
-000654: ld r19, (ZL+7[02d3])=[00]
+000652: ld r18, (Z+6[02d2])=[08]
+000654: ld r19, (Z+7[02d3])=[00]
 000656: rjmp .2 [065c]
 00065c: movw r24:r25, r18:r19[0008]
-00065e: adiw YL:YH[02ab], 0x0c = 0x02b7
-00065e: 									SREG = .....HT.
+00065e: adiw YL:YH[02ab], 0x0c
+00065e: 									SREG = .....HTI
 000660: ldi ZL, 0x12
 000662: rjmp .188 [07dc]
-0007dc: ld r2, (YL+18[02c9])=[00]
-0007de: ld r3, (YL+17[02c8])=[00]
-0007e0: ld r4, (YL+16[02c7])=[00]
-0007e2: ld r5, (YL+15[02c6])=[00]
-0007e4: ld r6, (YL+14[02c5])=[00]
-0007e6: ld r7, (YL+13[02c4])=[00]
-0007e8: ld r8, (YL+12[02c3])=[00]
-0007ea: ld r9, (YL+11[02c2])=[00]
-0007ec: ld r10, (YL+10[02c1])=[00]
-0007ee: ld r11, (YL+9[02c0])=[00]
-0007f0: ld r12, (YL+8[02bf])=[00]
-0007f2: ld r13, (YL+7[02be])=[00]
-0007f4: ld r14, (YL+6[02bd])=[00]
-0007f6: ld r15, (YL+5[02bc])=[01]
-0007f8: ld r16, (YL+4[02bb])=[ec]
-0007fa: ld r17, (YL+3[02ba])=[02]
-0007fc: ld XL, (YL+2[02b9])=[cb]
-0007fe: ld XH, (YL+1[02b8])=[02]
+0007dc: ld r2, (Y+18[02c9])=[00]
+0007de: ld r3, (Y+17[02c8])=[00]
+0007e0: ld r4, (Y+16[02c7])=[00]
+0007e2: ld r5, (Y+15[02c6])=[00]
+0007e4: ld r6, (Y+14[02c5])=[00]
+0007e6: ld r7, (Y+13[02c4])=[00]
+0007e8: ld r8, (Y+12[02c3])=[00]
+0007ea: ld r9, (Y+11[02c2])=[00]
+0007ec: ld r10, (Y+10[02c1])=[00]
+0007ee: ld r11, (Y+9[02c0])=[00]
+0007f0: ld r12, (Y+8[02bf])=[00]
+0007f2: ld r13, (Y+7[02be])=[00]
+0007f4: ld r14, (Y+6[02bd])=[00]
+0007f6: ld r15, (Y+5[02bc])=[01]
+0007f8: ld r16, (Y+4[02bb])=[ec]
+0007fa: ld r17, (Y+3[02ba])=[02]
+0007fc: ld XL, (Y+2[02b9])=[cb]
+0007fe: ld XH, (Y+1[02b8])=[02]
 000800: add YL[b7], ZL[12] = c9
-000800: 									SREG = ..NV..T.
+000800: 									SREG = ..N.S.TI
 000802: addc YH[02], r1[00] = 02
-000802: 									SREG = ......T.
-000804: in r0, SREG[00]
+000802: 									SREG = ......TI
+000804: in r0, SREG[80]
 000806: cli
 000806: 									SREG = ......T.
 000808: out SPH, YH[02]
-00080a: 									SREG = ........
-00080a: out SREG, r0[00]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
 00080c: out SPL, YL[c9]
 00080e: movw YL:YH, XL:XH[02cb]
 000810: ret
-0002b8: ld ZL, (YL+7[02d2])=[08]
-0002ba: ld ZH, (YL+8[02d3])=[00]
+0002b8: ld ZL, (Y+7[02d2])=[08]
+0002ba: ld ZH, (Y+8[02d3])=[00]
 0002bc: add ZL[08], r16[ec] = f4
-0002bc: 									SREG = ..NV.H..
+0002bc: 									SREG = ..N.SHTI
 0002be: addc ZH[00], r17[02] = 02
-0002be: 									SREG = ........
-0002c0: st (ZL+0[02f4]), r1[01]
-0002c2: adiw YL:YH[02cb], 0x10 = 0x02db
-0002c2: 									SREG = ........
+0002be: 									SREG = ......TI
+0002c0: st (Z+0[02f4]), r1[00]
+0002c2: adiw YL:YH[02cb], 0x10
+0002c2: 									SREG = ......TI
 0002c4: ldi ZL, 0x04
 0002c6: rjmp .664 [07f8]
-0007f8: ld r16, (YL+4[02df])=[ec]
-0007fa: ld r17, (YL+3[02de])=[02]
-0007fc: ld XL, (YL+2[02dd])=[eb]
-0007fe: ld XH, (YL+1[02dc])=[02]
+0007f8: ld r16, (Y+4[02df])=[ec]
+0007fa: ld r17, (Y+3[02de])=[02]
+0007fc: ld XL, (Y+2[02dd])=[eb]
+0007fe: ld XH, (Y+1[02dc])=[02]
 000800: add YL[db], ZL[04] = df
-000800: 									SREG = ..NV....
+000800: 									SREG = ..N.S.TI
 000802: addc YH[02], r1[00] = 02
-000802: 									SREG = ........
-000804: in r0, SREG[00]
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
 000806: cli
-000806: 									SREG = ........
+000806: 									SREG = ......T.
 000808: out SPH, YH[02]
-00080a: 									SREG = ........
-00080a: out SREG, r0[00]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
 00080c: out SPL, YL[df]
 00080e: movw YL:YH, XL:XH[02eb]
 000810: ret
 000264: movw r12:r13, r16:r17[02ec]
-000266: in r0, SREG[00]
+000266: in r0, SREG[c0]
 000268: cli
-000268: 									SREG = ........
+000268: 									SREG = ......T.
 00026a: out SPH, YH[02]
-00026c: 									SREG = ........
-00026c: out SREG, r0[00]
+00026c: out SREG, r0[c0]
+00026c: 									SREG = ......TI
 00026e: out SPL, YL[eb]
 000270: rjmp .4 [027a]
 00027a: movw ZL:ZH, r12:r13[02ec]
-00027c: ld r24, ZL[02ed]++
+00027c: ld r24, Z[02ec]++
 00027e: movw r12:r13, ZL:ZH[02ed]
 000280: cpse r24[20], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[20] = 20
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[20] = 02
 0000c0: andi r24[02], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[0004], 0x40 = 04
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0004], 0x10 = 14
 000074: rjmp .1 [0078]
 000078: in r25, io:25[14]
 00007a: andi r25[14], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[02] = 12
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[12]
 000080: sbi io:25[0012], 0x20 = 32
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0032], 0x20 = 12
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[20] = 20
 0000c8: andi r24[20], 0x0f
-0000c8: 									SREG = .Z......
+0000c8: 									SREG = .Z....TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0012], 0x40 = 12
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0012], 0x10 = 12
 000074: rjmp .1 [0078]
 000078: in r25, io:25[12]
 00007a: andi r25[12], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[00] = 10
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[10]
 000080: sbi io:25[0010], 0x20 = 30
 hd44780_write_data 20
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0030], 0x20 = 10
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0010], 0x40 = 50
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0050], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[65]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[65], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[05], YH[80] = 85
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[85], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[65]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[65], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[05], YH[00] = 05
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[05], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02ed]
-00027c: ld r24, ZL[02ee]++
+00027c: ld r24, Z[02ed]++
 00027e: movw r12:r13, ZL:ZH[02ee]
 000280: cpse r24[30], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[30] = 30
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[30] = 03
 0000c0: andi r24[03], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[0000], 0x40 = 00
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0000], 0x10 = 10
 000074: rjmp .1 [0078]
 000078: in r25, io:25[10]
 00007a: andi r25[10], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[03] = 13
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[13]
 000080: sbi io:25[0013], 0x20 = 33
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0033], 0x20 = 13
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[30] = 30
 0000c8: andi r24[30], 0x0f
-0000c8: 									SREG = .Z......
+0000c8: 									SREG = .Z....TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0013], 0x40 = 13
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0013], 0x10 = 13
 000074: rjmp .1 [0078]
 000078: in r25, io:25[13]
 00007a: andi r25[13], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[00] = 10
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[10]
 000080: sbi io:25[0010], 0x20 = 30
 hd44780_write_data 30
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0030], 0x20 = 10
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0010], 0x40 = 50
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0050], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[66]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[66], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[06], YH[80] = 86
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[86], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[66]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[66], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[06], YH[00] = 06
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[06], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02ee]
-00027c: ld r24, ZL[02ef]++
+00027c: ld r24, Z[02ee]++
 00027e: movw r12:r13, ZL:ZH[02ef]
 000280: cpse r24[3a], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[3a] = 3a
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[3a] = a3
 0000c0: andi r24[a3], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[0000], 0x40 = 00
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0000], 0x10 = 10
 000074: rjmp .1 [0078]
 000078: in r25, io:25[10]
 00007a: andi r25[10], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[03] = 13
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[13]
 000080: sbi io:25[0013], 0x20 = 33
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0033], 0x20 = 13
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[3a] = 3a
 0000c8: andi r24[3a], 0x0f
-0000c8: 									SREG = ........
+0000c8: 									SREG = ......TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0013], 0x40 = 13
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0013], 0x10 = 13
 000074: rjmp .1 [0078]
 000078: in r25, io:25[13]
 00007a: andi r25[13], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[0a] = 1a
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[1a]
 000080: sbi io:25[001a], 0x20 = 3a
 hd44780_write_data 3a
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[003a], 0x20 = 1a
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[001a], 0x40 = 5a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[005a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[000a], 0x40 = 4a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[004a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[67]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[67], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[07], YH[80] = 87
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[87], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[000a], 0x40 = 4a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[004a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[000a], 0x40 = 4a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[004a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[67]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[67], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[07], YH[00] = 07
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[07], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02ef]
-00027c: ld r24, ZL[02f0]++
+00027c: ld r24, Z[02ef]++
 00027e: movw r12:r13, ZL:ZH[02f0]
 000280: cpse r24[30], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[30] = 30
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[30] = 03
 0000c0: andi r24[03], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[000a], 0x40 = 0a
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[000a], 0x10 = 1a
 000074: rjmp .1 [0078]
 000078: in r25, io:25[1a]
 00007a: andi r25[1a], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[03] = 13
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[13]
 000080: sbi io:25[0013], 0x20 = 33
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0033], 0x20 = 13
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[30] = 30
 0000c8: andi r24[30], 0x0f
-0000c8: 									SREG = .Z......
+0000c8: 									SREG = .Z....TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0013], 0x40 = 13
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0013], 0x10 = 13
 000074: rjmp .1 [0078]
 000078: in r25, io:25[13]
 00007a: andi r25[13], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[00] = 10
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[10]
 000080: sbi io:25[0010], 0x20 = 30
 hd44780_write_data 30
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0030], 0x20 = 10
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0010], 0x40 = 50
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0050], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[08], YH[80] = 88
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[88], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[08], YH[00] = 08
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[08], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02f0]
-00027c: ld r24, ZL[02f1]++
+00027c: ld r24, Z[02f0]++
 00027e: movw r12:r13, ZL:ZH[02f1]
 000280: cpse r24[30], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[30] = 30
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[30] = 03
 0000c0: andi r24[03], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[0000], 0x40 = 00
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0000], 0x10 = 10
 000074: rjmp .1 [0078]
 000078: in r25, io:25[10]
 00007a: andi r25[10], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[03] = 13
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[13]
 000080: sbi io:25[0013], 0x20 = 33
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0033], 0x20 = 13
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[30] = 30
 0000c8: andi r24[30], 0x0f
-0000c8: 									SREG = .Z......
+0000c8: 									SREG = .Z....TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0013], 0x40 = 13
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0013], 0x10 = 13
 000074: rjmp .1 [0078]
 000078: in r25, io:25[13]
 00007a: andi r25[13], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[00] = 10
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[10]
 000080: sbi io:25[0010], 0x20 = 30
 hd44780_write_data 30
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0030], 0x20 = 10
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0010], 0x40 = 50
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0050], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[69]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[69], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[09], YH[80] = 89
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[89], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[69]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[69], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[09], YH[00] = 09
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[09], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02f1]
-00027c: ld r24, ZL[02f2]++
+00027c: ld r24, Z[02f1]++
 00027e: movw r12:r13, ZL:ZH[02f2]
 000280: cpse r24[3a], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[3a] = 3a
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[3a] = a3
 0000c0: andi r24[a3], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[0000], 0x40 = 00
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0000], 0x10 = 10
 000074: rjmp .1 [0078]
 000078: in r25, io:25[10]
 00007a: andi r25[10], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[03] = 13
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[13]
 000080: sbi io:25[0013], 0x20 = 33
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0033], 0x20 = 13
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[3a] = 3a
 0000c8: andi r24[3a], 0x0f
-0000c8: 									SREG = ........
+0000c8: 									SREG = ......TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0013], 0x40 = 13
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0013], 0x10 = 13
 000074: rjmp .1 [0078]
 000078: in r25, io:25[13]
 00007a: andi r25[13], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[0a] = 1a
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[1a]
 000080: sbi io:25[001a], 0x20 = 3a
 hd44780_write_data 3a
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[003a], 0x20 = 1a
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[001a], 0x40 = 5a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[005a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[000a], 0x40 = 4a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[004a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[6a]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[6a], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[0a], YH[80] = 8a
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[8a], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[000a], 0x40 = 4a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[004a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[000a], 0x40 = 4a
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[004a], 0x10 = 4a
 00009e: sbi io:25[004a], 0x20 = 6a
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[6a]
 0000a8: cbi io:25[006a], 0x20 = 4a
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[004a], 0x40 = 0a
 0000b2: andi r24[6a], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[0a], YH[00] = 0a
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[0a], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02f2]
-00027c: ld r24, ZL[02f3]++
+00027c: ld r24, Z[02f2]++
 00027e: movw r12:r13, ZL:ZH[02f3]
 000280: cpse r24[30], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[30] = 30
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[30] = 03
 0000c0: andi r24[03], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[000a], 0x40 = 0a
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[000a], 0x10 = 1a
 000074: rjmp .1 [0078]
 000078: in r25, io:25[1a]
 00007a: andi r25[1a], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[03] = 13
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[13]
 000080: sbi io:25[0013], 0x20 = 33
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0033], 0x20 = 13
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[30] = 30
 0000c8: andi r24[30], 0x0f
-0000c8: 									SREG = .Z......
+0000c8: 									SREG = .Z....TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0013], 0x40 = 13
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0013], 0x10 = 13
 000074: rjmp .1 [0078]
 000078: in r25, io:25[13]
 00007a: andi r25[13], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[00] = 10
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[10]
 000080: sbi io:25[0010], 0x20 = 30
 hd44780_write_data 30
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0030], 0x20 = 10
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0010], 0x40 = 50
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0050], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[6b]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[6b], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[0b], YH[80] = 8b
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[8b], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0000], 0x40 = 40
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0040], 0x10 = 40
 00009e: sbi io:25[0040], 0x20 = 60
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[6b]
 0000a8: cbi io:25[0060], 0x20 = 40
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0040], 0x40 = 00
 0000b2: andi r24[6b], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[0b], YH[00] = 0b
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[0b], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02f3]
-00027c: ld r24, ZL[02f4]++
+00027c: ld r24, Z[02f3]++
 00027e: movw r12:r13, ZL:ZH[02f4]
 000280: cpse r24[31], r1[00]	; Will not skip
 000282: rjmp .-9 [0272]
 000272: ldi r22, 0x01
 000274: rcall .-224 [00b6]
 0000b6: push YL[eb] (@02e8)
 0000b8: push YH[02] (@02e7)
 0000ba: mov YL, r24[31] = 31
 0000bc: mov YH, r22[01] = 01
 0000be: swap r24[31] = 13
 0000c0: andi r24[13], 0x0f
-0000c0: 									SREG = ........
+0000c0: 									SREG = ......TI
 0000c2: rcall .-44 [006c]
 00006c: cbi io:25[0000], 0x40 = 00
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0000], 0x10 = 10
 000074: rjmp .1 [0078]
 000078: in r25, io:25[10]
 00007a: andi r25[10], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[03] = 13
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[13]
 000080: sbi io:25[0013], 0x20 = 33
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0033], 0x20 = 13
 00008a: ret
 0000c4: mov r22, YH[01] = 01
 0000c6: mov r24, YL[31] = 31
 0000c8: andi r24[31], 0x0f
-0000c8: 									SREG = ........
+0000c8: 									SREG = ......TI
 0000ca: pop YH (@02e8)[02]
 0000cc: pop YL (@02e9)[eb]
 0000ce: rjmp .-50 [006c]
 00006c: cbi io:25[0013], 0x40 = 13
 00006e: tst r22[01]
-00006e: 									SREG = ........
+00006e: 									SREG = ......TI
 000070: breq .2 [0076]	; Will not branch
 000072: sbi io:25[0013], 0x10 = 13
 000074: rjmp .1 [0078]
 000078: in r25, io:25[13]
 00007a: andi r25[13], 0xf0
-00007a: 									SREG = ........
+00007a: 									SREG = ......TI
 00007c: or r25[10], r24[01] = 11
-00007c: 									SREG = ........
+00007c: 									SREG = ......TI
 00007e: out io:25, r25[11]
 000080: sbi io:25[0011], 0x20 = 31
 hd44780_write_data 31
 000082: rjmp .0 [0084]
 000084: rjmp .0 [0086]
 000086: nop
 000088: cbi io:25[0031], 0x20 = 11
 00008a: ret
 000276: ldi r24, 0x00
 000278: rcall .-200 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0011], 0x40 = 51
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0051], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[68]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[68], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000d8: mov YH, r24[08] = 08
 0000da: swap YH[08] = 80
 0000dc: andi YH[80], 0xf0
-0000dc: 									SREG = ..N.S...
+0000dc: 									SREG = ..N.S.TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0001], 0x40 = 41
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0041], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[6c]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[6c], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[0c], YH[80] = 8c
-0000e2: 									SREG = ..N.S...
+0000e2: 									SREG = ..N.S.TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[8c], 0x80	; Will not branch
 0000f0: rjmp .-4 [00ea]
 0000ea: ldi r24, 0x00
 0000ec: rcall .-15 [00d0]
 0000d0: push YL[eb] (@02e6)
 0000d2: push YH[02] (@02e5)
 0000d4: mov YL, r24[00] = 00
 0000d6: rcall .-38 [008c]
 00008c: sbi io:25[0001], 0x40 = 41
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0041], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[60]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[60], 0x0f
-0000b2: 									SREG = .Z......
+0000b2: 									SREG = .Z....TI
 0000b4: ret
 0000d8: mov YH, r24[00] = 00
 0000da: swap YH[00] = 00
 0000dc: andi YH[00], 0xf0
-0000dc: 									SREG = .Z......
+0000dc: 									SREG = .Z....TI
 0000de: mov r24, YL[00] = 00
 0000e0: rcall .-43 [008c]
 00008c: sbi io:25[0001], 0x40 = 41
 00008e: in r25, io:24[7f]
 000090: andi r25[7f], 0xf0
-000090: 									SREG = ........
+000090: 									SREG = ......TI
 000092: out io:24, r25[70]
 000094: tst r24[00]
-000094: 									SREG = .Z......
+000094: 									SREG = .Z....TI
 000096: breq .2 [009c]	; Will branch
 00009c: cbi io:25[0041], 0x10 = 41
 00009e: sbi io:25[0041], 0x20 = 61
 0000a0: rjmp .0 [00a2]
 0000a2: rjmp .0 [00a4]
 0000a4: nop
 0000a6: in r24, io:23[6c]
 0000a8: cbi io:25[0061], 0x20 = 41
 0000aa: in r25, io:24[70]
 0000ac: ori r25[70], 0x0f
-0000ac: 									SREG = ........
+0000ac: 									SREG = ......TI
 0000ae: out io:24, r25[7f]
 0000b0: cbi io:25[0041], 0x40 = 01
 0000b2: andi r24[6c], 0x0f
-0000b2: 									SREG = ........
+0000b2: 									SREG = ......TI
 0000b4: ret
 0000e2: or r24[0c], YH[00] = 0c
-0000e2: 									SREG = ........
+0000e2: 									SREG = ......TI
 0000e4: pop YH (@02e6)[02]
 0000e6: pop YL (@02e7)[eb]
 0000e8: ret
 0000ee: sbrc r24[0c], 0x80	; Will branch
 0000f2: ret
 00027a: movw ZL:ZH, r12:r13[02f4]
-00027c: ld r24, ZL[02f5]++
+00027c: ld r24, Z[02f4]++
 00027e: movw r12:r13, ZL:ZH[02f5]
 000280: cpse r24[00], r1[00]	; Will skip
 000284: rjmp .-50 [0222]
 000222: lds r24[00], 0x010e
 000226: tst r24[00]
-000226: 									SREG = .Z......
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[c0]
+000162: push r0[42] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[00] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[00], 0x010f
+00016e: subi r24[00], 0xff = 01
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[01]
+000174: cpi r24[01], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[00]
+0001bc: pop r0 (@02e7)[42]
+0001be: out SREG, r0[42]
+0001be: 									SREG = .Z....T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[42]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[01], 0xff = 02
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[02]
+000174: cpi r24[02], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[02], 0xff = 03
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[03]
+000174: cpi r24[03], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[03], 0xff = 04
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[04]
+000174: cpi r24[04], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[04], 0xff = 05
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[05]
+000174: cpi r24[05], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[05], 0xff = 06
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[06]
+000174: cpi r24[06], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[06], 0xff = 07
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[07]
+000174: cpi r24[07], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[07], 0xff = 08
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[08]
+000174: cpi r24[08], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[08], 0xff = 09
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[09]
+000174: cpi r24[09], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[09], 0xff = 0a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0a]
+000174: cpi r24[0a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0a], 0xff = 0b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0b]
+000174: cpi r24[0b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0b], 0xff = 0c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0c]
+000174: cpi r24[0c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0c], 0xff = 0d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0d]
+000174: cpi r24[0d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0d], 0xff = 0e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0e]
+000174: cpi r24[0e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0e], 0xff = 0f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0f]
+000174: cpi r24[0f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0f], 0xff = 10
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[10]
+000174: cpi r24[10], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[10], 0xff = 11
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[11]
+000174: cpi r24[11], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[11], 0xff = 12
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[12]
+000174: cpi r24[12], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[12], 0xff = 13
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[13]
+000174: cpi r24[13], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[13], 0xff = 14
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[14]
+000174: cpi r24[14], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[14], 0xff = 15
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[15]
+000174: cpi r24[15], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[15], 0xff = 16
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[16]
+000174: cpi r24[16], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[16], 0xff = 17
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[17]
+000174: cpi r24[17], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[17], 0xff = 18
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[18]
+000174: cpi r24[18], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[18], 0xff = 19
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[19]
+000174: cpi r24[19], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[19], 0xff = 1a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1a]
+000174: cpi r24[1a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1a], 0xff = 1b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1b]
+000174: cpi r24[1b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1b], 0xff = 1c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1c]
+000174: cpi r24[1c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1c], 0xff = 1d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1d]
+000174: cpi r24[1d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1d], 0xff = 1e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1e]
+000174: cpi r24[1e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1e], 0xff = 1f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1f]
+000174: cpi r24[1f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1f], 0xff = 20
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[20]
+000174: cpi r24[20], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[20], 0xff = 21
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[21]
+000174: cpi r24[21], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[21], 0xff = 22
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[22]
+000174: cpi r24[22], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[22], 0xff = 23
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[23]
+000174: cpi r24[23], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[23], 0xff = 24
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[24]
+000174: cpi r24[24], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[24], 0xff = 25
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[25]
+000174: cpi r24[25], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[25], 0xff = 26
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[26]
+000174: cpi r24[26], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[26], 0xff = 27
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[27]
+000174: cpi r24[27], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[27], 0xff = 28
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[28]
+000174: cpi r24[28], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[28], 0xff = 29
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[29]
+000174: cpi r24[29], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[29], 0xff = 2a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2a]
+000174: cpi r24[2a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2a], 0xff = 2b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2b]
+000174: cpi r24[2b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2b], 0xff = 2c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2c]
+000174: cpi r24[2c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2c], 0xff = 2d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2d]
+000174: cpi r24[2d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2d], 0xff = 2e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2e]
+000174: cpi r24[2e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2e], 0xff = 2f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2f]
+000174: cpi r24[2f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2f], 0xff = 30
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[30]
+000174: cpi r24[30], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[30], 0xff = 31
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[31]
+000174: cpi r24[31], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[31], 0xff = 32
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[32]
+000174: cpi r24[32], 0x32
+000174: 									SREG = .Z....T.
+000176: brne .32 [01b8]	; Will not branch
+000178: lds r24[32], 0x0110
+00017c: subi r24[01], 0xff = 02
+00017c: 									SREG = C.....T.
+00017e: sts 0x0110, r24[02]
+000182: sts 0x010f, r1[00]
+000186: ldi r25, 0x01
+000188: sts 0x010e, r25[01]
+00018c: cpi r24[02], 0x3c
+00018c: 									SREG = C.N.SHT.
+00018e: brne .20 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[01]
+000226: 									SREG = ......TI
+000228: breq .-11 [0214]	; Will not branch
+00022a: sts 0x010e, r1[00]
+00022e: ldi r22, 0x00
+000230: ldi r24, 0x01
+000232: rcall .-191 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[01] = 01
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[01] = 10
+0000c0: andi r24[10], 0x0f
+0000c0: 									SREG = .Z....TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0001], 0x40 = 01
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0001], 0x10 = 01
+000078: in r25, io:25[01]
+00007a: andi r25[01], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[00] = 00
+00007c: 									SREG = .Z....TI
+00007e: out io:25, r25[00]
+000080: sbi io:25[0000], 0x20 = 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0020], 0x20 = 00
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[01] = 01
+0000c8: andi r24[01], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0000], 0x10 = 00
+000078: in r25, io:25[00]
+00007a: andi r25[00], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[01] = 01
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[01]
+000080: sbi io:25[0001], 0x20 = 21
+hd44780_write_command 01
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0021], 0x20 = 01
+00008a: ret
+000234: ldi r24, 0x01
+000236: rcall .-167 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+000238: ldi r22, 0x00
+00023a: ldi r24, 0x84
+00023c: rcall .-196 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[84] = 84
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[84] = 48
+0000c0: andi r24[48], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0001], 0x40 = 01
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0001], 0x10 = 01
+000078: in r25, io:25[01]
+00007a: andi r25[01], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[08] = 08
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[08]
+000080: sbi io:25[0008], 0x20 = 28
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0028], 0x20 = 08
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[84] = 84
+0000c8: andi r24[84], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0008], 0x40 = 08
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0008], 0x10 = 08
+000078: in r25, io:25[08]
+00007a: andi r25[08], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[04] = 04
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[04]
+000080: sbi io:25[0004], 0x20 = 24
+hd44780_write_command 84
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0024], 0x20 = 04
+00008a: ret
+00023e: ldi r24, 0x00
+000240: rcall .-172 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[80] = 84
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[84], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[00] = 04
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[04], 0x80	; Will branch
+0000f2: ret
+000242: lds r24[04], 0x0110
+000246: push r1[00] (@02ea)
+000248: push r24[02] (@02e9)
+00024a: lds r24[02], 0x0111
+00024e: push r1[00] (@02e8)
+000250: push r24[00] (@02e7)
+000252: lds r24[00], 0x0112
+000256: push r1[00] (@02e6)
+000258: push r24[00] (@02e5)
+00025a: push r15[01] (@02e4)
+00025c: push r14[00] (@02e3)
+00025e: push r17[02] (@02e2)
+000260: push r16[ec] (@02e1)
+000262: rcall .17 [0286]
+000286: ldi XL, 0x10
+000288: ldi XH, 0x00
+00028a: ldi ZL, 0x48
+00028c: ldi ZH, 0x01
+00028e: rjmp .664 [07c0]
+0007c0: push r16[ec] (@02de)
+0007c2: push r17[02] (@02dd)
+0007c4: push YL[eb] (@02dc)
+0007c6: push YH[02] (@02db)
+0007c8: in YL, SPL[db]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[db], XL[10] = cb
+0007cc: 									SREG = ..N.S.TI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[40]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[cb]
+0007da: ijmp Z[0290]
+000290: ld r16, (Y+23[02e2])=[ec]
+000292: ld r17, (Y+24[02e3])=[02]
+000294: ldi r24, 0x06
+000296: st (Y+4[02cf]), r24[06]
+000298: st (Y+2[02cd]), r17[02]
+00029a: st (Y+1[02cc]), r16[ec]
+00029c: ldi r24, 0xff
+00029e: ldi r25, 0x7f
+0002a0: st (Y+6[02d1]), r25[7f]
+0002a2: st (Y+5[02d0]), r24[ff]
+0002a4: movw r20:r21, YL:YH[02cb]
+0002a6: subi r20[cb], 0xe5 = e6
+0002a6: 									SREG = C.N.S.TI
+0002a8: sbci r21[02], 0xff = 02
+0002a8: 									SREG = C.....TI
+0002aa: st (Y+16[02db]), r21[02]
+0002ac: st (Y+15[02da]), r20[e6]
+0002ae: ld r22, (Y+25[02e4])=[00]
+0002b0: ld r23, (Y+26[02e5])=[01]
+0002b2: movw r24:r25, YL:YH[02cb]
+0002b4: adiw r24:r25[02cb], 0x01
+0002b4: 									SREG = ......TI
+0002b6: rcall .8 [02c8]
+0002c8: ldi XL, 0x0c
+0002ca: ldi XH, 0x00
+0002cc: ldi ZL, 0x69
+0002ce: ldi ZH, 0x01
+0002d0: rjmp .617 [07a4]
+0007a4: push r2[00] (@02c8)
+0007a6: push r3[00] (@02c7)
+0007a8: push r4[00] (@02c6)
+0007aa: push r5[00] (@02c5)
+0007ac: push r6[00] (@02c4)
+0007ae: push r7[00] (@02c3)
+0007b0: push r8[00] (@02c2)
+0007b2: push r9[00] (@02c1)
+0007b4: push r10[00] (@02c0)
+0007b6: push r11[00] (@02bf)
+0007b8: push r12[f5] (@02be)
+0007ba: push r13[02] (@02bd)
+0007bc: push r14[00] (@02bc)
+0007be: push r15[01] (@02bb)
+0007c0: push r16[ec] (@02ba)
+0007c2: push r17[02] (@02b9)
+0007c4: push YL[cb] (@02b8)
+0007c6: push YH[02] (@02b7)
+0007c8: in YL, SPL[b7]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[b7], XL[0c] = ab
+0007cc: 									SREG = ..N.SHTI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[c0]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[ab]
+0007da: ijmp Z[02d2]
+0002d2: movw r14:r15, r24:r25[02cc]
+0002d4: movw r12:r13, r22:r23[0100]
+0002d6: movw r16:r17, r20:r21[02e6]
+0002d8: movw ZL:ZH, r24:r25[02cc]
+0002da: st (Z+7[02d3]), r1[00]
+0002dc: st (Z+6[02d2]), r1[00]
+0002de: ld r24, (Z+3[02cf])=[06]
+0002e0: sbrs r24[06], 0x02	; Will branch
+0002e4: clr r8[00]
+0002e4: 									SREG = .Z....TI
+0002e6: inc r8[00] = 01
+0002e6: 									SREG = ......TI
+0002e8: mov r9, r1[00] = 00
+0002ea: add r8[01], YL[ab] = ac
+0002ea: 									SREG = ..N.S.TI
+0002ec: addc r9[00], YH[02] = 02
+0002ec: 									SREG = ......TI
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0100]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0100]++
+0002fc: movw r12:r13, ZL:ZH[0101]
+0002fe: tst r24[25]
+0002fe: 									SREG = ......TI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0101]++
+000310: movw r12:r13, ZL:ZH[0102]
+000312: cpi r24[32], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[00], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[00], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[00], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0102]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0102]++
+00039e: movw r12:r13, ZL:ZH[0103]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[20], 0x20
+000324: 									SREG = .Z....TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[20], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e6]
+000488: sbrs r18[20], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e6])=[00]
+00049c: ld r23, (Z+1[02e7])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e6], 0xfe = e8
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[20] = 20
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[0c]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[20], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[20] = 20
+000578: rjmp .3 [0580]
+000580: sbrs r19[20], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[20] = 20
+0005a0: andi r24[20], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[20], 0x08	; Will branch
+0005aa: sbrs r19[20], 0x01	; Will not branch
+0005ac: rjmp .14 [05ca]
+0005ca: cp r11[01], r3[02] = ff
+0005ca: 									SREG = C.N.SHTI
+0005cc: brcs .-9 [05bc]	; Will branch
+0005bc: movw r22:r23, r14:r15[02cc]
+0005be: ldi r24, 0x20
+0005c0: ldi r25, 0x00
+0005c2: st (Y+12[02b7]), r19[20]
+0005c4: rcall .101 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0020]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[00]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[00], r24[ff] = 01
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ec]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ec]++, r16[20] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ed]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[00]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0000], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[01]
+0006dc: movw r24:r25, r16:r17[0020]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+0005c6: inc r11[01] = 02
+0005c6: 									SREG = .....HTI
+0005c8: ld r19, (Y+12[02b7])=[20]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[20], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[20] = 20
+000602: andi r24[20], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[00] = 01
+000626: 									SREG = ......TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[01]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[01], r24[ff] = 02
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ed]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ed]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ee]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[01]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0001], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[02]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0103]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0103]++
+0002fc: movw r12:r13, ZL:ZH[0104]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[02]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[02], r24[ff] = 03
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ee]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ee]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ef]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[02]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0002], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[03]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0104]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0104]++
+0002fc: movw r12:r13, ZL:ZH[0105]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0105]++
+000310: movw r12:r13, ZL:ZH[0106]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[0106]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0106]++
+00039e: movw r12:r13, ZL:ZH[0107]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0107]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0107]++
+00039e: movw r12:r13, ZL:ZH[0108]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e8]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e8])=[00]
+00049c: ld r23, (Z+1[02e9])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e8], 0xfe = ea
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[03]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[03], r24[ff] = 04
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ef]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ef]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f0]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[03]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0003], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[04]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[04]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[04], r24[ff] = 05
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f0]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f0]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f1]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[04]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0004], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[05]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0108]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0108]++
+0002fc: movw r12:r13, ZL:ZH[0109]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[05]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[05], r24[ff] = 06
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f1]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f1]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f2]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[05]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0005], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[06]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0109]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0109]++
+0002fc: movw r12:r13, ZL:ZH[010a]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[010a]++
+000310: movw r12:r13, ZL:ZH[010b]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[010b]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010b]++
+00039e: movw r12:r13, ZL:ZH[010c]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[010c]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010c]++
+00039e: movw r12:r13, ZL:ZH[010d]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02ea]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02ea])=[02]
+00049c: ld r23, (Z+1[02eb])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[ea], 0xfe = ec
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[02] (@02a8)
+0006f8: andi r22[02], 0xfe
+0006f8: 									SREG = C......I
+0006fa: subi r22[02], 0xfe = 04
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0004]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[04]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[04], r18[02] = 06
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0006]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[06]
+000792: 									SREG = .......I
+000794: dec XH[04] = 03
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[02] = 01
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[06], r18[00] = 06
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[06], r23[00] = 06
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[06], r24[00] = 06
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[06], XL[00] = 06
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[06]
+000776: 									SREG = .......I
+000778: dec XH[04] = 03
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[02] = 01
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[02]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[02], r0[00] = 02
+000738: 									SREG = ......TI
+00073a: subi r19[02], 0xd0 = 32
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[32] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[06]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[06], r24[ff] = 07
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f2]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f2]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f3]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[06]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0006], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[07]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[32]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0032]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[07]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[07], r24[ff] = 08
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f3]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f3]++, r16[32] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f4]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[07]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0007], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[08]
+0006dc: movw r24:r25, r16:r17[0032]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[010d]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[010d]++
+0002fc: movw r12:r13, ZL:ZH[010e]
+0002fe: tst r24[00]
+0002fe: 									SREG = .Z...HTI
+000300: brne .1 [0304]	; Will not branch
+000302: rjmp .422 [0650]
+000650: movw ZL:ZH, r14:r15[02cc]
+000652: ld r18, (Z+6[02d2])=[08]
+000654: ld r19, (Z+7[02d3])=[00]
+000656: rjmp .2 [065c]
+00065c: movw r24:r25, r18:r19[0008]
+00065e: adiw YL:YH[02ab], 0x0c
+00065e: 									SREG = .....HTI
+000660: ldi ZL, 0x12
+000662: rjmp .188 [07dc]
+0007dc: ld r2, (Y+18[02c9])=[00]
+0007de: ld r3, (Y+17[02c8])=[00]
+0007e0: ld r4, (Y+16[02c7])=[00]
+0007e2: ld r5, (Y+15[02c6])=[00]
+0007e4: ld r6, (Y+14[02c5])=[00]
+0007e6: ld r7, (Y+13[02c4])=[00]
+0007e8: ld r8, (Y+12[02c3])=[00]
+0007ea: ld r9, (Y+11[02c2])=[00]
+0007ec: ld r10, (Y+10[02c1])=[00]
+0007ee: ld r11, (Y+9[02c0])=[00]
+0007f0: ld r12, (Y+8[02bf])=[f5]
+0007f2: ld r13, (Y+7[02be])=[02]
+0007f4: ld r14, (Y+6[02bd])=[00]
+0007f6: ld r15, (Y+5[02bc])=[01]
+0007f8: ld r16, (Y+4[02bb])=[ec]
+0007fa: ld r17, (Y+3[02ba])=[02]
+0007fc: ld XL, (Y+2[02b9])=[cb]
+0007fe: ld XH, (Y+1[02b8])=[02]
+000800: add YL[b7], ZL[12] = c9
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[c9]
+00080e: movw YL:YH, XL:XH[02cb]
+000810: ret
+0002b8: ld ZL, (Y+7[02d2])=[08]
+0002ba: ld ZH, (Y+8[02d3])=[00]
+0002bc: add ZL[08], r16[ec] = f4
+0002bc: 									SREG = ..N.SHTI
+0002be: addc ZH[00], r17[02] = 02
+0002be: 									SREG = ......TI
+0002c0: st (Z+0[02f4]), r1[00]
+0002c2: adiw YL:YH[02cb], 0x10
+0002c2: 									SREG = ......TI
+0002c4: ldi ZL, 0x04
+0002c6: rjmp .664 [07f8]
+0007f8: ld r16, (Y+4[02df])=[ec]
+0007fa: ld r17, (Y+3[02de])=[02]
+0007fc: ld XL, (Y+2[02dd])=[eb]
+0007fe: ld XH, (Y+1[02dc])=[02]
+000800: add YL[db], ZL[04] = df
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[df]
+00080e: movw YL:YH, XL:XH[02eb]
+000810: ret
+000264: movw r12:r13, r16:r17[02ec]
+000266: in r0, SREG[c0]
+000268: cli
+000268: 									SREG = ......T.
+00026a: out SPH, YH[02]
+00026c: out SREG, r0[c0]
+00026c: 									SREG = ......TI
+00026e: out SPL, YL[eb]
+000270: rjmp .4 [027a]
+00027a: movw ZL:ZH, r12:r13[02ec]
+00027c: ld r24, Z[02ec]++
+00027e: movw r12:r13, ZL:ZH[02ed]
+000280: cpse r24[20], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[20] = 20
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[20] = 02
+0000c0: andi r24[02], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0004], 0x40 = 04
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0004], 0x10 = 14
+000074: rjmp .1 [0078]
+000078: in r25, io:25[14]
+00007a: andi r25[14], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[02] = 12
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[12]
+000080: sbi io:25[0012], 0x20 = 32
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0032], 0x20 = 12
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[20] = 20
+0000c8: andi r24[20], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0012], 0x40 = 12
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0012], 0x10 = 12
+000074: rjmp .1 [0078]
+000078: in r25, io:25[12]
+00007a: andi r25[12], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[80] = 85
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[85], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[00] = 05
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[05], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ed]
+00027c: ld r24, Z[02ed]++
+00027e: movw r12:r13, ZL:ZH[02ee]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[80] = 86
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[86], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[00] = 06
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[06], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ee]
+00027c: ld r24, Z[02ee]++
+00027e: movw r12:r13, ZL:ZH[02ef]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[80] = 87
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[87], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[00] = 07
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[07], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ef]
+00027c: ld r24, Z[02ef]++
+00027e: movw r12:r13, ZL:ZH[02f0]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[80] = 88
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[88], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[00] = 08
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[08], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f0]
+00027c: ld r24, Z[02f0]++
+00027e: movw r12:r13, ZL:ZH[02f1]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[80] = 89
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[89], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[00] = 09
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[09], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f1]
+00027c: ld r24, Z[02f1]++
+00027e: movw r12:r13, ZL:ZH[02f2]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[80] = 8a
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8a], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[00] = 0a
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0a], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f2]
+00027c: ld r24, Z[02f2]++
+00027e: movw r12:r13, ZL:ZH[02f3]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[80] = 8b
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8b], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[00] = 0b
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0b], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f3]
+00027c: ld r24, Z[02f3]++
+00027e: movw r12:r13, ZL:ZH[02f4]
+000280: cpse r24[32], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[32] = 32
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[32] = 23
+0000c0: andi r24[23], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[32] = 32
+0000c8: andi r24[32], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[02] = 12
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[12]
+000080: sbi io:25[0012], 0x20 = 32
+hd44780_write_data 32
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0032], 0x20 = 12
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0012], 0x40 = 52
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0052], 0x10 = 42
+00009e: sbi io:25[0042], 0x20 = 62
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0062], 0x20 = 42
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0042], 0x40 = 02
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0002], 0x40 = 42
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0042], 0x10 = 42
+00009e: sbi io:25[0042], 0x20 = 62
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0062], 0x20 = 42
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0042], 0x40 = 02
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0002], 0x40 = 42
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0042], 0x10 = 42
+00009e: sbi io:25[0042], 0x20 = 62
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0062], 0x20 = 42
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0042], 0x40 = 02
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0002], 0x40 = 42
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0042], 0x10 = 42
+00009e: sbi io:25[0042], 0x20 = 62
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0062], 0x20 = 42
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0042], 0x40 = 02
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f4]
+00027c: ld r24, Z[02f4]++
+00027e: movw r12:r13, ZL:ZH[02f5]
+000280: cpse r24[00], r1[00]	; Will skip
+000284: rjmp .-50 [0222]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[c0]
+000162: push r0[42] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[00] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[00], 0x010f
+00016e: subi r24[00], 0xff = 01
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[01]
+000174: cpi r24[01], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[00]
+0001bc: pop r0 (@02e7)[42]
+0001be: out SREG, r0[42]
+0001be: 									SREG = .Z....T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[42]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[01], 0xff = 02
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[02]
+000174: cpi r24[02], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[02], 0xff = 03
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[03]
+000174: cpi r24[03], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[03], 0xff = 04
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[04]
+000174: cpi r24[04], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[04], 0xff = 05
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[05]
+000174: cpi r24[05], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[05], 0xff = 06
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[06]
+000174: cpi r24[06], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[06], 0xff = 07
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[07]
+000174: cpi r24[07], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[07], 0xff = 08
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[08]
+000174: cpi r24[08], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[08], 0xff = 09
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[09]
+000174: cpi r24[09], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[09], 0xff = 0a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0a]
+000174: cpi r24[0a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0a], 0xff = 0b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0b]
+000174: cpi r24[0b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0b], 0xff = 0c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0c]
+000174: cpi r24[0c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0c], 0xff = 0d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0d]
+000174: cpi r24[0d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0d], 0xff = 0e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0e]
+000174: cpi r24[0e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0e], 0xff = 0f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0f]
+000174: cpi r24[0f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0f], 0xff = 10
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[10]
+000174: cpi r24[10], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[10], 0xff = 11
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[11]
+000174: cpi r24[11], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[11], 0xff = 12
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[12]
+000174: cpi r24[12], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[12], 0xff = 13
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[13]
+000174: cpi r24[13], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[13], 0xff = 14
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[14]
+000174: cpi r24[14], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[14], 0xff = 15
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[15]
+000174: cpi r24[15], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[15], 0xff = 16
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[16]
+000174: cpi r24[16], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[16], 0xff = 17
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[17]
+000174: cpi r24[17], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[17], 0xff = 18
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[18]
+000174: cpi r24[18], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[18], 0xff = 19
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[19]
+000174: cpi r24[19], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[19], 0xff = 1a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1a]
+000174: cpi r24[1a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1a], 0xff = 1b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1b]
+000174: cpi r24[1b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1b], 0xff = 1c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1c]
+000174: cpi r24[1c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1c], 0xff = 1d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1d]
+000174: cpi r24[1d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1d], 0xff = 1e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1e]
+000174: cpi r24[1e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1e], 0xff = 1f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1f]
+000174: cpi r24[1f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1f], 0xff = 20
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[20]
+000174: cpi r24[20], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[20], 0xff = 21
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[21]
+000174: cpi r24[21], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[21], 0xff = 22
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[22]
+000174: cpi r24[22], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[22], 0xff = 23
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[23]
+000174: cpi r24[23], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[23], 0xff = 24
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[24]
+000174: cpi r24[24], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[24], 0xff = 25
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[25]
+000174: cpi r24[25], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[25], 0xff = 26
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[26]
+000174: cpi r24[26], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[26], 0xff = 27
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[27]
+000174: cpi r24[27], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[27], 0xff = 28
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[28]
+000174: cpi r24[28], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[28], 0xff = 29
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[29]
+000174: cpi r24[29], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[29], 0xff = 2a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2a]
+000174: cpi r24[2a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2a], 0xff = 2b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2b]
+000174: cpi r24[2b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2b], 0xff = 2c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2c]
+000174: cpi r24[2c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2c], 0xff = 2d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2d]
+000174: cpi r24[2d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2d], 0xff = 2e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2e]
+000174: cpi r24[2e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2e], 0xff = 2f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2f]
+000174: cpi r24[2f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2f], 0xff = 30
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[30]
+000174: cpi r24[30], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[30], 0xff = 31
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[31]
+000174: cpi r24[31], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[31], 0xff = 32
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[32]
+000174: cpi r24[32], 0x32
+000174: 									SREG = .Z....T.
+000176: brne .32 [01b8]	; Will not branch
+000178: lds r24[32], 0x0110
+00017c: subi r24[02], 0xff = 03
+00017c: 									SREG = C.....T.
+00017e: sts 0x0110, r24[03]
+000182: sts 0x010f, r1[00]
+000186: ldi r25, 0x01
+000188: sts 0x010e, r25[01]
+00018c: cpi r24[03], 0x3c
+00018c: 									SREG = C.N.SHT.
+00018e: brne .20 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[01]
+000226: 									SREG = ......TI
+000228: breq .-11 [0214]	; Will not branch
+00022a: sts 0x010e, r1[00]
+00022e: ldi r22, 0x00
+000230: ldi r24, 0x01
+000232: rcall .-191 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[01] = 01
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[01] = 10
+0000c0: andi r24[10], 0x0f
+0000c0: 									SREG = .Z....TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0002], 0x40 = 02
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0002], 0x10 = 02
+000078: in r25, io:25[02]
+00007a: andi r25[02], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[00] = 00
+00007c: 									SREG = .Z....TI
+00007e: out io:25, r25[00]
+000080: sbi io:25[0000], 0x20 = 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0020], 0x20 = 00
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[01] = 01
+0000c8: andi r24[01], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0000], 0x10 = 00
+000078: in r25, io:25[00]
+00007a: andi r25[00], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[01] = 01
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[01]
+000080: sbi io:25[0001], 0x20 = 21
+hd44780_write_command 01
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0021], 0x20 = 01
+00008a: ret
+000234: ldi r24, 0x01
+000236: rcall .-167 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+000238: ldi r22, 0x00
+00023a: ldi r24, 0x84
+00023c: rcall .-196 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[84] = 84
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[84] = 48
+0000c0: andi r24[48], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0001], 0x40 = 01
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0001], 0x10 = 01
+000078: in r25, io:25[01]
+00007a: andi r25[01], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[08] = 08
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[08]
+000080: sbi io:25[0008], 0x20 = 28
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0028], 0x20 = 08
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[84] = 84
+0000c8: andi r24[84], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0008], 0x40 = 08
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0008], 0x10 = 08
+000078: in r25, io:25[08]
+00007a: andi r25[08], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[04] = 04
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[04]
+000080: sbi io:25[0004], 0x20 = 24
+hd44780_write_command 84
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0024], 0x20 = 04
+00008a: ret
+00023e: ldi r24, 0x00
+000240: rcall .-172 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[80] = 84
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[84], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[00] = 04
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[04], 0x80	; Will branch
+0000f2: ret
+000242: lds r24[04], 0x0110
+000246: push r1[00] (@02ea)
+000248: push r24[03] (@02e9)
+00024a: lds r24[03], 0x0111
+00024e: push r1[00] (@02e8)
+000250: push r24[00] (@02e7)
+000252: lds r24[00], 0x0112
+000256: push r1[00] (@02e6)
+000258: push r24[00] (@02e5)
+00025a: push r15[01] (@02e4)
+00025c: push r14[00] (@02e3)
+00025e: push r17[02] (@02e2)
+000260: push r16[ec] (@02e1)
+000262: rcall .17 [0286]
+000286: ldi XL, 0x10
+000288: ldi XH, 0x00
+00028a: ldi ZL, 0x48
+00028c: ldi ZH, 0x01
+00028e: rjmp .664 [07c0]
+0007c0: push r16[ec] (@02de)
+0007c2: push r17[02] (@02dd)
+0007c4: push YL[eb] (@02dc)
+0007c6: push YH[02] (@02db)
+0007c8: in YL, SPL[db]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[db], XL[10] = cb
+0007cc: 									SREG = ..N.S.TI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[40]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[cb]
+0007da: ijmp Z[0290]
+000290: ld r16, (Y+23[02e2])=[ec]
+000292: ld r17, (Y+24[02e3])=[02]
+000294: ldi r24, 0x06
+000296: st (Y+4[02cf]), r24[06]
+000298: st (Y+2[02cd]), r17[02]
+00029a: st (Y+1[02cc]), r16[ec]
+00029c: ldi r24, 0xff
+00029e: ldi r25, 0x7f
+0002a0: st (Y+6[02d1]), r25[7f]
+0002a2: st (Y+5[02d0]), r24[ff]
+0002a4: movw r20:r21, YL:YH[02cb]
+0002a6: subi r20[cb], 0xe5 = e6
+0002a6: 									SREG = C.N.S.TI
+0002a8: sbci r21[02], 0xff = 02
+0002a8: 									SREG = C.....TI
+0002aa: st (Y+16[02db]), r21[02]
+0002ac: st (Y+15[02da]), r20[e6]
+0002ae: ld r22, (Y+25[02e4])=[00]
+0002b0: ld r23, (Y+26[02e5])=[01]
+0002b2: movw r24:r25, YL:YH[02cb]
+0002b4: adiw r24:r25[02cb], 0x01
+0002b4: 									SREG = ......TI
+0002b6: rcall .8 [02c8]
+0002c8: ldi XL, 0x0c
+0002ca: ldi XH, 0x00
+0002cc: ldi ZL, 0x69
+0002ce: ldi ZH, 0x01
+0002d0: rjmp .617 [07a4]
+0007a4: push r2[00] (@02c8)
+0007a6: push r3[00] (@02c7)
+0007a8: push r4[00] (@02c6)
+0007aa: push r5[00] (@02c5)
+0007ac: push r6[00] (@02c4)
+0007ae: push r7[00] (@02c3)
+0007b0: push r8[00] (@02c2)
+0007b2: push r9[00] (@02c1)
+0007b4: push r10[00] (@02c0)
+0007b6: push r11[00] (@02bf)
+0007b8: push r12[f5] (@02be)
+0007ba: push r13[02] (@02bd)
+0007bc: push r14[00] (@02bc)
+0007be: push r15[01] (@02bb)
+0007c0: push r16[ec] (@02ba)
+0007c2: push r17[02] (@02b9)
+0007c4: push YL[cb] (@02b8)
+0007c6: push YH[02] (@02b7)
+0007c8: in YL, SPL[b7]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[b7], XL[0c] = ab
+0007cc: 									SREG = ..N.SHTI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[c0]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[ab]
+0007da: ijmp Z[02d2]
+0002d2: movw r14:r15, r24:r25[02cc]
+0002d4: movw r12:r13, r22:r23[0100]
+0002d6: movw r16:r17, r20:r21[02e6]
+0002d8: movw ZL:ZH, r24:r25[02cc]
+0002da: st (Z+7[02d3]), r1[00]
+0002dc: st (Z+6[02d2]), r1[00]
+0002de: ld r24, (Z+3[02cf])=[06]
+0002e0: sbrs r24[06], 0x02	; Will branch
+0002e4: clr r8[00]
+0002e4: 									SREG = .Z....TI
+0002e6: inc r8[00] = 01
+0002e6: 									SREG = ......TI
+0002e8: mov r9, r1[00] = 00
+0002ea: add r8[01], YL[ab] = ac
+0002ea: 									SREG = ..N.S.TI
+0002ec: addc r9[00], YH[02] = 02
+0002ec: 									SREG = ......TI
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0100]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0100]++
+0002fc: movw r12:r13, ZL:ZH[0101]
+0002fe: tst r24[25]
+0002fe: 									SREG = ......TI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0101]++
+000310: movw r12:r13, ZL:ZH[0102]
+000312: cpi r24[32], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[00], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[00], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[00], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0102]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0102]++
+00039e: movw r12:r13, ZL:ZH[0103]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[20], 0x20
+000324: 									SREG = .Z....TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[20], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e6]
+000488: sbrs r18[20], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e6])=[00]
+00049c: ld r23, (Z+1[02e7])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e6], 0xfe = e8
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[20] = 20
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[0c]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[20], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[20] = 20
+000578: rjmp .3 [0580]
+000580: sbrs r19[20], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[20] = 20
+0005a0: andi r24[20], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[20], 0x08	; Will branch
+0005aa: sbrs r19[20], 0x01	; Will not branch
+0005ac: rjmp .14 [05ca]
+0005ca: cp r11[01], r3[02] = ff
+0005ca: 									SREG = C.N.SHTI
+0005cc: brcs .-9 [05bc]	; Will branch
+0005bc: movw r22:r23, r14:r15[02cc]
+0005be: ldi r24, 0x20
+0005c0: ldi r25, 0x00
+0005c2: st (Y+12[02b7]), r19[20]
+0005c4: rcall .101 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0020]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[00]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[00], r24[ff] = 01
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ec]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ec]++, r16[20] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ed]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[00]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0000], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[01]
+0006dc: movw r24:r25, r16:r17[0020]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+0005c6: inc r11[01] = 02
+0005c6: 									SREG = .....HTI
+0005c8: ld r19, (Y+12[02b7])=[20]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[20], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[20] = 20
+000602: andi r24[20], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[00] = 01
+000626: 									SREG = ......TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[01]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[01], r24[ff] = 02
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ed]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ed]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ee]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[01]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0001], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[02]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0103]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0103]++
+0002fc: movw r12:r13, ZL:ZH[0104]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[02]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[02], r24[ff] = 03
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ee]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ee]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ef]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[02]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0002], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[03]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0104]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0104]++
+0002fc: movw r12:r13, ZL:ZH[0105]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0105]++
+000310: movw r12:r13, ZL:ZH[0106]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[0106]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0106]++
+00039e: movw r12:r13, ZL:ZH[0107]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0107]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0107]++
+00039e: movw r12:r13, ZL:ZH[0108]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e8]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e8])=[00]
+00049c: ld r23, (Z+1[02e9])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e8], 0xfe = ea
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[03]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[03], r24[ff] = 04
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ef]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ef]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f0]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[03]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0003], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[04]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[04]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[04], r24[ff] = 05
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f0]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f0]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f1]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[04]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0004], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[05]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0108]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0108]++
+0002fc: movw r12:r13, ZL:ZH[0109]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[05]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[05], r24[ff] = 06
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f1]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f1]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f2]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[05]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0005], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[06]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0109]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0109]++
+0002fc: movw r12:r13, ZL:ZH[010a]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[010a]++
+000310: movw r12:r13, ZL:ZH[010b]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[010b]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010b]++
+00039e: movw r12:r13, ZL:ZH[010c]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[010c]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010c]++
+00039e: movw r12:r13, ZL:ZH[010d]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02ea]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02ea])=[03]
+00049c: ld r23, (Z+1[02eb])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[ea], 0xfe = ec
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[03] (@02a8)
+0006f8: andi r22[03], 0xfe
+0006f8: 									SREG = C......I
+0006fa: subi r22[02], 0xfe = 04
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0004]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[04]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[04], r18[02] = 06
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0006]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[06]
+000792: 									SREG = .......I
+000794: dec XH[04] = 03
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[02] = 01
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[06], r18[00] = 06
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[06], r23[00] = 06
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[06], r24[00] = 06
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[06], XL[00] = 06
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[06]
+000776: 									SREG = .......I
+000778: dec XH[04] = 03
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[02] = 01
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[03]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[03], r0[00] = 03
+000738: 									SREG = ......TI
+00073a: subi r19[03], 0xd0 = 33
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[33] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[06]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[06], r24[ff] = 07
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f2]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f2]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f3]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[06]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0006], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[07]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[33]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0033]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[07]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[07], r24[ff] = 08
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f3]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f3]++, r16[33] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f4]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[07]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0007], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[08]
+0006dc: movw r24:r25, r16:r17[0033]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[010d]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[010d]++
+0002fc: movw r12:r13, ZL:ZH[010e]
+0002fe: tst r24[00]
+0002fe: 									SREG = .Z...HTI
+000300: brne .1 [0304]	; Will not branch
+000302: rjmp .422 [0650]
+000650: movw ZL:ZH, r14:r15[02cc]
+000652: ld r18, (Z+6[02d2])=[08]
+000654: ld r19, (Z+7[02d3])=[00]
+000656: rjmp .2 [065c]
+00065c: movw r24:r25, r18:r19[0008]
+00065e: adiw YL:YH[02ab], 0x0c
+00065e: 									SREG = .....HTI
+000660: ldi ZL, 0x12
+000662: rjmp .188 [07dc]
+0007dc: ld r2, (Y+18[02c9])=[00]
+0007de: ld r3, (Y+17[02c8])=[00]
+0007e0: ld r4, (Y+16[02c7])=[00]
+0007e2: ld r5, (Y+15[02c6])=[00]
+0007e4: ld r6, (Y+14[02c5])=[00]
+0007e6: ld r7, (Y+13[02c4])=[00]
+0007e8: ld r8, (Y+12[02c3])=[00]
+0007ea: ld r9, (Y+11[02c2])=[00]
+0007ec: ld r10, (Y+10[02c1])=[00]
+0007ee: ld r11, (Y+9[02c0])=[00]
+0007f0: ld r12, (Y+8[02bf])=[f5]
+0007f2: ld r13, (Y+7[02be])=[02]
+0007f4: ld r14, (Y+6[02bd])=[00]
+0007f6: ld r15, (Y+5[02bc])=[01]
+0007f8: ld r16, (Y+4[02bb])=[ec]
+0007fa: ld r17, (Y+3[02ba])=[02]
+0007fc: ld XL, (Y+2[02b9])=[cb]
+0007fe: ld XH, (Y+1[02b8])=[02]
+000800: add YL[b7], ZL[12] = c9
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[c9]
+00080e: movw YL:YH, XL:XH[02cb]
+000810: ret
+0002b8: ld ZL, (Y+7[02d2])=[08]
+0002ba: ld ZH, (Y+8[02d3])=[00]
+0002bc: add ZL[08], r16[ec] = f4
+0002bc: 									SREG = ..N.SHTI
+0002be: addc ZH[00], r17[02] = 02
+0002be: 									SREG = ......TI
+0002c0: st (Z+0[02f4]), r1[00]
+0002c2: adiw YL:YH[02cb], 0x10
+0002c2: 									SREG = ......TI
+0002c4: ldi ZL, 0x04
+0002c6: rjmp .664 [07f8]
+0007f8: ld r16, (Y+4[02df])=[ec]
+0007fa: ld r17, (Y+3[02de])=[02]
+0007fc: ld XL, (Y+2[02dd])=[eb]
+0007fe: ld XH, (Y+1[02dc])=[02]
+000800: add YL[db], ZL[04] = df
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[df]
+00080e: movw YL:YH, XL:XH[02eb]
+000810: ret
+000264: movw r12:r13, r16:r17[02ec]
+000266: in r0, SREG[c0]
+000268: cli
+000268: 									SREG = ......T.
+00026a: out SPH, YH[02]
+00026c: out SREG, r0[c0]
+00026c: 									SREG = ......TI
+00026e: out SPL, YL[eb]
+000270: rjmp .4 [027a]
+00027a: movw ZL:ZH, r12:r13[02ec]
+00027c: ld r24, Z[02ec]++
+00027e: movw r12:r13, ZL:ZH[02ed]
+000280: cpse r24[20], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[20] = 20
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[20] = 02
+0000c0: andi r24[02], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0004], 0x40 = 04
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0004], 0x10 = 14
+000074: rjmp .1 [0078]
+000078: in r25, io:25[14]
+00007a: andi r25[14], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[02] = 12
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[12]
+000080: sbi io:25[0012], 0x20 = 32
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0032], 0x20 = 12
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[20] = 20
+0000c8: andi r24[20], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0012], 0x40 = 12
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0012], 0x10 = 12
+000074: rjmp .1 [0078]
+000078: in r25, io:25[12]
+00007a: andi r25[12], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[80] = 85
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[85], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[00] = 05
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[05], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ed]
+00027c: ld r24, Z[02ed]++
+00027e: movw r12:r13, ZL:ZH[02ee]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[80] = 86
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[86], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[00] = 06
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[06], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ee]
+00027c: ld r24, Z[02ee]++
+00027e: movw r12:r13, ZL:ZH[02ef]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[80] = 87
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[87], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[00] = 07
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[07], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ef]
+00027c: ld r24, Z[02ef]++
+00027e: movw r12:r13, ZL:ZH[02f0]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[80] = 88
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[88], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[00] = 08
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[08], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f0]
+00027c: ld r24, Z[02f0]++
+00027e: movw r12:r13, ZL:ZH[02f1]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[80] = 89
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[89], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[00] = 09
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[09], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f1]
+00027c: ld r24, Z[02f1]++
+00027e: movw r12:r13, ZL:ZH[02f2]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[80] = 8a
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8a], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[00] = 0a
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0a], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f2]
+00027c: ld r24, Z[02f2]++
+00027e: movw r12:r13, ZL:ZH[02f3]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[80] = 8b
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8b], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[00] = 0b
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0b], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f3]
+00027c: ld r24, Z[02f3]++
+00027e: movw r12:r13, ZL:ZH[02f4]
+000280: cpse r24[33], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[33] = 33
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[33] = 33
+0000c0: andi r24[33], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[33] = 33
+0000c8: andi r24[33], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+hd44780_write_data 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0013], 0x40 = 53
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0053], 0x10 = 43
+00009e: sbi io:25[0043], 0x20 = 63
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0063], 0x20 = 43
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0043], 0x40 = 03
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0003], 0x40 = 43
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0043], 0x10 = 43
+00009e: sbi io:25[0043], 0x20 = 63
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0063], 0x20 = 43
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0043], 0x40 = 03
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0003], 0x40 = 43
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0043], 0x10 = 43
+00009e: sbi io:25[0043], 0x20 = 63
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0063], 0x20 = 43
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0043], 0x40 = 03
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0003], 0x40 = 43
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0043], 0x10 = 43
+00009e: sbi io:25[0043], 0x20 = 63
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0063], 0x20 = 43
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0043], 0x40 = 03
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f4]
+00027c: ld r24, Z[02f4]++
+00027e: movw r12:r13, ZL:ZH[02f5]
+000280: cpse r24[00], r1[00]	; Will skip
+000284: rjmp .-50 [0222]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[c0]
+000162: push r0[42] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[00] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[00], 0x010f
+00016e: subi r24[00], 0xff = 01
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[01]
+000174: cpi r24[01], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[00]
+0001bc: pop r0 (@02e7)[42]
+0001be: out SREG, r0[42]
+0001be: 									SREG = .Z....T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[42]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[01], 0xff = 02
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[02]
+000174: cpi r24[02], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[02], 0xff = 03
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[03]
+000174: cpi r24[03], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[03], 0xff = 04
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[04]
+000174: cpi r24[04], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[04], 0xff = 05
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[05]
+000174: cpi r24[05], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[05], 0xff = 06
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[06]
+000174: cpi r24[06], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[06], 0xff = 07
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[07]
+000174: cpi r24[07], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[07], 0xff = 08
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[08]
+000174: cpi r24[08], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[08], 0xff = 09
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[09]
+000174: cpi r24[09], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[09], 0xff = 0a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0a]
+000174: cpi r24[0a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0a], 0xff = 0b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0b]
+000174: cpi r24[0b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0b], 0xff = 0c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0c]
+000174: cpi r24[0c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0c], 0xff = 0d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0d]
+000174: cpi r24[0d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0d], 0xff = 0e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0e]
+000174: cpi r24[0e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0e], 0xff = 0f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0f]
+000174: cpi r24[0f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0f], 0xff = 10
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[10]
+000174: cpi r24[10], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[10], 0xff = 11
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[11]
+000174: cpi r24[11], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[11], 0xff = 12
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[12]
+000174: cpi r24[12], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[12], 0xff = 13
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[13]
+000174: cpi r24[13], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[13], 0xff = 14
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[14]
+000174: cpi r24[14], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[14], 0xff = 15
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[15]
+000174: cpi r24[15], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[15], 0xff = 16
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[16]
+000174: cpi r24[16], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[16], 0xff = 17
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[17]
+000174: cpi r24[17], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[17], 0xff = 18
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[18]
+000174: cpi r24[18], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[18], 0xff = 19
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[19]
+000174: cpi r24[19], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[19], 0xff = 1a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1a]
+000174: cpi r24[1a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1a], 0xff = 1b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1b]
+000174: cpi r24[1b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1b], 0xff = 1c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1c]
+000174: cpi r24[1c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1c], 0xff = 1d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1d]
+000174: cpi r24[1d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1d], 0xff = 1e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1e]
+000174: cpi r24[1e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1e], 0xff = 1f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1f]
+000174: cpi r24[1f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1f], 0xff = 20
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[20]
+000174: cpi r24[20], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[20], 0xff = 21
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[21]
+000174: cpi r24[21], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[21], 0xff = 22
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[22]
+000174: cpi r24[22], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[22], 0xff = 23
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[23]
+000174: cpi r24[23], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[23], 0xff = 24
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[24]
+000174: cpi r24[24], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[24], 0xff = 25
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[25]
+000174: cpi r24[25], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[25], 0xff = 26
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[26]
+000174: cpi r24[26], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[26], 0xff = 27
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[27]
+000174: cpi r24[27], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[27], 0xff = 28
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[28]
+000174: cpi r24[28], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[28], 0xff = 29
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[29]
+000174: cpi r24[29], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[29], 0xff = 2a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2a]
+000174: cpi r24[2a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2a], 0xff = 2b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2b]
+000174: cpi r24[2b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2b], 0xff = 2c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2c]
+000174: cpi r24[2c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2c], 0xff = 2d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2d]
+000174: cpi r24[2d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2d], 0xff = 2e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2e]
+000174: cpi r24[2e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2e], 0xff = 2f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2f]
+000174: cpi r24[2f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2f], 0xff = 30
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[30]
+000174: cpi r24[30], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[30], 0xff = 31
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[31]
+000174: cpi r24[31], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[31], 0xff = 32
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[32]
+000174: cpi r24[32], 0x32
+000174: 									SREG = .Z....T.
+000176: brne .32 [01b8]	; Will not branch
+000178: lds r24[32], 0x0110
+00017c: subi r24[03], 0xff = 04
+00017c: 									SREG = C.....T.
+00017e: sts 0x0110, r24[04]
+000182: sts 0x010f, r1[00]
+000186: ldi r25, 0x01
+000188: sts 0x010e, r25[01]
+00018c: cpi r24[04], 0x3c
+00018c: 									SREG = C.N.SHT.
+00018e: brne .20 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[01]
+000226: 									SREG = ......TI
+000228: breq .-11 [0214]	; Will not branch
+00022a: sts 0x010e, r1[00]
+00022e: ldi r22, 0x00
+000230: ldi r24, 0x01
+000232: rcall .-191 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[01] = 01
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[01] = 10
+0000c0: andi r24[10], 0x0f
+0000c0: 									SREG = .Z....TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0003], 0x40 = 03
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0003], 0x10 = 03
+000078: in r25, io:25[03]
+00007a: andi r25[03], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[00] = 00
+00007c: 									SREG = .Z....TI
+00007e: out io:25, r25[00]
+000080: sbi io:25[0000], 0x20 = 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0020], 0x20 = 00
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[01] = 01
+0000c8: andi r24[01], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0000], 0x10 = 00
+000078: in r25, io:25[00]
+00007a: andi r25[00], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[01] = 01
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[01]
+000080: sbi io:25[0001], 0x20 = 21
+hd44780_write_command 01
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0021], 0x20 = 01
+00008a: ret
+000234: ldi r24, 0x01
+000236: rcall .-167 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+000238: ldi r22, 0x00
+00023a: ldi r24, 0x84
+00023c: rcall .-196 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[84] = 84
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[84] = 48
+0000c0: andi r24[48], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0001], 0x40 = 01
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0001], 0x10 = 01
+000078: in r25, io:25[01]
+00007a: andi r25[01], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[08] = 08
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[08]
+000080: sbi io:25[0008], 0x20 = 28
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0028], 0x20 = 08
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[84] = 84
+0000c8: andi r24[84], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0008], 0x40 = 08
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0008], 0x10 = 08
+000078: in r25, io:25[08]
+00007a: andi r25[08], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[04] = 04
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[04]
+000080: sbi io:25[0004], 0x20 = 24
+hd44780_write_command 84
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0024], 0x20 = 04
+00008a: ret
+00023e: ldi r24, 0x00
+000240: rcall .-172 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[80] = 84
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[84], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[00] = 04
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[04], 0x80	; Will branch
+0000f2: ret
+000242: lds r24[04], 0x0110
+000246: push r1[00] (@02ea)
+000248: push r24[04] (@02e9)
+00024a: lds r24[04], 0x0111
+00024e: push r1[00] (@02e8)
+000250: push r24[00] (@02e7)
+000252: lds r24[00], 0x0112
+000256: push r1[00] (@02e6)
+000258: push r24[00] (@02e5)
+00025a: push r15[01] (@02e4)
+00025c: push r14[00] (@02e3)
+00025e: push r17[02] (@02e2)
+000260: push r16[ec] (@02e1)
+000262: rcall .17 [0286]
+000286: ldi XL, 0x10
+000288: ldi XH, 0x00
+00028a: ldi ZL, 0x48
+00028c: ldi ZH, 0x01
+00028e: rjmp .664 [07c0]
+0007c0: push r16[ec] (@02de)
+0007c2: push r17[02] (@02dd)
+0007c4: push YL[eb] (@02dc)
+0007c6: push YH[02] (@02db)
+0007c8: in YL, SPL[db]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[db], XL[10] = cb
+0007cc: 									SREG = ..N.S.TI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[40]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[cb]
+0007da: ijmp Z[0290]
+000290: ld r16, (Y+23[02e2])=[ec]
+000292: ld r17, (Y+24[02e3])=[02]
+000294: ldi r24, 0x06
+000296: st (Y+4[02cf]), r24[06]
+000298: st (Y+2[02cd]), r17[02]
+00029a: st (Y+1[02cc]), r16[ec]
+00029c: ldi r24, 0xff
+00029e: ldi r25, 0x7f
+0002a0: st (Y+6[02d1]), r25[7f]
+0002a2: st (Y+5[02d0]), r24[ff]
+0002a4: movw r20:r21, YL:YH[02cb]
+0002a6: subi r20[cb], 0xe5 = e6
+0002a6: 									SREG = C.N.S.TI
+0002a8: sbci r21[02], 0xff = 02
+0002a8: 									SREG = C.....TI
+0002aa: st (Y+16[02db]), r21[02]
+0002ac: st (Y+15[02da]), r20[e6]
+0002ae: ld r22, (Y+25[02e4])=[00]
+0002b0: ld r23, (Y+26[02e5])=[01]
+0002b2: movw r24:r25, YL:YH[02cb]
+0002b4: adiw r24:r25[02cb], 0x01
+0002b4: 									SREG = ......TI
+0002b6: rcall .8 [02c8]
+0002c8: ldi XL, 0x0c
+0002ca: ldi XH, 0x00
+0002cc: ldi ZL, 0x69
+0002ce: ldi ZH, 0x01
+0002d0: rjmp .617 [07a4]
+0007a4: push r2[00] (@02c8)
+0007a6: push r3[00] (@02c7)
+0007a8: push r4[00] (@02c6)
+0007aa: push r5[00] (@02c5)
+0007ac: push r6[00] (@02c4)
+0007ae: push r7[00] (@02c3)
+0007b0: push r8[00] (@02c2)
+0007b2: push r9[00] (@02c1)
+0007b4: push r10[00] (@02c0)
+0007b6: push r11[00] (@02bf)
+0007b8: push r12[f5] (@02be)
+0007ba: push r13[02] (@02bd)
+0007bc: push r14[00] (@02bc)
+0007be: push r15[01] (@02bb)
+0007c0: push r16[ec] (@02ba)
+0007c2: push r17[02] (@02b9)
+0007c4: push YL[cb] (@02b8)
+0007c6: push YH[02] (@02b7)
+0007c8: in YL, SPL[b7]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[b7], XL[0c] = ab
+0007cc: 									SREG = ..N.SHTI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[c0]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[ab]
+0007da: ijmp Z[02d2]
+0002d2: movw r14:r15, r24:r25[02cc]
+0002d4: movw r12:r13, r22:r23[0100]
+0002d6: movw r16:r17, r20:r21[02e6]
+0002d8: movw ZL:ZH, r24:r25[02cc]
+0002da: st (Z+7[02d3]), r1[00]
+0002dc: st (Z+6[02d2]), r1[00]
+0002de: ld r24, (Z+3[02cf])=[06]
+0002e0: sbrs r24[06], 0x02	; Will branch
+0002e4: clr r8[00]
+0002e4: 									SREG = .Z....TI
+0002e6: inc r8[00] = 01
+0002e6: 									SREG = ......TI
+0002e8: mov r9, r1[00] = 00
+0002ea: add r8[01], YL[ab] = ac
+0002ea: 									SREG = ..N.S.TI
+0002ec: addc r9[00], YH[02] = 02
+0002ec: 									SREG = ......TI
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0100]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0100]++
+0002fc: movw r12:r13, ZL:ZH[0101]
+0002fe: tst r24[25]
+0002fe: 									SREG = ......TI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0101]++
+000310: movw r12:r13, ZL:ZH[0102]
+000312: cpi r24[32], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[00], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[00], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[00], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0102]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0102]++
+00039e: movw r12:r13, ZL:ZH[0103]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[20], 0x20
+000324: 									SREG = .Z....TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[20], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e6]
+000488: sbrs r18[20], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e6])=[00]
+00049c: ld r23, (Z+1[02e7])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e6], 0xfe = e8
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[20] = 20
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[0c]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[20], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[20] = 20
+000578: rjmp .3 [0580]
+000580: sbrs r19[20], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[20] = 20
+0005a0: andi r24[20], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[20], 0x08	; Will branch
+0005aa: sbrs r19[20], 0x01	; Will not branch
+0005ac: rjmp .14 [05ca]
+0005ca: cp r11[01], r3[02] = ff
+0005ca: 									SREG = C.N.SHTI
+0005cc: brcs .-9 [05bc]	; Will branch
+0005bc: movw r22:r23, r14:r15[02cc]
+0005be: ldi r24, 0x20
+0005c0: ldi r25, 0x00
+0005c2: st (Y+12[02b7]), r19[20]
+0005c4: rcall .101 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0020]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[00]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[00], r24[ff] = 01
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ec]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ec]++, r16[20] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ed]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[00]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0000], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[01]
+0006dc: movw r24:r25, r16:r17[0020]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+0005c6: inc r11[01] = 02
+0005c6: 									SREG = .....HTI
+0005c8: ld r19, (Y+12[02b7])=[20]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[20], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[20] = 20
+000602: andi r24[20], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[00] = 01
+000626: 									SREG = ......TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[01]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[01], r24[ff] = 02
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ed]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ed]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ee]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[01]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0001], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[02]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0103]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0103]++
+0002fc: movw r12:r13, ZL:ZH[0104]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[02]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[02], r24[ff] = 03
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ee]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ee]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ef]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[02]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0002], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[03]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0104]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0104]++
+0002fc: movw r12:r13, ZL:ZH[0105]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0105]++
+000310: movw r12:r13, ZL:ZH[0106]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[0106]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0106]++
+00039e: movw r12:r13, ZL:ZH[0107]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0107]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0107]++
+00039e: movw r12:r13, ZL:ZH[0108]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e8]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e8])=[00]
+00049c: ld r23, (Z+1[02e9])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e8], 0xfe = ea
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[03]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[03], r24[ff] = 04
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ef]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ef]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f0]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[03]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0003], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[04]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[04]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[04], r24[ff] = 05
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f0]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f0]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f1]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[04]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0004], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[05]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0108]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0108]++
+0002fc: movw r12:r13, ZL:ZH[0109]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[05]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[05], r24[ff] = 06
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f1]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f1]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f2]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[05]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0005], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[06]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0109]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0109]++
+0002fc: movw r12:r13, ZL:ZH[010a]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[010a]++
+000310: movw r12:r13, ZL:ZH[010b]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[010b]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010b]++
+00039e: movw r12:r13, ZL:ZH[010c]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[010c]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010c]++
+00039e: movw r12:r13, ZL:ZH[010d]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02ea]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02ea])=[04]
+00049c: ld r23, (Z+1[02eb])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[ea], 0xfe = ec
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[04] (@02a8)
+0006f8: andi r22[04], 0xfe
+0006f8: 									SREG = C......I
+0006fa: subi r22[04], 0xfe = 06
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0006]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[06]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[06], r18[03] = 09
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0009]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[09]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[04]
+000792: 									SREG = .......I
+000794: dec XH[03] = 02
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[01] = 00
+000794: 									SREG = CZ.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[09], r18[00] = 09
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[09], r23[00] = 09
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[09], r24[00] = 09
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[09], XL[00] = 09
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[09]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[04]
+000776: 									SREG = .......I
+000778: dec XH[03] = 02
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[02]
+000776: 									SREG = .......I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[01] = 00
+000778: 									SREG = CZ.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[04]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[04], r0[00] = 04
+000738: 									SREG = ......TI
+00073a: subi r19[04], 0xd0 = 34
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[34] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[06]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[06], r24[ff] = 07
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f2]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f2]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f3]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[06]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0006], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[07]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[34]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0034]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[07]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[07], r24[ff] = 08
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f3]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f3]++, r16[34] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f4]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[07]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0007], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[08]
+0006dc: movw r24:r25, r16:r17[0034]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[010d]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[010d]++
+0002fc: movw r12:r13, ZL:ZH[010e]
+0002fe: tst r24[00]
+0002fe: 									SREG = .Z...HTI
+000300: brne .1 [0304]	; Will not branch
+000302: rjmp .422 [0650]
+000650: movw ZL:ZH, r14:r15[02cc]
+000652: ld r18, (Z+6[02d2])=[08]
+000654: ld r19, (Z+7[02d3])=[00]
+000656: rjmp .2 [065c]
+00065c: movw r24:r25, r18:r19[0008]
+00065e: adiw YL:YH[02ab], 0x0c
+00065e: 									SREG = .....HTI
+000660: ldi ZL, 0x12
+000662: rjmp .188 [07dc]
+0007dc: ld r2, (Y+18[02c9])=[00]
+0007de: ld r3, (Y+17[02c8])=[00]
+0007e0: ld r4, (Y+16[02c7])=[00]
+0007e2: ld r5, (Y+15[02c6])=[00]
+0007e4: ld r6, (Y+14[02c5])=[00]
+0007e6: ld r7, (Y+13[02c4])=[00]
+0007e8: ld r8, (Y+12[02c3])=[00]
+0007ea: ld r9, (Y+11[02c2])=[00]
+0007ec: ld r10, (Y+10[02c1])=[00]
+0007ee: ld r11, (Y+9[02c0])=[00]
+0007f0: ld r12, (Y+8[02bf])=[f5]
+0007f2: ld r13, (Y+7[02be])=[02]
+0007f4: ld r14, (Y+6[02bd])=[00]
+0007f6: ld r15, (Y+5[02bc])=[01]
+0007f8: ld r16, (Y+4[02bb])=[ec]
+0007fa: ld r17, (Y+3[02ba])=[02]
+0007fc: ld XL, (Y+2[02b9])=[cb]
+0007fe: ld XH, (Y+1[02b8])=[02]
+000800: add YL[b7], ZL[12] = c9
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[c9]
+00080e: movw YL:YH, XL:XH[02cb]
+000810: ret
+0002b8: ld ZL, (Y+7[02d2])=[08]
+0002ba: ld ZH, (Y+8[02d3])=[00]
+0002bc: add ZL[08], r16[ec] = f4
+0002bc: 									SREG = ..N.SHTI
+0002be: addc ZH[00], r17[02] = 02
+0002be: 									SREG = ......TI
+0002c0: st (Z+0[02f4]), r1[00]
+0002c2: adiw YL:YH[02cb], 0x10
+0002c2: 									SREG = ......TI
+0002c4: ldi ZL, 0x04
+0002c6: rjmp .664 [07f8]
+0007f8: ld r16, (Y+4[02df])=[ec]
+0007fa: ld r17, (Y+3[02de])=[02]
+0007fc: ld XL, (Y+2[02dd])=[eb]
+0007fe: ld XH, (Y+1[02dc])=[02]
+000800: add YL[db], ZL[04] = df
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[df]
+00080e: movw YL:YH, XL:XH[02eb]
+000810: ret
+000264: movw r12:r13, r16:r17[02ec]
+000266: in r0, SREG[c0]
+000268: cli
+000268: 									SREG = ......T.
+00026a: out SPH, YH[02]
+00026c: out SREG, r0[c0]
+00026c: 									SREG = ......TI
+00026e: out SPL, YL[eb]
+000270: rjmp .4 [027a]
+00027a: movw ZL:ZH, r12:r13[02ec]
+00027c: ld r24, Z[02ec]++
+00027e: movw r12:r13, ZL:ZH[02ed]
+000280: cpse r24[20], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[20] = 20
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[20] = 02
+0000c0: andi r24[02], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0004], 0x40 = 04
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0004], 0x10 = 14
+000074: rjmp .1 [0078]
+000078: in r25, io:25[14]
+00007a: andi r25[14], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[02] = 12
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[12]
+000080: sbi io:25[0012], 0x20 = 32
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0032], 0x20 = 12
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[20] = 20
+0000c8: andi r24[20], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0012], 0x40 = 12
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0012], 0x10 = 12
+000074: rjmp .1 [0078]
+000078: in r25, io:25[12]
+00007a: andi r25[12], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[80] = 85
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[85], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[00] = 05
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[05], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ed]
+00027c: ld r24, Z[02ed]++
+00027e: movw r12:r13, ZL:ZH[02ee]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[80] = 86
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[86], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[00] = 06
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[06], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ee]
+00027c: ld r24, Z[02ee]++
+00027e: movw r12:r13, ZL:ZH[02ef]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[80] = 87
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[87], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[00] = 07
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[07], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ef]
+00027c: ld r24, Z[02ef]++
+00027e: movw r12:r13, ZL:ZH[02f0]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[80] = 88
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[88], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[00] = 08
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[08], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f0]
+00027c: ld r24, Z[02f0]++
+00027e: movw r12:r13, ZL:ZH[02f1]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[80] = 89
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[89], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[00] = 09
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[09], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f1]
+00027c: ld r24, Z[02f1]++
+00027e: movw r12:r13, ZL:ZH[02f2]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[80] = 8a
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8a], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[00] = 0a
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0a], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f2]
+00027c: ld r24, Z[02f2]++
+00027e: movw r12:r13, ZL:ZH[02f3]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[80] = 8b
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8b], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[00] = 0b
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0b], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f3]
+00027c: ld r24, Z[02f3]++
+00027e: movw r12:r13, ZL:ZH[02f4]
+000280: cpse r24[34], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[34] = 34
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[34] = 43
+0000c0: andi r24[43], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[34] = 34
+0000c8: andi r24[34], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[04] = 14
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[14]
+000080: sbi io:25[0014], 0x20 = 34
+hd44780_write_data 34
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0034], 0x20 = 14
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0014], 0x40 = 54
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0054], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f4]
+00027c: ld r24, Z[02f4]++
+00027e: movw r12:r13, ZL:ZH[02f5]
+000280: cpse r24[00], r1[00]	; Will skip
+000284: rjmp .-50 [0222]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[c0]
+000162: push r0[42] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[00] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[00], 0x010f
+00016e: subi r24[00], 0xff = 01
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[01]
+000174: cpi r24[01], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[00]
+0001bc: pop r0 (@02e7)[42]
+0001be: out SREG, r0[42]
+0001be: 									SREG = .Z....T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[42]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[01], 0xff = 02
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[02]
+000174: cpi r24[02], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[02], 0xff = 03
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[03]
+000174: cpi r24[03], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[03], 0xff = 04
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[04]
+000174: cpi r24[04], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[04], 0xff = 05
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[05]
+000174: cpi r24[05], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[05], 0xff = 06
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[06]
+000174: cpi r24[06], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[06], 0xff = 07
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[07]
+000174: cpi r24[07], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[07], 0xff = 08
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[08]
+000174: cpi r24[08], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[08], 0xff = 09
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[09]
+000174: cpi r24[09], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[09], 0xff = 0a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0a]
+000174: cpi r24[0a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0a], 0xff = 0b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0b]
+000174: cpi r24[0b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0b], 0xff = 0c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0c]
+000174: cpi r24[0c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0c], 0xff = 0d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0d]
+000174: cpi r24[0d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0d], 0xff = 0e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0e]
+000174: cpi r24[0e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0e], 0xff = 0f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0f]
+000174: cpi r24[0f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0f], 0xff = 10
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[10]
+000174: cpi r24[10], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[10], 0xff = 11
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[11]
+000174: cpi r24[11], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[11], 0xff = 12
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[12]
+000174: cpi r24[12], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[12], 0xff = 13
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[13]
+000174: cpi r24[13], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[13], 0xff = 14
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[14]
+000174: cpi r24[14], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[14], 0xff = 15
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[15]
+000174: cpi r24[15], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[15], 0xff = 16
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[16]
+000174: cpi r24[16], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[16], 0xff = 17
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[17]
+000174: cpi r24[17], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[17], 0xff = 18
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[18]
+000174: cpi r24[18], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[18], 0xff = 19
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[19]
+000174: cpi r24[19], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[19], 0xff = 1a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1a]
+000174: cpi r24[1a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1a], 0xff = 1b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1b]
+000174: cpi r24[1b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1b], 0xff = 1c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1c]
+000174: cpi r24[1c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1c], 0xff = 1d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1d]
+000174: cpi r24[1d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1d], 0xff = 1e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1e]
+000174: cpi r24[1e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1e], 0xff = 1f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1f]
+000174: cpi r24[1f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1f], 0xff = 20
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[20]
+000174: cpi r24[20], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[20], 0xff = 21
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[21]
+000174: cpi r24[21], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[21], 0xff = 22
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[22]
+000174: cpi r24[22], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[22], 0xff = 23
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[23]
+000174: cpi r24[23], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[23], 0xff = 24
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[24]
+000174: cpi r24[24], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[24], 0xff = 25
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[25]
+000174: cpi r24[25], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[25], 0xff = 26
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[26]
+000174: cpi r24[26], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[26], 0xff = 27
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[27]
+000174: cpi r24[27], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[27], 0xff = 28
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[28]
+000174: cpi r24[28], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[28], 0xff = 29
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[29]
+000174: cpi r24[29], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[29], 0xff = 2a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2a]
+000174: cpi r24[2a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2a], 0xff = 2b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2b]
+000174: cpi r24[2b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2b], 0xff = 2c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2c]
+000174: cpi r24[2c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2c], 0xff = 2d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2d]
+000174: cpi r24[2d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2d], 0xff = 2e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2e]
+000174: cpi r24[2e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2e], 0xff = 2f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2f]
+000174: cpi r24[2f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2f], 0xff = 30
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[30]
+000174: cpi r24[30], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[30], 0xff = 31
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[31]
+000174: cpi r24[31], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[31], 0xff = 32
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[32]
+000174: cpi r24[32], 0x32
+000174: 									SREG = .Z....T.
+000176: brne .32 [01b8]	; Will not branch
+000178: lds r24[32], 0x0110
+00017c: subi r24[04], 0xff = 05
+00017c: 									SREG = C.....T.
+00017e: sts 0x0110, r24[05]
+000182: sts 0x010f, r1[00]
+000186: ldi r25, 0x01
+000188: sts 0x010e, r25[01]
+00018c: cpi r24[05], 0x3c
+00018c: 									SREG = C.N.SHT.
+00018e: brne .20 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[01]
+000226: 									SREG = ......TI
+000228: breq .-11 [0214]	; Will not branch
+00022a: sts 0x010e, r1[00]
+00022e: ldi r22, 0x00
+000230: ldi r24, 0x01
+000232: rcall .-191 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[01] = 01
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[01] = 10
+0000c0: andi r24[10], 0x0f
+0000c0: 									SREG = .Z....TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0004], 0x40 = 04
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0004], 0x10 = 04
+000078: in r25, io:25[04]
+00007a: andi r25[04], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[00] = 00
+00007c: 									SREG = .Z....TI
+00007e: out io:25, r25[00]
+000080: sbi io:25[0000], 0x20 = 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0020], 0x20 = 00
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[01] = 01
+0000c8: andi r24[01], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0000], 0x10 = 00
+000078: in r25, io:25[00]
+00007a: andi r25[00], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[01] = 01
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[01]
+000080: sbi io:25[0001], 0x20 = 21
+hd44780_write_command 01
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0021], 0x20 = 01
+00008a: ret
+000234: ldi r24, 0x01
+000236: rcall .-167 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+000238: ldi r22, 0x00
+00023a: ldi r24, 0x84
+00023c: rcall .-196 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[84] = 84
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[84] = 48
+0000c0: andi r24[48], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0001], 0x40 = 01
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0001], 0x10 = 01
+000078: in r25, io:25[01]
+00007a: andi r25[01], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[08] = 08
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[08]
+000080: sbi io:25[0008], 0x20 = 28
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0028], 0x20 = 08
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[84] = 84
+0000c8: andi r24[84], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0008], 0x40 = 08
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0008], 0x10 = 08
+000078: in r25, io:25[08]
+00007a: andi r25[08], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[04] = 04
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[04]
+000080: sbi io:25[0004], 0x20 = 24
+hd44780_write_command 84
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0024], 0x20 = 04
+00008a: ret
+00023e: ldi r24, 0x00
+000240: rcall .-172 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[80] = 84
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[84], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[00] = 04
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[04], 0x80	; Will branch
+0000f2: ret
+000242: lds r24[04], 0x0110
+000246: push r1[00] (@02ea)
+000248: push r24[05] (@02e9)
+00024a: lds r24[05], 0x0111
+00024e: push r1[00] (@02e8)
+000250: push r24[00] (@02e7)
+000252: lds r24[00], 0x0112
+000256: push r1[00] (@02e6)
+000258: push r24[00] (@02e5)
+00025a: push r15[01] (@02e4)
+00025c: push r14[00] (@02e3)
+00025e: push r17[02] (@02e2)
+000260: push r16[ec] (@02e1)
+000262: rcall .17 [0286]
+000286: ldi XL, 0x10
+000288: ldi XH, 0x00
+00028a: ldi ZL, 0x48
+00028c: ldi ZH, 0x01
+00028e: rjmp .664 [07c0]
+0007c0: push r16[ec] (@02de)
+0007c2: push r17[02] (@02dd)
+0007c4: push YL[eb] (@02dc)
+0007c6: push YH[02] (@02db)
+0007c8: in YL, SPL[db]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[db], XL[10] = cb
+0007cc: 									SREG = ..N.S.TI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[40]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[cb]
+0007da: ijmp Z[0290]
+000290: ld r16, (Y+23[02e2])=[ec]
+000292: ld r17, (Y+24[02e3])=[02]
+000294: ldi r24, 0x06
+000296: st (Y+4[02cf]), r24[06]
+000298: st (Y+2[02cd]), r17[02]
+00029a: st (Y+1[02cc]), r16[ec]
+00029c: ldi r24, 0xff
+00029e: ldi r25, 0x7f
+0002a0: st (Y+6[02d1]), r25[7f]
+0002a2: st (Y+5[02d0]), r24[ff]
+0002a4: movw r20:r21, YL:YH[02cb]
+0002a6: subi r20[cb], 0xe5 = e6
+0002a6: 									SREG = C.N.S.TI
+0002a8: sbci r21[02], 0xff = 02
+0002a8: 									SREG = C.....TI
+0002aa: st (Y+16[02db]), r21[02]
+0002ac: st (Y+15[02da]), r20[e6]
+0002ae: ld r22, (Y+25[02e4])=[00]
+0002b0: ld r23, (Y+26[02e5])=[01]
+0002b2: movw r24:r25, YL:YH[02cb]
+0002b4: adiw r24:r25[02cb], 0x01
+0002b4: 									SREG = ......TI
+0002b6: rcall .8 [02c8]
+0002c8: ldi XL, 0x0c
+0002ca: ldi XH, 0x00
+0002cc: ldi ZL, 0x69
+0002ce: ldi ZH, 0x01
+0002d0: rjmp .617 [07a4]
+0007a4: push r2[00] (@02c8)
+0007a6: push r3[00] (@02c7)
+0007a8: push r4[00] (@02c6)
+0007aa: push r5[00] (@02c5)
+0007ac: push r6[00] (@02c4)
+0007ae: push r7[00] (@02c3)
+0007b0: push r8[00] (@02c2)
+0007b2: push r9[00] (@02c1)
+0007b4: push r10[00] (@02c0)
+0007b6: push r11[00] (@02bf)
+0007b8: push r12[f5] (@02be)
+0007ba: push r13[02] (@02bd)
+0007bc: push r14[00] (@02bc)
+0007be: push r15[01] (@02bb)
+0007c0: push r16[ec] (@02ba)
+0007c2: push r17[02] (@02b9)
+0007c4: push YL[cb] (@02b8)
+0007c6: push YH[02] (@02b7)
+0007c8: in YL, SPL[b7]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[b7], XL[0c] = ab
+0007cc: 									SREG = ..N.SHTI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[c0]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[ab]
+0007da: ijmp Z[02d2]
+0002d2: movw r14:r15, r24:r25[02cc]
+0002d4: movw r12:r13, r22:r23[0100]
+0002d6: movw r16:r17, r20:r21[02e6]
+0002d8: movw ZL:ZH, r24:r25[02cc]
+0002da: st (Z+7[02d3]), r1[00]
+0002dc: st (Z+6[02d2]), r1[00]
+0002de: ld r24, (Z+3[02cf])=[06]
+0002e0: sbrs r24[06], 0x02	; Will branch
+0002e4: clr r8[00]
+0002e4: 									SREG = .Z....TI
+0002e6: inc r8[00] = 01
+0002e6: 									SREG = ......TI
+0002e8: mov r9, r1[00] = 00
+0002ea: add r8[01], YL[ab] = ac
+0002ea: 									SREG = ..N.S.TI
+0002ec: addc r9[00], YH[02] = 02
+0002ec: 									SREG = ......TI
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0100]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0100]++
+0002fc: movw r12:r13, ZL:ZH[0101]
+0002fe: tst r24[25]
+0002fe: 									SREG = ......TI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0101]++
+000310: movw r12:r13, ZL:ZH[0102]
+000312: cpi r24[32], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[00], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[00], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[00], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0102]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0102]++
+00039e: movw r12:r13, ZL:ZH[0103]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[20], 0x20
+000324: 									SREG = .Z....TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[20], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e6]
+000488: sbrs r18[20], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e6])=[00]
+00049c: ld r23, (Z+1[02e7])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e6], 0xfe = e8
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[20] = 20
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[0c]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[20], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[20] = 20
+000578: rjmp .3 [0580]
+000580: sbrs r19[20], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[20] = 20
+0005a0: andi r24[20], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[20], 0x08	; Will branch
+0005aa: sbrs r19[20], 0x01	; Will not branch
+0005ac: rjmp .14 [05ca]
+0005ca: cp r11[01], r3[02] = ff
+0005ca: 									SREG = C.N.SHTI
+0005cc: brcs .-9 [05bc]	; Will branch
+0005bc: movw r22:r23, r14:r15[02cc]
+0005be: ldi r24, 0x20
+0005c0: ldi r25, 0x00
+0005c2: st (Y+12[02b7]), r19[20]
+0005c4: rcall .101 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0020]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[00]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[00], r24[ff] = 01
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ec]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ec]++, r16[20] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ed]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[00]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0000], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[01]
+0006dc: movw r24:r25, r16:r17[0020]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+0005c6: inc r11[01] = 02
+0005c6: 									SREG = .....HTI
+0005c8: ld r19, (Y+12[02b7])=[20]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[20], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[20] = 20
+000602: andi r24[20], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[00] = 01
+000626: 									SREG = ......TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[01]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[01], r24[ff] = 02
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ed]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ed]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ee]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[01]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0001], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[02]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0103]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0103]++
+0002fc: movw r12:r13, ZL:ZH[0104]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[02]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[02], r24[ff] = 03
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ee]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ee]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ef]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[02]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0002], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[03]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0104]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0104]++
+0002fc: movw r12:r13, ZL:ZH[0105]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0105]++
+000310: movw r12:r13, ZL:ZH[0106]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[0106]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0106]++
+00039e: movw r12:r13, ZL:ZH[0107]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0107]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0107]++
+00039e: movw r12:r13, ZL:ZH[0108]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e8]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e8])=[00]
+00049c: ld r23, (Z+1[02e9])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e8], 0xfe = ea
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[03]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[03], r24[ff] = 04
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ef]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ef]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f0]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[03]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0003], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[04]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[04]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[04], r24[ff] = 05
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f0]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f0]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f1]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[04]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0004], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[05]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0108]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0108]++
+0002fc: movw r12:r13, ZL:ZH[0109]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[05]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[05], r24[ff] = 06
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f1]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f1]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f2]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[05]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0005], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[06]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0109]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0109]++
+0002fc: movw r12:r13, ZL:ZH[010a]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[010a]++
+000310: movw r12:r13, ZL:ZH[010b]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[010b]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010b]++
+00039e: movw r12:r13, ZL:ZH[010c]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[010c]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010c]++
+00039e: movw r12:r13, ZL:ZH[010d]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02ea]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02ea])=[05]
+00049c: ld r23, (Z+1[02eb])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[ea], 0xfe = ec
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[05] (@02a8)
+0006f8: andi r22[05], 0xfe
+0006f8: 									SREG = C......I
+0006fa: subi r22[04], 0xfe = 06
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0006]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[06]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[06], r18[03] = 09
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0009]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[09]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[04]
+000792: 									SREG = .......I
+000794: dec XH[03] = 02
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[01] = 00
+000794: 									SREG = CZ.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[09], r18[00] = 09
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[09], r23[00] = 09
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[09], r24[00] = 09
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[09], XL[00] = 09
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[09]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[04]
+000776: 									SREG = .......I
+000778: dec XH[03] = 02
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[02]
+000776: 									SREG = .......I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[01] = 00
+000778: 									SREG = CZ.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[05]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[05], r0[00] = 05
+000738: 									SREG = ......TI
+00073a: subi r19[05], 0xd0 = 35
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[35] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[06]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[06], r24[ff] = 07
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f2]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f2]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f3]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[06]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0006], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[07]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[35]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0035]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[07]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[07], r24[ff] = 08
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f3]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f3]++, r16[35] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f4]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[07]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0007], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[08]
+0006dc: movw r24:r25, r16:r17[0035]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[010d]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[010d]++
+0002fc: movw r12:r13, ZL:ZH[010e]
+0002fe: tst r24[00]
+0002fe: 									SREG = .Z...HTI
+000300: brne .1 [0304]	; Will not branch
+000302: rjmp .422 [0650]
+000650: movw ZL:ZH, r14:r15[02cc]
+000652: ld r18, (Z+6[02d2])=[08]
+000654: ld r19, (Z+7[02d3])=[00]
+000656: rjmp .2 [065c]
+00065c: movw r24:r25, r18:r19[0008]
+00065e: adiw YL:YH[02ab], 0x0c
+00065e: 									SREG = .....HTI
+000660: ldi ZL, 0x12
+000662: rjmp .188 [07dc]
+0007dc: ld r2, (Y+18[02c9])=[00]
+0007de: ld r3, (Y+17[02c8])=[00]
+0007e0: ld r4, (Y+16[02c7])=[00]
+0007e2: ld r5, (Y+15[02c6])=[00]
+0007e4: ld r6, (Y+14[02c5])=[00]
+0007e6: ld r7, (Y+13[02c4])=[00]
+0007e8: ld r8, (Y+12[02c3])=[00]
+0007ea: ld r9, (Y+11[02c2])=[00]
+0007ec: ld r10, (Y+10[02c1])=[00]
+0007ee: ld r11, (Y+9[02c0])=[00]
+0007f0: ld r12, (Y+8[02bf])=[f5]
+0007f2: ld r13, (Y+7[02be])=[02]
+0007f4: ld r14, (Y+6[02bd])=[00]
+0007f6: ld r15, (Y+5[02bc])=[01]
+0007f8: ld r16, (Y+4[02bb])=[ec]
+0007fa: ld r17, (Y+3[02ba])=[02]
+0007fc: ld XL, (Y+2[02b9])=[cb]
+0007fe: ld XH, (Y+1[02b8])=[02]
+000800: add YL[b7], ZL[12] = c9
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[c9]
+00080e: movw YL:YH, XL:XH[02cb]
+000810: ret
+0002b8: ld ZL, (Y+7[02d2])=[08]
+0002ba: ld ZH, (Y+8[02d3])=[00]
+0002bc: add ZL[08], r16[ec] = f4
+0002bc: 									SREG = ..N.SHTI
+0002be: addc ZH[00], r17[02] = 02
+0002be: 									SREG = ......TI
+0002c0: st (Z+0[02f4]), r1[00]
+0002c2: adiw YL:YH[02cb], 0x10
+0002c2: 									SREG = ......TI
+0002c4: ldi ZL, 0x04
+0002c6: rjmp .664 [07f8]
+0007f8: ld r16, (Y+4[02df])=[ec]
+0007fa: ld r17, (Y+3[02de])=[02]
+0007fc: ld XL, (Y+2[02dd])=[eb]
+0007fe: ld XH, (Y+1[02dc])=[02]
+000800: add YL[db], ZL[04] = df
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[df]
+00080e: movw YL:YH, XL:XH[02eb]
+000810: ret
+000264: movw r12:r13, r16:r17[02ec]
+000266: in r0, SREG[c0]
+000268: cli
+000268: 									SREG = ......T.
+00026a: out SPH, YH[02]
+00026c: out SREG, r0[c0]
+00026c: 									SREG = ......TI
+00026e: out SPL, YL[eb]
+000270: rjmp .4 [027a]
+00027a: movw ZL:ZH, r12:r13[02ec]
+00027c: ld r24, Z[02ec]++
+00027e: movw r12:r13, ZL:ZH[02ed]
+000280: cpse r24[20], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[20] = 20
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[20] = 02
+0000c0: andi r24[02], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0004], 0x40 = 04
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0004], 0x10 = 14
+000074: rjmp .1 [0078]
+000078: in r25, io:25[14]
+00007a: andi r25[14], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[02] = 12
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[12]
+000080: sbi io:25[0012], 0x20 = 32
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0032], 0x20 = 12
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[20] = 20
+0000c8: andi r24[20], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0012], 0x40 = 12
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0012], 0x10 = 12
+000074: rjmp .1 [0078]
+000078: in r25, io:25[12]
+00007a: andi r25[12], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[80] = 85
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[85], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[00] = 05
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[05], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ed]
+00027c: ld r24, Z[02ed]++
+00027e: movw r12:r13, ZL:ZH[02ee]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[80] = 86
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[86], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[00] = 06
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[06], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ee]
+00027c: ld r24, Z[02ee]++
+00027e: movw r12:r13, ZL:ZH[02ef]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[80] = 87
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[87], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[00] = 07
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[07], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ef]
+00027c: ld r24, Z[02ef]++
+00027e: movw r12:r13, ZL:ZH[02f0]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[80] = 88
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[88], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[00] = 08
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[08], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f0]
+00027c: ld r24, Z[02f0]++
+00027e: movw r12:r13, ZL:ZH[02f1]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[80] = 89
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[89], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[00] = 09
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[09], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f1]
+00027c: ld r24, Z[02f1]++
+00027e: movw r12:r13, ZL:ZH[02f2]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[80] = 8a
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8a], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[00] = 0a
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0a], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f2]
+00027c: ld r24, Z[02f2]++
+00027e: movw r12:r13, ZL:ZH[02f3]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[80] = 8b
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8b], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[00] = 0b
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0b], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f3]
+00027c: ld r24, Z[02f3]++
+00027e: movw r12:r13, ZL:ZH[02f4]
+000280: cpse r24[35], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[35] = 35
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[35] = 53
+0000c0: andi r24[53], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[35] = 35
+0000c8: andi r24[35], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[05] = 15
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[15]
+000080: sbi io:25[0015], 0x20 = 35
+hd44780_write_data 35
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0035], 0x20 = 15
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0015], 0x40 = 55
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0055], 0x10 = 45
+00009e: sbi io:25[0045], 0x20 = 65
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0065], 0x20 = 45
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0045], 0x40 = 05
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0005], 0x40 = 45
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0045], 0x10 = 45
+00009e: sbi io:25[0045], 0x20 = 65
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0065], 0x20 = 45
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0045], 0x40 = 05
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0005], 0x40 = 45
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0045], 0x10 = 45
+00009e: sbi io:25[0045], 0x20 = 65
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0065], 0x20 = 45
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0045], 0x40 = 05
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0005], 0x40 = 45
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0045], 0x10 = 45
+00009e: sbi io:25[0045], 0x20 = 65
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0065], 0x20 = 45
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0045], 0x40 = 05
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f4]
+00027c: ld r24, Z[02f4]++
+00027e: movw r12:r13, ZL:ZH[02f5]
+000280: cpse r24[00], r1[00]	; Will skip
+000284: rjmp .-50 [0222]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[c0]
+000162: push r0[42] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[00] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[00], 0x010f
+00016e: subi r24[00], 0xff = 01
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[01]
+000174: cpi r24[01], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[00]
+0001bc: pop r0 (@02e7)[42]
+0001be: out SREG, r0[42]
+0001be: 									SREG = .Z....T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[42]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[01], 0xff = 02
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[02]
+000174: cpi r24[02], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[02], 0xff = 03
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[03]
+000174: cpi r24[03], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[03], 0xff = 04
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[04]
+000174: cpi r24[04], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[04], 0xff = 05
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[05]
+000174: cpi r24[05], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[05], 0xff = 06
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[06]
+000174: cpi r24[06], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[06], 0xff = 07
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[07]
+000174: cpi r24[07], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[07], 0xff = 08
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[08]
+000174: cpi r24[08], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[08], 0xff = 09
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[09]
+000174: cpi r24[09], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[09], 0xff = 0a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0a]
+000174: cpi r24[0a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0a], 0xff = 0b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0b]
+000174: cpi r24[0b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0b], 0xff = 0c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0c]
+000174: cpi r24[0c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0c], 0xff = 0d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0d]
+000174: cpi r24[0d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0d], 0xff = 0e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0e]
+000174: cpi r24[0e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0e], 0xff = 0f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0f]
+000174: cpi r24[0f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0f], 0xff = 10
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[10]
+000174: cpi r24[10], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[10], 0xff = 11
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[11]
+000174: cpi r24[11], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[11], 0xff = 12
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[12]
+000174: cpi r24[12], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[12], 0xff = 13
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[13]
+000174: cpi r24[13], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[13], 0xff = 14
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[14]
+000174: cpi r24[14], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[14], 0xff = 15
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[15]
+000174: cpi r24[15], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[15], 0xff = 16
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[16]
+000174: cpi r24[16], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[16], 0xff = 17
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[17]
+000174: cpi r24[17], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[17], 0xff = 18
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[18]
+000174: cpi r24[18], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[18], 0xff = 19
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[19]
+000174: cpi r24[19], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[19], 0xff = 1a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1a]
+000174: cpi r24[1a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1a], 0xff = 1b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1b]
+000174: cpi r24[1b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1b], 0xff = 1c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1c]
+000174: cpi r24[1c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1c], 0xff = 1d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1d]
+000174: cpi r24[1d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1d], 0xff = 1e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1e]
+000174: cpi r24[1e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1e], 0xff = 1f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1f]
+000174: cpi r24[1f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1f], 0xff = 20
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[20]
+000174: cpi r24[20], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[20], 0xff = 21
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[21]
+000174: cpi r24[21], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[21], 0xff = 22
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[22]
+000174: cpi r24[22], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[22], 0xff = 23
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[23]
+000174: cpi r24[23], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[23], 0xff = 24
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[24]
+000174: cpi r24[24], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[24], 0xff = 25
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[25]
+000174: cpi r24[25], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[25], 0xff = 26
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[26]
+000174: cpi r24[26], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[26], 0xff = 27
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[27]
+000174: cpi r24[27], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[27], 0xff = 28
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[28]
+000174: cpi r24[28], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[28], 0xff = 29
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[29]
+000174: cpi r24[29], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[29], 0xff = 2a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2a]
+000174: cpi r24[2a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2a], 0xff = 2b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2b]
+000174: cpi r24[2b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2b], 0xff = 2c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2c]
+000174: cpi r24[2c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2c], 0xff = 2d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2d]
+000174: cpi r24[2d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2d], 0xff = 2e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2e]
+000174: cpi r24[2e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2e], 0xff = 2f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2f]
+000174: cpi r24[2f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2f], 0xff = 30
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[30]
+000174: cpi r24[30], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[30], 0xff = 31
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[31]
+000174: cpi r24[31], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[31], 0xff = 32
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[32]
+000174: cpi r24[32], 0x32
+000174: 									SREG = .Z....T.
+000176: brne .32 [01b8]	; Will not branch
+000178: lds r24[32], 0x0110
+00017c: subi r24[05], 0xff = 06
+00017c: 									SREG = C.....T.
+00017e: sts 0x0110, r24[06]
+000182: sts 0x010f, r1[00]
+000186: ldi r25, 0x01
+000188: sts 0x010e, r25[01]
+00018c: cpi r24[06], 0x3c
+00018c: 									SREG = C.N.SHT.
+00018e: brne .20 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[01]
+000226: 									SREG = ......TI
+000228: breq .-11 [0214]	; Will not branch
+00022a: sts 0x010e, r1[00]
+00022e: ldi r22, 0x00
+000230: ldi r24, 0x01
+000232: rcall .-191 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[01] = 01
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[01] = 10
+0000c0: andi r24[10], 0x0f
+0000c0: 									SREG = .Z....TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0005], 0x40 = 05
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0005], 0x10 = 05
+000078: in r25, io:25[05]
+00007a: andi r25[05], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[00] = 00
+00007c: 									SREG = .Z....TI
+00007e: out io:25, r25[00]
+000080: sbi io:25[0000], 0x20 = 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0020], 0x20 = 00
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[01] = 01
+0000c8: andi r24[01], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0000], 0x10 = 00
+000078: in r25, io:25[00]
+00007a: andi r25[00], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[01] = 01
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[01]
+000080: sbi io:25[0001], 0x20 = 21
+hd44780_write_command 01
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0021], 0x20 = 01
+00008a: ret
+000234: ldi r24, 0x01
+000236: rcall .-167 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+000238: ldi r22, 0x00
+00023a: ldi r24, 0x84
+00023c: rcall .-196 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[84] = 84
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[84] = 48
+0000c0: andi r24[48], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0001], 0x40 = 01
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0001], 0x10 = 01
+000078: in r25, io:25[01]
+00007a: andi r25[01], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[08] = 08
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[08]
+000080: sbi io:25[0008], 0x20 = 28
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0028], 0x20 = 08
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[84] = 84
+0000c8: andi r24[84], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0008], 0x40 = 08
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0008], 0x10 = 08
+000078: in r25, io:25[08]
+00007a: andi r25[08], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[04] = 04
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[04]
+000080: sbi io:25[0004], 0x20 = 24
+hd44780_write_command 84
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0024], 0x20 = 04
+00008a: ret
+00023e: ldi r24, 0x00
+000240: rcall .-172 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[80] = 84
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[84], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[00] = 04
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[04], 0x80	; Will branch
+0000f2: ret
+000242: lds r24[04], 0x0110
+000246: push r1[00] (@02ea)
+000248: push r24[06] (@02e9)
+00024a: lds r24[06], 0x0111
+00024e: push r1[00] (@02e8)
+000250: push r24[00] (@02e7)
+000252: lds r24[00], 0x0112
+000256: push r1[00] (@02e6)
+000258: push r24[00] (@02e5)
+00025a: push r15[01] (@02e4)
+00025c: push r14[00] (@02e3)
+00025e: push r17[02] (@02e2)
+000260: push r16[ec] (@02e1)
+000262: rcall .17 [0286]
+000286: ldi XL, 0x10
+000288: ldi XH, 0x00
+00028a: ldi ZL, 0x48
+00028c: ldi ZH, 0x01
+00028e: rjmp .664 [07c0]
+0007c0: push r16[ec] (@02de)
+0007c2: push r17[02] (@02dd)
+0007c4: push YL[eb] (@02dc)
+0007c6: push YH[02] (@02db)
+0007c8: in YL, SPL[db]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[db], XL[10] = cb
+0007cc: 									SREG = ..N.S.TI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[40]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[cb]
+0007da: ijmp Z[0290]
+000290: ld r16, (Y+23[02e2])=[ec]
+000292: ld r17, (Y+24[02e3])=[02]
+000294: ldi r24, 0x06
+000296: st (Y+4[02cf]), r24[06]
+000298: st (Y+2[02cd]), r17[02]
+00029a: st (Y+1[02cc]), r16[ec]
+00029c: ldi r24, 0xff
+00029e: ldi r25, 0x7f
+0002a0: st (Y+6[02d1]), r25[7f]
+0002a2: st (Y+5[02d0]), r24[ff]
+0002a4: movw r20:r21, YL:YH[02cb]
+0002a6: subi r20[cb], 0xe5 = e6
+0002a6: 									SREG = C.N.S.TI
+0002a8: sbci r21[02], 0xff = 02
+0002a8: 									SREG = C.....TI
+0002aa: st (Y+16[02db]), r21[02]
+0002ac: st (Y+15[02da]), r20[e6]
+0002ae: ld r22, (Y+25[02e4])=[00]
+0002b0: ld r23, (Y+26[02e5])=[01]
+0002b2: movw r24:r25, YL:YH[02cb]
+0002b4: adiw r24:r25[02cb], 0x01
+0002b4: 									SREG = ......TI
+0002b6: rcall .8 [02c8]
+0002c8: ldi XL, 0x0c
+0002ca: ldi XH, 0x00
+0002cc: ldi ZL, 0x69
+0002ce: ldi ZH, 0x01
+0002d0: rjmp .617 [07a4]
+0007a4: push r2[00] (@02c8)
+0007a6: push r3[00] (@02c7)
+0007a8: push r4[00] (@02c6)
+0007aa: push r5[00] (@02c5)
+0007ac: push r6[00] (@02c4)
+0007ae: push r7[00] (@02c3)
+0007b0: push r8[00] (@02c2)
+0007b2: push r9[00] (@02c1)
+0007b4: push r10[00] (@02c0)
+0007b6: push r11[00] (@02bf)
+0007b8: push r12[f5] (@02be)
+0007ba: push r13[02] (@02bd)
+0007bc: push r14[00] (@02bc)
+0007be: push r15[01] (@02bb)
+0007c0: push r16[ec] (@02ba)
+0007c2: push r17[02] (@02b9)
+0007c4: push YL[cb] (@02b8)
+0007c6: push YH[02] (@02b7)
+0007c8: in YL, SPL[b7]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[b7], XL[0c] = ab
+0007cc: 									SREG = ..N.SHTI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[c0]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[ab]
+0007da: ijmp Z[02d2]
+0002d2: movw r14:r15, r24:r25[02cc]
+0002d4: movw r12:r13, r22:r23[0100]
+0002d6: movw r16:r17, r20:r21[02e6]
+0002d8: movw ZL:ZH, r24:r25[02cc]
+0002da: st (Z+7[02d3]), r1[00]
+0002dc: st (Z+6[02d2]), r1[00]
+0002de: ld r24, (Z+3[02cf])=[06]
+0002e0: sbrs r24[06], 0x02	; Will branch
+0002e4: clr r8[00]
+0002e4: 									SREG = .Z....TI
+0002e6: inc r8[00] = 01
+0002e6: 									SREG = ......TI
+0002e8: mov r9, r1[00] = 00
+0002ea: add r8[01], YL[ab] = ac
+0002ea: 									SREG = ..N.S.TI
+0002ec: addc r9[00], YH[02] = 02
+0002ec: 									SREG = ......TI
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0100]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0100]++
+0002fc: movw r12:r13, ZL:ZH[0101]
+0002fe: tst r24[25]
+0002fe: 									SREG = ......TI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0101]++
+000310: movw r12:r13, ZL:ZH[0102]
+000312: cpi r24[32], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[00], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[00], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[00], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0102]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0102]++
+00039e: movw r12:r13, ZL:ZH[0103]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[20], 0x20
+000324: 									SREG = .Z....TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[20], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e6]
+000488: sbrs r18[20], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e6])=[00]
+00049c: ld r23, (Z+1[02e7])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e6], 0xfe = e8
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[20] = 20
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[0c]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[20], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[20] = 20
+000578: rjmp .3 [0580]
+000580: sbrs r19[20], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[20] = 20
+0005a0: andi r24[20], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[20], 0x08	; Will branch
+0005aa: sbrs r19[20], 0x01	; Will not branch
+0005ac: rjmp .14 [05ca]
+0005ca: cp r11[01], r3[02] = ff
+0005ca: 									SREG = C.N.SHTI
+0005cc: brcs .-9 [05bc]	; Will branch
+0005bc: movw r22:r23, r14:r15[02cc]
+0005be: ldi r24, 0x20
+0005c0: ldi r25, 0x00
+0005c2: st (Y+12[02b7]), r19[20]
+0005c4: rcall .101 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0020]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[00]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[00], r24[ff] = 01
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ec]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ec]++, r16[20] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ed]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[00]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0000], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[01]
+0006dc: movw r24:r25, r16:r17[0020]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+0005c6: inc r11[01] = 02
+0005c6: 									SREG = .....HTI
+0005c8: ld r19, (Y+12[02b7])=[20]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[20], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[20] = 20
+000602: andi r24[20], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[00] = 01
+000626: 									SREG = ......TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[01]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[01], r24[ff] = 02
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ed]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ed]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ee]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[01]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0001], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[02]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0103]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0103]++
+0002fc: movw r12:r13, ZL:ZH[0104]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[02]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[02], r24[ff] = 03
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ee]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ee]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ef]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[02]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0002], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[03]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0104]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0104]++
+0002fc: movw r12:r13, ZL:ZH[0105]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0105]++
+000310: movw r12:r13, ZL:ZH[0106]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[0106]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0106]++
+00039e: movw r12:r13, ZL:ZH[0107]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0107]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0107]++
+00039e: movw r12:r13, ZL:ZH[0108]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e8]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e8])=[00]
+00049c: ld r23, (Z+1[02e9])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e8], 0xfe = ea
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[03]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[03], r24[ff] = 04
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ef]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ef]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f0]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[03]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0003], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[04]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[04]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[04], r24[ff] = 05
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f0]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f0]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f1]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[04]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0004], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[05]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0108]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0108]++
+0002fc: movw r12:r13, ZL:ZH[0109]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[05]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[05], r24[ff] = 06
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f1]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f1]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f2]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[05]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0005], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[06]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0109]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0109]++
+0002fc: movw r12:r13, ZL:ZH[010a]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[010a]++
+000310: movw r12:r13, ZL:ZH[010b]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[010b]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010b]++
+00039e: movw r12:r13, ZL:ZH[010c]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[010c]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010c]++
+00039e: movw r12:r13, ZL:ZH[010d]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02ea]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02ea])=[06]
+00049c: ld r23, (Z+1[02eb])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[ea], 0xfe = ec
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[06] (@02a8)
+0006f8: andi r22[06], 0xfe
+0006f8: 									SREG = C......I
+0006fa: subi r22[06], 0xfe = 08
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0008]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[08]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[08], r18[04] = 0c
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[000c]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[0c]
+000792: 									SREG = .......I
+000794: dec XH[04] = 03
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[06]
+000792: 									SREG = .......I
+000794: dec XH[03] = 02
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[02] = 01
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[01] = 00
+000794: 									SREG = CZ.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[0c], r18[00] = 0c
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[0c], r23[00] = 0c
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[0c], r24[00] = 0c
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[0c], XL[00] = 0c
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[0c]
+000776: 									SREG = .......I
+000778: dec XH[04] = 03
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[06]
+000776: 									SREG = .......I
+000778: dec XH[03] = 02
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[02] = 01
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[01] = 00
+000778: 									SREG = CZ.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[06]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[06], r0[00] = 06
+000738: 									SREG = ......TI
+00073a: subi r19[06], 0xd0 = 36
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[36] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[06]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[06], r24[ff] = 07
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f2]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f2]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f3]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[06]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0006], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[07]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[36]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0036]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[07]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[07], r24[ff] = 08
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f3]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f3]++, r16[36] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f4]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[07]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0007], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[08]
+0006dc: movw r24:r25, r16:r17[0036]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[010d]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[010d]++
+0002fc: movw r12:r13, ZL:ZH[010e]
+0002fe: tst r24[00]
+0002fe: 									SREG = .Z...HTI
+000300: brne .1 [0304]	; Will not branch
+000302: rjmp .422 [0650]
+000650: movw ZL:ZH, r14:r15[02cc]
+000652: ld r18, (Z+6[02d2])=[08]
+000654: ld r19, (Z+7[02d3])=[00]
+000656: rjmp .2 [065c]
+00065c: movw r24:r25, r18:r19[0008]
+00065e: adiw YL:YH[02ab], 0x0c
+00065e: 									SREG = .....HTI
+000660: ldi ZL, 0x12
+000662: rjmp .188 [07dc]
+0007dc: ld r2, (Y+18[02c9])=[00]
+0007de: ld r3, (Y+17[02c8])=[00]
+0007e0: ld r4, (Y+16[02c7])=[00]
+0007e2: ld r5, (Y+15[02c6])=[00]
+0007e4: ld r6, (Y+14[02c5])=[00]
+0007e6: ld r7, (Y+13[02c4])=[00]
+0007e8: ld r8, (Y+12[02c3])=[00]
+0007ea: ld r9, (Y+11[02c2])=[00]
+0007ec: ld r10, (Y+10[02c1])=[00]
+0007ee: ld r11, (Y+9[02c0])=[00]
+0007f0: ld r12, (Y+8[02bf])=[f5]
+0007f2: ld r13, (Y+7[02be])=[02]
+0007f4: ld r14, (Y+6[02bd])=[00]
+0007f6: ld r15, (Y+5[02bc])=[01]
+0007f8: ld r16, (Y+4[02bb])=[ec]
+0007fa: ld r17, (Y+3[02ba])=[02]
+0007fc: ld XL, (Y+2[02b9])=[cb]
+0007fe: ld XH, (Y+1[02b8])=[02]
+000800: add YL[b7], ZL[12] = c9
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[c9]
+00080e: movw YL:YH, XL:XH[02cb]
+000810: ret
+0002b8: ld ZL, (Y+7[02d2])=[08]
+0002ba: ld ZH, (Y+8[02d3])=[00]
+0002bc: add ZL[08], r16[ec] = f4
+0002bc: 									SREG = ..N.SHTI
+0002be: addc ZH[00], r17[02] = 02
+0002be: 									SREG = ......TI
+0002c0: st (Z+0[02f4]), r1[00]
+0002c2: adiw YL:YH[02cb], 0x10
+0002c2: 									SREG = ......TI
+0002c4: ldi ZL, 0x04
+0002c6: rjmp .664 [07f8]
+0007f8: ld r16, (Y+4[02df])=[ec]
+0007fa: ld r17, (Y+3[02de])=[02]
+0007fc: ld XL, (Y+2[02dd])=[eb]
+0007fe: ld XH, (Y+1[02dc])=[02]
+000800: add YL[db], ZL[04] = df
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[df]
+00080e: movw YL:YH, XL:XH[02eb]
+000810: ret
+000264: movw r12:r13, r16:r17[02ec]
+000266: in r0, SREG[c0]
+000268: cli
+000268: 									SREG = ......T.
+00026a: out SPH, YH[02]
+00026c: out SREG, r0[c0]
+00026c: 									SREG = ......TI
+00026e: out SPL, YL[eb]
+000270: rjmp .4 [027a]
+00027a: movw ZL:ZH, r12:r13[02ec]
+00027c: ld r24, Z[02ec]++
+00027e: movw r12:r13, ZL:ZH[02ed]
+000280: cpse r24[20], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[20] = 20
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[20] = 02
+0000c0: andi r24[02], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0004], 0x40 = 04
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0004], 0x10 = 14
+000074: rjmp .1 [0078]
+000078: in r25, io:25[14]
+00007a: andi r25[14], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[02] = 12
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[12]
+000080: sbi io:25[0012], 0x20 = 32
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0032], 0x20 = 12
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[20] = 20
+0000c8: andi r24[20], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0012], 0x40 = 12
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0012], 0x10 = 12
+000074: rjmp .1 [0078]
+000078: in r25, io:25[12]
+00007a: andi r25[12], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[80] = 85
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[85], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[00] = 05
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[05], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ed]
+00027c: ld r24, Z[02ed]++
+00027e: movw r12:r13, ZL:ZH[02ee]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[80] = 86
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[86], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[00] = 06
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[06], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ee]
+00027c: ld r24, Z[02ee]++
+00027e: movw r12:r13, ZL:ZH[02ef]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[80] = 87
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[87], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[00] = 07
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[07], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ef]
+00027c: ld r24, Z[02ef]++
+00027e: movw r12:r13, ZL:ZH[02f0]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[80] = 88
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[88], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[00] = 08
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[08], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f0]
+00027c: ld r24, Z[02f0]++
+00027e: movw r12:r13, ZL:ZH[02f1]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[80] = 89
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[89], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[00] = 09
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[09], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f1]
+00027c: ld r24, Z[02f1]++
+00027e: movw r12:r13, ZL:ZH[02f2]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[80] = 8a
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8a], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[00] = 0a
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0a], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f2]
+00027c: ld r24, Z[02f2]++
+00027e: movw r12:r13, ZL:ZH[02f3]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[80] = 8b
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8b], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[00] = 0b
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0b], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f3]
+00027c: ld r24, Z[02f3]++
+00027e: movw r12:r13, ZL:ZH[02f4]
+000280: cpse r24[36], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[36] = 36
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[36] = 63
+0000c0: andi r24[63], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[36] = 36
+0000c8: andi r24[36], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[06] = 16
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[16]
+000080: sbi io:25[0016], 0x20 = 36
+hd44780_write_data 36
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0036], 0x20 = 16
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0016], 0x40 = 56
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0056], 0x10 = 46
+00009e: sbi io:25[0046], 0x20 = 66
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0066], 0x20 = 46
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0046], 0x40 = 06
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0006], 0x40 = 46
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0046], 0x10 = 46
+00009e: sbi io:25[0046], 0x20 = 66
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0066], 0x20 = 46
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0046], 0x40 = 06
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0006], 0x40 = 46
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0046], 0x10 = 46
+00009e: sbi io:25[0046], 0x20 = 66
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0066], 0x20 = 46
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0046], 0x40 = 06
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0006], 0x40 = 46
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0046], 0x10 = 46
+00009e: sbi io:25[0046], 0x20 = 66
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0066], 0x20 = 46
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0046], 0x40 = 06
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f4]
+00027c: ld r24, Z[02f4]++
+00027e: movw r12:r13, ZL:ZH[02f5]
+000280: cpse r24[00], r1[00]	; Will skip
+000284: rjmp .-50 [0222]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[c0]
+000162: push r0[42] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[00] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[00], 0x010f
+00016e: subi r24[00], 0xff = 01
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[01]
+000174: cpi r24[01], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[00]
+0001bc: pop r0 (@02e7)[42]
+0001be: out SREG, r0[42]
+0001be: 									SREG = .Z....T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[42]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[01], 0xff = 02
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[02]
+000174: cpi r24[02], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[02], 0xff = 03
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[03]
+000174: cpi r24[03], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[03], 0xff = 04
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[04]
+000174: cpi r24[04], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[04], 0xff = 05
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[05]
+000174: cpi r24[05], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[05], 0xff = 06
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[06]
+000174: cpi r24[06], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[06], 0xff = 07
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[07]
+000174: cpi r24[07], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[07], 0xff = 08
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[08]
+000174: cpi r24[08], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[08], 0xff = 09
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[09]
+000174: cpi r24[09], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[09], 0xff = 0a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0a]
+000174: cpi r24[0a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0a], 0xff = 0b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0b]
+000174: cpi r24[0b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0b], 0xff = 0c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0c]
+000174: cpi r24[0c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0c], 0xff = 0d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0d]
+000174: cpi r24[0d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0d], 0xff = 0e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0e]
+000174: cpi r24[0e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0e], 0xff = 0f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0f]
+000174: cpi r24[0f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0f], 0xff = 10
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[10]
+000174: cpi r24[10], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[10], 0xff = 11
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[11]
+000174: cpi r24[11], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[11], 0xff = 12
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[12]
+000174: cpi r24[12], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[12], 0xff = 13
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[13]
+000174: cpi r24[13], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[13], 0xff = 14
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[14]
+000174: cpi r24[14], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[14], 0xff = 15
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[15]
+000174: cpi r24[15], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[15], 0xff = 16
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[16]
+000174: cpi r24[16], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[16], 0xff = 17
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[17]
+000174: cpi r24[17], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[17], 0xff = 18
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[18]
+000174: cpi r24[18], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[18], 0xff = 19
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[19]
+000174: cpi r24[19], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[19], 0xff = 1a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1a]
+000174: cpi r24[1a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1a], 0xff = 1b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1b]
+000174: cpi r24[1b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1b], 0xff = 1c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1c]
+000174: cpi r24[1c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1c], 0xff = 1d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1d]
+000174: cpi r24[1d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1d], 0xff = 1e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1e]
+000174: cpi r24[1e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1e], 0xff = 1f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1f]
+000174: cpi r24[1f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1f], 0xff = 20
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[20]
+000174: cpi r24[20], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[20], 0xff = 21
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[21]
+000174: cpi r24[21], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[21], 0xff = 22
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[22]
+000174: cpi r24[22], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[22], 0xff = 23
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[23]
+000174: cpi r24[23], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[23], 0xff = 24
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[24]
+000174: cpi r24[24], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[24], 0xff = 25
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[25]
+000174: cpi r24[25], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[25], 0xff = 26
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[26]
+000174: cpi r24[26], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[26], 0xff = 27
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[27]
+000174: cpi r24[27], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[27], 0xff = 28
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[28]
+000174: cpi r24[28], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[28], 0xff = 29
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[29]
+000174: cpi r24[29], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[29], 0xff = 2a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2a]
+000174: cpi r24[2a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2a], 0xff = 2b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2b]
+000174: cpi r24[2b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2b], 0xff = 2c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2c]
+000174: cpi r24[2c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2c], 0xff = 2d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2d]
+000174: cpi r24[2d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2d], 0xff = 2e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2e]
+000174: cpi r24[2e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2e], 0xff = 2f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[2f]
+000174: cpi r24[2f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[2f], 0xff = 30
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[30]
+000174: cpi r24[30], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[30], 0xff = 31
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[31]
+000174: cpi r24[31], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[31], 0xff = 32
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[32]
+000174: cpi r24[32], 0x32
+000174: 									SREG = .Z....T.
+000176: brne .32 [01b8]	; Will not branch
+000178: lds r24[32], 0x0110
+00017c: subi r24[06], 0xff = 07
+00017c: 									SREG = C.....T.
+00017e: sts 0x0110, r24[07]
+000182: sts 0x010f, r1[00]
+000186: ldi r25, 0x01
+000188: sts 0x010e, r25[01]
+00018c: cpi r24[07], 0x3c
+00018c: 									SREG = C.N.SHT.
+00018e: brne .20 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[01]
+000226: 									SREG = ......TI
+000228: breq .-11 [0214]	; Will not branch
+00022a: sts 0x010e, r1[00]
+00022e: ldi r22, 0x00
+000230: ldi r24, 0x01
+000232: rcall .-191 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[01] = 01
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[01] = 10
+0000c0: andi r24[10], 0x0f
+0000c0: 									SREG = .Z....TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0006], 0x40 = 06
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0006], 0x10 = 06
+000078: in r25, io:25[06]
+00007a: andi r25[06], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[00] = 00
+00007c: 									SREG = .Z....TI
+00007e: out io:25, r25[00]
+000080: sbi io:25[0000], 0x20 = 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0020], 0x20 = 00
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[01] = 01
+0000c8: andi r24[01], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0000], 0x10 = 00
+000078: in r25, io:25[00]
+00007a: andi r25[00], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[01] = 01
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[01]
+000080: sbi io:25[0001], 0x20 = 21
+hd44780_write_command 01
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0021], 0x20 = 01
+00008a: ret
+000234: ldi r24, 0x01
+000236: rcall .-167 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0001], 0x40 = 41
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0041], 0x10 = 41
+00009e: sbi io:25[0041], 0x20 = 61
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0061], 0x20 = 41
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0041], 0x40 = 01
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+000238: ldi r22, 0x00
+00023a: ldi r24, 0x84
+00023c: rcall .-196 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[84] = 84
+0000bc: mov YH, r22[00] = 00
+0000be: swap r24[84] = 48
+0000c0: andi r24[48], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0001], 0x40 = 01
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0001], 0x10 = 01
+000078: in r25, io:25[01]
+00007a: andi r25[01], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[08] = 08
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[08]
+000080: sbi io:25[0008], 0x20 = 28
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0028], 0x20 = 08
+00008a: ret
+0000c4: mov r22, YH[00] = 00
+0000c6: mov r24, YL[84] = 84
+0000c8: andi r24[84], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0008], 0x40 = 08
+00006e: tst r22[00]
+00006e: 									SREG = .Z....TI
+000070: breq .2 [0076]	; Will branch
+000076: cbi io:25[0008], 0x10 = 08
+000078: in r25, io:25[08]
+00007a: andi r25[08], 0xf0
+00007a: 									SREG = .Z....TI
+00007c: or r25[00], r24[04] = 04
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[04]
+000080: sbi io:25[0004], 0x20 = 24
+hd44780_write_command 84
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0024], 0x20 = 04
+00008a: ret
+00023e: ldi r24, 0x00
+000240: rcall .-172 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[80] = 84
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[84], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0004], 0x40 = 44
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0044], 0x10 = 44
+00009e: sbi io:25[0044], 0x20 = 64
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[64]
+0000a8: cbi io:25[0064], 0x20 = 44
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0044], 0x40 = 04
+0000b2: andi r24[64], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[04], YH[00] = 04
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[04], 0x80	; Will branch
+0000f2: ret
+000242: lds r24[04], 0x0110
+000246: push r1[00] (@02ea)
+000248: push r24[07] (@02e9)
+00024a: lds r24[07], 0x0111
+00024e: push r1[00] (@02e8)
+000250: push r24[00] (@02e7)
+000252: lds r24[00], 0x0112
+000256: push r1[00] (@02e6)
+000258: push r24[00] (@02e5)
+00025a: push r15[01] (@02e4)
+00025c: push r14[00] (@02e3)
+00025e: push r17[02] (@02e2)
+000260: push r16[ec] (@02e1)
+000262: rcall .17 [0286]
+000286: ldi XL, 0x10
+000288: ldi XH, 0x00
+00028a: ldi ZL, 0x48
+00028c: ldi ZH, 0x01
+00028e: rjmp .664 [07c0]
+0007c0: push r16[ec] (@02de)
+0007c2: push r17[02] (@02dd)
+0007c4: push YL[eb] (@02dc)
+0007c6: push YH[02] (@02db)
+0007c8: in YL, SPL[db]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[db], XL[10] = cb
+0007cc: 									SREG = ..N.S.TI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[40]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[cb]
+0007da: ijmp Z[0290]
+000290: ld r16, (Y+23[02e2])=[ec]
+000292: ld r17, (Y+24[02e3])=[02]
+000294: ldi r24, 0x06
+000296: st (Y+4[02cf]), r24[06]
+000298: st (Y+2[02cd]), r17[02]
+00029a: st (Y+1[02cc]), r16[ec]
+00029c: ldi r24, 0xff
+00029e: ldi r25, 0x7f
+0002a0: st (Y+6[02d1]), r25[7f]
+0002a2: st (Y+5[02d0]), r24[ff]
+0002a4: movw r20:r21, YL:YH[02cb]
+0002a6: subi r20[cb], 0xe5 = e6
+0002a6: 									SREG = C.N.S.TI
+0002a8: sbci r21[02], 0xff = 02
+0002a8: 									SREG = C.....TI
+0002aa: st (Y+16[02db]), r21[02]
+0002ac: st (Y+15[02da]), r20[e6]
+0002ae: ld r22, (Y+25[02e4])=[00]
+0002b0: ld r23, (Y+26[02e5])=[01]
+0002b2: movw r24:r25, YL:YH[02cb]
+0002b4: adiw r24:r25[02cb], 0x01
+0002b4: 									SREG = ......TI
+0002b6: rcall .8 [02c8]
+0002c8: ldi XL, 0x0c
+0002ca: ldi XH, 0x00
+0002cc: ldi ZL, 0x69
+0002ce: ldi ZH, 0x01
+0002d0: rjmp .617 [07a4]
+0007a4: push r2[00] (@02c8)
+0007a6: push r3[00] (@02c7)
+0007a8: push r4[00] (@02c6)
+0007aa: push r5[00] (@02c5)
+0007ac: push r6[00] (@02c4)
+0007ae: push r7[00] (@02c3)
+0007b0: push r8[00] (@02c2)
+0007b2: push r9[00] (@02c1)
+0007b4: push r10[00] (@02c0)
+0007b6: push r11[00] (@02bf)
+0007b8: push r12[f5] (@02be)
+0007ba: push r13[02] (@02bd)
+0007bc: push r14[00] (@02bc)
+0007be: push r15[01] (@02bb)
+0007c0: push r16[ec] (@02ba)
+0007c2: push r17[02] (@02b9)
+0007c4: push YL[cb] (@02b8)
+0007c6: push YH[02] (@02b7)
+0007c8: in YL, SPL[b7]
+0007ca: in YH, SPH[02]
+0007cc: sub YL[b7], XL[0c] = ab
+0007cc: 									SREG = ..N.SHTI
+0007ce: sbc YH[02], XH[00] = 02
+0007ce: 									SREG = ......TI
+0007d0: in r0, SREG[c0]
+0007d2: cli
+0007d2: 									SREG = ......T.
+0007d4: out SPH, YH[02]
+0007d6: out SREG, r0[c0]
+0007d6: 									SREG = ......TI
+0007d8: out SPL, YL[ab]
+0007da: ijmp Z[02d2]
+0002d2: movw r14:r15, r24:r25[02cc]
+0002d4: movw r12:r13, r22:r23[0100]
+0002d6: movw r16:r17, r20:r21[02e6]
+0002d8: movw ZL:ZH, r24:r25[02cc]
+0002da: st (Z+7[02d3]), r1[00]
+0002dc: st (Z+6[02d2]), r1[00]
+0002de: ld r24, (Z+3[02cf])=[06]
+0002e0: sbrs r24[06], 0x02	; Will branch
+0002e4: clr r8[00]
+0002e4: 									SREG = .Z....TI
+0002e6: inc r8[00] = 01
+0002e6: 									SREG = ......TI
+0002e8: mov r9, r1[00] = 00
+0002ea: add r8[01], YL[ab] = ac
+0002ea: 									SREG = ..N.S.TI
+0002ec: addc r9[00], YH[02] = 02
+0002ec: 									SREG = ......TI
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0100]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0100]++
+0002fc: movw r12:r13, ZL:ZH[0101]
+0002fe: tst r24[25]
+0002fe: 									SREG = ......TI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0101]++
+000310: movw r12:r13, ZL:ZH[0102]
+000312: cpi r24[32], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[00], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[00], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[00], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0102]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0102]++
+00039e: movw r12:r13, ZL:ZH[0103]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[20], 0x20
+000324: 									SREG = .Z....TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[20], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e6]
+000488: sbrs r18[20], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e6])=[00]
+00049c: ld r23, (Z+1[02e7])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e6], 0xfe = e8
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[20] = 20
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[0c]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[20], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[20] = 20
+000578: rjmp .3 [0580]
+000580: sbrs r19[20], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[20] = 20
+0005a0: andi r24[20], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[20], 0x08	; Will branch
+0005aa: sbrs r19[20], 0x01	; Will not branch
+0005ac: rjmp .14 [05ca]
+0005ca: cp r11[01], r3[02] = ff
+0005ca: 									SREG = C.N.SHTI
+0005cc: brcs .-9 [05bc]	; Will branch
+0005bc: movw r22:r23, r14:r15[02cc]
+0005be: ldi r24, 0x20
+0005c0: ldi r25, 0x00
+0005c2: st (Y+12[02b7]), r19[20]
+0005c4: rcall .101 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0020]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[00]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[00], r24[ff] = 01
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ec]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ec]++, r16[20] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ed]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[00]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0000], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[01]
+0006dc: movw r24:r25, r16:r17[0020]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+0005c6: inc r11[01] = 02
+0005c6: 									SREG = .....HTI
+0005c8: ld r19, (Y+12[02b7])=[20]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[20], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[20] = 20
+000602: andi r24[20], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[00] = 01
+000626: 									SREG = ......TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[01]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[01], r24[ff] = 02
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ed]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ed]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ee]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[01]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0001], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[02]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0103]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0103]++
+0002fc: movw r12:r13, ZL:ZH[0104]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[e8] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[02]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[02], r24[ff] = 03
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ee]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ee]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[ef]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[02]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0002], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[03]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[e8]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0104]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0104]++
+0002fc: movw r12:r13, ZL:ZH[0105]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[0105]++
+000310: movw r12:r13, ZL:ZH[0106]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[0106]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0106]++
+00039e: movw r12:r13, ZL:ZH[0107]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[0107]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[0107]++
+00039e: movw r12:r13, ZL:ZH[0108]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02e8]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02e8])=[00]
+00049c: ld r23, (Z+1[02e9])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[e8], 0xfe = ea
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[00] (@02a8)
+0006f8: andi r22[00], 0xfe
+0006f8: 									SREG = CZ.....I
+0006fa: subi r22[00], 0xfe = 02
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0002]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[02]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[02], r18[01] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[0003]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[04] = 03
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[03] = 02
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[02] = 01
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[00]
+000792: 									SREG = .Z.....I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[03], r18[00] = 03
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[03], r23[00] = 03
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[03], r24[00] = 03
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[03], XL[00] = 03
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[04] = 03
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[03] = 02
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[02] = 01
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[00]
+000776: 									SREG = .Z.....I
+000778: dec XH[01] = 00
+000778: 									SREG = .Z.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[00]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[00], r0[00] = 00
+000738: 									SREG = .Z....TI
+00073a: subi r19[00], 0xd0 = 30
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[30] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[03]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[03], r24[ff] = 04
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[ef]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02ef]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f0]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[03]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0003], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[04]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[30]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[04]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[04], r24[ff] = 05
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f0]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f0]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f1]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[04]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0004], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[05]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0108]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0108]++
+0002fc: movw r12:r13, ZL:ZH[0109]
+0002fe: tst r24[3a]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[3a], 0x25
+000304: 									SREG = ......TI
+000306: brne .7 [0316]	; Will branch
+000316: movw r22:r23, r14:r15[02cc]
+000318: ldi r25, 0x00
+00031a: rcall .442 [0690]
+000690: push r16[ea] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[003a]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[05]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[05], r24[ff] = 06
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f1]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f1]++, r16[3a] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f2]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[05]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0005], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[06]
+0006dc: movw r24:r25, r16:r17[003a]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ea]
+0006e6: ret
+00031c: rjmp .-24 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[0109]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[0109]++
+0002fc: movw r12:r13, ZL:ZH[010a]
+0002fe: tst r24[25]
+0002fe: 									SREG = .....HTI
+000300: brne .1 [0304]	; Will branch
+000304: cpi r24[25], 0x25
+000304: 									SREG = .Z....TI
+000306: brne .7 [0316]	; Will not branch
+000308: sbrc r25[06], 0x08	; Will branch
+00030c: sbrs r25[06], 0x08	; Will not branch
+00030e: ld r24, Z[010a]++
+000310: movw r12:r13, ZL:ZH[010b]
+000312: cpi r24[30], 0x25
+000312: 									SREG = .....HTI
+000314: brne .4 [031e]	; Will branch
+00031e: mov r7, r1[00] = 00
+000320: mov r3, r1[00] = 00
+000322: ldi r18, 0x00
+000324: cpi r18[00], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[30], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[30], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[30], 0x30
+00033c: 									SREG = .Z....TI
+00033e: brne .9 [0352]	; Will not branch
+000340: ori r18[00], 0x01
+000340: 									SREG = ......TI
+000342: rjmp .40 [0394]
+000394: movw ZL:ZH, r12:r13[010b]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010b]++
+00039e: movw r12:r13, ZL:ZH[010c]
+0003a0: cpse r24[32], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[01], 0x20
+000324: 									SREG = C.N.S.TI
+000326: brcc .21 [0352]	; Will not branch
+000328: cpi r24[32], 0x2b
+000328: 									SREG = .....HTI
+00032a: breq .12 [0344]	; Will not branch
+00032c: brcc .5 [0338]	; Will branch
+000338: cpi r24[32], 0x2d
+000338: 									SREG = .....HTI
+00033a: breq .7 [034a]	; Will not branch
+00033c: cpi r24[32], 0x30
+00033c: 									SREG = ......TI
+00033e: brne .9 [0352]	; Will branch
+000352: sbrc r18[01], 0x80	; Will branch
+000356: mov r19, r24[32] = 32
+000358: subi r19[32], 0x30 = 02
+000358: 									SREG = ......TI
+00035a: cpi r19[02], 0x0a
+00035a: 									SREG = C.N.SHTI
+00035c: brcc .15 [037c]	; Will not branch
+00035e: sbrs r18[01], 0x40	; Will not branch
+000360: rjmp .6 [036e]
+00036e: ldi r24, 0x0a
+000370: mul r3[00], r24[0a] = 0000
+000370: 									SREG = .ZN.SHTI
+000372: add r19[02], r0[00] = 02
+000372: 									SREG = ......TI
+000374: clr r1[00]
+000374: 									SREG = .Z....TI
+000376: mov r3, r19[02] = 02
+000378: ori r18[01], 0x20
+000378: 									SREG = ......TI
+00037a: rjmp .12 [0394]
+000394: movw ZL:ZH, r12:r13[010c]
+000396: sbrc r25[06], 0x08	; Will branch
+00039a: sbrs r25[06], 0x08	; Will not branch
+00039c: ld r24, Z[010c]++
+00039e: movw r12:r13, ZL:ZH[010d]
+0003a0: cpse r24[64], r1[00]	; Will not skip
+0003a2: rjmp .-64 [0324]
+000324: cpi r18[21], 0x20
+000324: 									SREG = ......TI
+000326: brcc .21 [0352]	; Will branch
+000352: sbrc r18[21], 0x80	; Will branch
+000356: mov r19, r24[64] = 64
+000358: subi r19[64], 0x30 = 34
+000358: 									SREG = ......TI
+00035a: cpi r19[34], 0x0a
+00035a: 									SREG = .....HTI
+00035c: brcc .15 [037c]	; Will branch
+00037c: cpi r24[64], 0x2e
+00037c: 									SREG = .....HTI
+00037e: brne .4 [0388]	; Will branch
+000388: cpi r24[64], 0x6c
+000388: 									SREG = C.N.SHTI
+00038a: brne .2 [0390]	; Will branch
+000390: cpi r24[64], 0x68
+000390: 									SREG = C.N.SHTI
+000392: brne .8 [03a4]	; Will branch
+0003a4: mov r25, r24[64] = 64
+0003a6: subi r25[64], 0x45 = 1f
+0003a6: 									SREG = .....HTI
+0003a8: cpi r25[1f], 0x03
+0003a8: 									SREG = ......TI
+0003aa: brcs .3 [03b2]	; Will not branch
+0003ac: subi r25[1f], 0x20 = ff
+0003ac: 									SREG = C.N.S.TI
+0003ae: cpi r25[ff], 0x03
+0003ae: 									SREG = ..N.S.TI
+0003b0: brcc .5 [03bc]	; Will branch
+0003bc: cpi r24[64], 0x63
+0003bc: 									SREG = ......TI
+0003be: breq .6 [03cc]	; Will not branch
+0003c0: cpi r24[64], 0x73
+0003c0: 									SREG = C.N.S.TI
+0003c2: breq .14 [03e0]	; Will not branch
+0003c4: cpi r24[64], 0x53
+0003c4: 									SREG = ......TI
+0003c6: breq .1 [03ca]	; Will not branch
+0003c8: rjmp .90 [047e]
+00047e: cpi r24[64], 0x64
+00047e: 									SREG = .Z....TI
+000480: breq .2 [0486]	; Will branch
+000486: movw ZL:ZH, r16:r17[02ea]
+000488: sbrs r18[21], 0x80	; Will not branch
+00048a: rjmp .7 [049a]
+00049a: ld r22, (Z+0[02ea])=[07]
+00049c: ld r23, (Z+1[02eb])=[00]
+00049e: clr r24[64]
+00049e: 									SREG = .Z....TI
+0004a0: sbrc r23[00], 0x80	; Will branch
+0004a4: mov r25, r24[00] = 00
+0004a6: subi r16[ea], 0xfe = ec
+0004a6: 									SREG = C.N.S.TI
+0004a8: sbci r17[02], 0xff = 02
+0004a8: 									SREG = C.....TI
+0004aa: ldi r20, 0x6f
+0004ac: mov r6, r20[6f] = 6f
+0004ae: and r6[6f], r18[21] = 21
+0004ae: 									SREG = C.....TI
+0004b0: sbrs r25[00], 0x80	; Will not branch
+0004b2: rjmp .9 [04c6]
+0004c6: ldi r18, 0x0a
+0004c8: ldi r19, 0x00
+0004ca: movw r20:r21, r8:r9[02ac]
+0004cc: rcall .269 [06e8]
+0006e8: movw ZL:ZH, r20:r21[02ac]
+0006ea: clr XL[00]
+0006ea: 									SREG = CZ....TI
+0006ec: cpi r18[0a], 0x08
+0006ec: 									SREG = ......TI
+0006ee: breq .42 [0744]	; Will not branch
+0006f0: cpi r18[0a], 0x10
+0006f0: 									SREG = C.N.S.TI
+0006f2: breq .48 [0754]	; Will not branch
+0006f4: clt
+0006f4: 									SREG = C.N.S..I
+0006f6: push r22[07] (@02a8)
+0006f8: andi r22[07], 0xfe
+0006f8: 									SREG = C......I
+0006fa: subi r22[06], 0xfe = 08
+0006fa: 									SREG = C......I
+0006fc: sbci r23[00], 0xff = 00
+0006fc: 									SREG = C......I
+0006fe: sbci r24[00], 0xff = 00
+0006fe: 									SREG = C......I
+000700: sbci r25[00], 0xff = 00
+000700: 									SREG = C......I
+000702: sbci XL[00], 0xff = 00
+000702: 									SREG = C......I
+000704: ldi XH, 0x01
+000706: rcall .62 [0784]
+000784: movw r18:r19, r22:r23[0008]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[08]
+000792: 									SREG = .......I
+000794: dec XH[01] = 00
+000794: 									SREG = .Z.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[08], r18[04] = 0c
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+000708: ldi XH, 0x04
+00070a: rcall .60 [0784]
+000784: movw r18:r19, r22:r23[000c]
+000786: movw r20:r21, r24:r25[0000]
+000788: mov r0, XL[00] = 00
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[0c]
+000792: 									SREG = .......I
+000794: dec XH[04] = 03
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[06]
+000792: 									SREG = .......I
+000794: dec XH[03] = 02
+000794: 									SREG = .......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[03]
+000792: 									SREG = C..VS..I
+000794: dec XH[02] = 01
+000794: 									SREG = C......I
+000796: brne .-7 [078a]	; Will branch
+00078a: lsr r0[00]
+00078a: 									SREG = .Z.....I
+00078c: ror r21[00]
+00078c: 									SREG = .Z.....I
+00078e: ror r20[00]
+00078e: 									SREG = .Z.....I
+000790: ror r19[00]
+000790: 									SREG = .Z.....I
+000792: ror r18[01]
+000792: 									SREG = CZ.VS..I
+000794: dec XH[01] = 00
+000794: 									SREG = CZ.....I
+000796: brne .-7 [078a]	; Will not branch
+000798: add r22[0c], r18[00] = 0c
+000798: 									SREG = .......I
+00079a: addc r23[00], r19[00] = 00
+00079a: 									SREG = .Z.....I
+00079c: addc r24[00], r20[00] = 00
+00079c: 									SREG = .Z.....I
+00079e: addc r25[00], r21[00] = 00
+00079e: 									SREG = .Z.....I
+0007a0: addc XL[00], r0[00] = 00
+0007a0: 									SREG = .Z.....I
+0007a2: ret
+00070c: add r22[0c], r23[00] = 0c
+00070c: 									SREG = .......I
+00070e: addc r23[00], r24[00] = 00
+00070e: 									SREG = .Z.....I
+000710: addc r24[00], r25[00] = 00
+000710: 									SREG = .Z.....I
+000712: addc r25[00], XL[00] = 00
+000712: 									SREG = .Z.....I
+000714: addc XL[00], r1[00] = 00
+000714: 									SREG = .Z.....I
+000716: add r22[0c], r24[00] = 0c
+000716: 									SREG = .......I
+000718: addc r23[00], r25[00] = 00
+000718: 									SREG = .Z.....I
+00071a: addc r24[00], XL[00] = 00
+00071a: 									SREG = .Z.....I
+00071c: addc r25[00], r1[00] = 00
+00071c: 									SREG = .Z.....I
+00071e: addc XL[00], r1[00] = 00
+00071e: 									SREG = .Z.....I
+000720: add r22[0c], XL[00] = 0c
+000720: 									SREG = .......I
+000722: addc r23[00], r1[00] = 00
+000722: 									SREG = .Z.....I
+000724: addc r24[00], r1[00] = 00
+000724: 									SREG = .Z.....I
+000726: addc r25[00], r1[00] = 00
+000726: 									SREG = .Z.....I
+000728: addc XL[00], r1[00] = 00
+000728: 									SREG = .Z.....I
+00072a: rcall .32 [076c]
+00076c: ldi XH, 0x04
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[0c]
+000776: 									SREG = .......I
+000778: dec XH[04] = 03
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[06]
+000776: 									SREG = .......I
+000778: dec XH[03] = 02
+000778: 									SREG = .......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[03]
+000776: 									SREG = C..VS..I
+000778: dec XH[02] = 01
+000778: 									SREG = C......I
+00077a: brne .-7 [076e]	; Will branch
+00076e: lsr XL[00]
+00076e: 									SREG = .Z.....I
+000770: ror r25[00]
+000770: 									SREG = .Z.....I
+000772: ror r24[00]
+000772: 									SREG = .Z.....I
+000774: ror r23[00]
+000774: 									SREG = .Z.....I
+000776: ror r22[01]
+000776: 									SREG = CZ.VS..I
+000778: dec XH[01] = 00
+000778: 									SREG = CZ.....I
+00077a: brne .-7 [076e]	; Will not branch
+00077c: sbiw r24:r25[0000], 0x00
+00077c: 									SREG = .Z.....I
+00077e: cpc r22[00], r1[00] = 00
+00077e: 									SREG = .Z.....I
+000780: cpc r23[00], r1[00] = 00
+000780: 									SREG = .Z.....I
+000782: ret
+00072c: brne .1 [0730]	; Will not branch
+00072e: set
+00072e: 									SREG = .Z....TI
+000730: pop r19 (@02a9)[07]
+000732: ldi r18, 0x0a
+000734: mul r18[0a], r22[00] = 0000
+000734: 									SREG = .Z....TI
+000736: clr r1[00]
+000736: 									SREG = .Z....TI
+000738: sub r19[07], r0[00] = 07
+000738: 									SREG = ......TI
+00073a: subi r19[07], 0xd0 = 37
+00073a: 									SREG = C.....TI
+00073c: st Z[02ac]++, r19[37] 
+00073e: brtc .-37 [06f6]	; Will not branch
+000740: movw r24:r25, ZL:ZH[02ad]
+000742: ret
+0004ce: mov r10, r24[ad] = ad
+0004d0: sub r10[ad], r8[ac] = 01
+0004d0: 									SREG = ......TI
+0004d2: rjmp .67 [055a]
+00055a: sbrs r6[21], 0x40	; Will not branch
+00055c: rjmp .11 [0574]
+000574: mov r11, r10[01] = 01
+000576: mov r19, r6[21] = 21
+000578: rjmp .3 [0580]
+000580: sbrs r19[21], 0x10	; Will not branch
+000582: rjmp .13 [059e]
+00059e: mov r24, r19[21] = 21
+0005a0: andi r24[21], 0x86
+0005a0: 									SREG = .Z....TI
+0005a2: breq .1 [05a6]	; Will branch
+0005a6: sbrc r19[21], 0x08	; Will branch
+0005aa: sbrs r19[21], 0x01	; Will branch
+0005ae: mov r7, r10[01] = 01
+0005b0: cp r11[01], r3[02] = ff
+0005b0: 									SREG = C.N.SHTI
+0005b2: brcc .11 [05ca]	; Will not branch
+0005b4: add r7[01], r3[02] = 03
+0005b4: 									SREG = ......TI
+0005b6: sub r7[03], r11[01] = 02
+0005b6: 									SREG = ......TI
+0005b8: mov r11, r3[02] = 02
+0005ba: rjmp .7 [05ca]
+0005ca: cp r11[02], r3[02] = 00
+0005ca: 									SREG = .Z....TI
+0005cc: brcs .-9 [05bc]	; Will not branch
+0005ce: rjmp .4 [05d8]
+0005d8: mov r3, r1[00] = 00
+0005da: sbrs r19[21], 0x10	; Will not branch
+0005dc: rjmp .17 [0600]
+000600: mov r24, r19[21] = 21
+000602: andi r24[21], 0x86
+000602: 									SREG = .Z....TI
+000604: breq .16 [0626]	; Will branch
+000626: cp r10[01], r7[02] = ff
+000626: 									SREG = C.N.SHTI
+000628: brcs .-7 [061c]	; Will branch
+00061c: movw r22:r23, r14:r15[02cc]
+00061e: ldi r24, 0x30
+000620: ldi r25, 0x00
+000622: rcall .54 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0030]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[06]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[06], r24[ff] = 07
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f2]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f2]++, r16[30] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f3]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[06]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0006], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[07]
+0006dc: movw r24:r25, r16:r17[0030]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+000624: dec r7[02] = 01
+000624: 									SREG = .....HTI
+000626: cp r10[01], r7[01] = 00
+000626: 									SREG = .Z....TI
+000628: brcs .-7 [061c]	; Will not branch
+00062a: dec r10[01] = 00
+00062a: 									SREG = .Z....TI
+00062c: movw ZL:ZH, r8:r9[02ac]
+00062e: add ZL[ac], r10[00] = ac
+00062e: 									SREG = ..N.S.TI
+000630: addc ZH[02], r1[00] = 02
+000630: 									SREG = ......TI
+000632: movw r22:r23, r14:r15[02cc]
+000634: ld r24, (Z+0[02ac])=[37]
+000636: ldi r25, 0x00
+000638: rcall .43 [0690]
+000690: push r16[ec] (@02a8)
+000692: push r17[02] (@02a7)
+000694: push YL[ab] (@02a6)
+000696: push YH[02] (@02a5)
+000698: movw r16:r17, r24:r25[0037]
+00069a: movw YL:YH, r22:r23[02cc]
+00069c: ld r24, (Y+3[02cf])=[06]
+00069e: sbrc r24[06], 0x02	; Will not branch
+0006a0: rjmp .3 [06a8]
+0006a8: sbrs r24[06], 0x04	; Will branch
+0006ac: ld r18, (Y+6[02d2])=[07]
+0006ae: ld r19, (Y+7[02d3])=[00]
+0006b0: ld r24, (Y+4[02d0])=[ff]
+0006b2: ld r25, (Y+5[02d1])=[7f]
+0006b4: cp r18[07], r24[ff] = 08
+0006b4: 									SREG = C....HTI
+0006b6: cpc r19[00], r25[7f] = 80
+0006b6: 									SREG = C.N.SHTI
+0006b8: brbcs .12 [06d2]	; Will not branch
+0006ba: ld ZL, (Y+0[02cc])=[f3]
+0006bc: ld ZH, (Y+1[02cd])=[02]
+0006be: st Z[02f3]++, r16[37] 
+0006c0: st (Y+1[02cd]), ZH[02]
+0006c2: st (Y+0[02cc]), ZL[f4]
+0006c4: rjmp .6 [06d2]
+0006d2: ld r24, (Y+6[02d2])=[07]
+0006d4: ld r25, (Y+7[02d3])=[00]
+0006d6: adiw r24:r25[0007], 0x01
+0006d6: 									SREG = .....HTI
+0006d8: st (Y+7[02d3]), r25[00]
+0006da: st (Y+6[02d2]), r24[08]
+0006dc: movw r24:r25, r16:r17[0037]
+0006de: pop YH (@02a6)[02]
+0006e0: pop YL (@02a7)[ab]
+0006e2: pop r17 (@02a8)[02]
+0006e4: pop r16 (@02a9)[ec]
+0006e6: ret
+00063a: cpse r10[00], r1[00]	; Will skip
+00063e: rjmp .5 [064a]
+00064a: cpse r3[00], r1[00]	; Will skip
+00064e: rjmp .-433 [02ee]
+0002ee: movw ZL:ZH, r14:r15[02cc]
+0002f0: ld r25, (Z+3[02cf])=[06]
+0002f2: movw ZL:ZH, r12:r13[010d]
+0002f4: sbrc r25[06], 0x08	; Will branch
+0002f8: sbrs r25[06], 0x08	; Will not branch
+0002fa: ld r24, Z[010d]++
+0002fc: movw r12:r13, ZL:ZH[010e]
+0002fe: tst r24[00]
+0002fe: 									SREG = .Z...HTI
+000300: brne .1 [0304]	; Will not branch
+000302: rjmp .422 [0650]
+000650: movw ZL:ZH, r14:r15[02cc]
+000652: ld r18, (Z+6[02d2])=[08]
+000654: ld r19, (Z+7[02d3])=[00]
+000656: rjmp .2 [065c]
+00065c: movw r24:r25, r18:r19[0008]
+00065e: adiw YL:YH[02ab], 0x0c
+00065e: 									SREG = .....HTI
+000660: ldi ZL, 0x12
+000662: rjmp .188 [07dc]
+0007dc: ld r2, (Y+18[02c9])=[00]
+0007de: ld r3, (Y+17[02c8])=[00]
+0007e0: ld r4, (Y+16[02c7])=[00]
+0007e2: ld r5, (Y+15[02c6])=[00]
+0007e4: ld r6, (Y+14[02c5])=[00]
+0007e6: ld r7, (Y+13[02c4])=[00]
+0007e8: ld r8, (Y+12[02c3])=[00]
+0007ea: ld r9, (Y+11[02c2])=[00]
+0007ec: ld r10, (Y+10[02c1])=[00]
+0007ee: ld r11, (Y+9[02c0])=[00]
+0007f0: ld r12, (Y+8[02bf])=[f5]
+0007f2: ld r13, (Y+7[02be])=[02]
+0007f4: ld r14, (Y+6[02bd])=[00]
+0007f6: ld r15, (Y+5[02bc])=[01]
+0007f8: ld r16, (Y+4[02bb])=[ec]
+0007fa: ld r17, (Y+3[02ba])=[02]
+0007fc: ld XL, (Y+2[02b9])=[cb]
+0007fe: ld XH, (Y+1[02b8])=[02]
+000800: add YL[b7], ZL[12] = c9
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[c9]
+00080e: movw YL:YH, XL:XH[02cb]
+000810: ret
+0002b8: ld ZL, (Y+7[02d2])=[08]
+0002ba: ld ZH, (Y+8[02d3])=[00]
+0002bc: add ZL[08], r16[ec] = f4
+0002bc: 									SREG = ..N.SHTI
+0002be: addc ZH[00], r17[02] = 02
+0002be: 									SREG = ......TI
+0002c0: st (Z+0[02f4]), r1[00]
+0002c2: adiw YL:YH[02cb], 0x10
+0002c2: 									SREG = ......TI
+0002c4: ldi ZL, 0x04
+0002c6: rjmp .664 [07f8]
+0007f8: ld r16, (Y+4[02df])=[ec]
+0007fa: ld r17, (Y+3[02de])=[02]
+0007fc: ld XL, (Y+2[02dd])=[eb]
+0007fe: ld XH, (Y+1[02dc])=[02]
+000800: add YL[db], ZL[04] = df
+000800: 									SREG = ..N.S.TI
+000802: addc YH[02], r1[00] = 02
+000802: 									SREG = ......TI
+000804: in r0, SREG[c0]
+000806: cli
+000806: 									SREG = ......T.
+000808: out SPH, YH[02]
+00080a: out SREG, r0[c0]
+00080a: 									SREG = ......TI
+00080c: out SPL, YL[df]
+00080e: movw YL:YH, XL:XH[02eb]
+000810: ret
+000264: movw r12:r13, r16:r17[02ec]
+000266: in r0, SREG[c0]
+000268: cli
+000268: 									SREG = ......T.
+00026a: out SPH, YH[02]
+00026c: out SREG, r0[c0]
+00026c: 									SREG = ......TI
+00026e: out SPL, YL[eb]
+000270: rjmp .4 [027a]
+00027a: movw ZL:ZH, r12:r13[02ec]
+00027c: ld r24, Z[02ec]++
+00027e: movw r12:r13, ZL:ZH[02ed]
+000280: cpse r24[20], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[20] = 20
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[20] = 02
+0000c0: andi r24[02], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0004], 0x40 = 04
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0004], 0x10 = 14
+000074: rjmp .1 [0078]
+000078: in r25, io:25[14]
+00007a: andi r25[14], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[02] = 12
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[12]
+000080: sbi io:25[0012], 0x20 = 32
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0032], 0x20 = 12
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[20] = 20
+0000c8: andi r24[20], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0012], 0x40 = 12
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0012], 0x10 = 12
+000074: rjmp .1 [0078]
+000078: in r25, io:25[12]
+00007a: andi r25[12], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 20
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[80] = 85
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[85], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[65]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[65], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[05], YH[00] = 05
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[05], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ed]
+00027c: ld r24, Z[02ed]++
+00027e: movw r12:r13, ZL:ZH[02ee]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[80] = 86
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[86], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[66]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[66], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[06], YH[00] = 06
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[06], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ee]
+00027c: ld r24, Z[02ee]++
+00027e: movw r12:r13, ZL:ZH[02ef]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[80] = 87
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[87], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[67]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[67], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[07], YH[00] = 07
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[07], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02ef]
+00027c: ld r24, Z[02ef]++
+00027e: movw r12:r13, ZL:ZH[02f0]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[80] = 88
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[88], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[08], YH[00] = 08
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[08], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f0]
+00027c: ld r24, Z[02f0]++
+00027e: movw r12:r13, ZL:ZH[02f1]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[80] = 89
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[89], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[69]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[69], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[09], YH[00] = 09
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[09], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f1]
+00027c: ld r24, Z[02f1]++
+00027e: movw r12:r13, ZL:ZH[02f2]
+000280: cpse r24[3a], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[3a] = 3a
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[3a] = a3
+0000c0: andi r24[a3], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[3a] = 3a
+0000c8: andi r24[3a], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[0a] = 1a
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[1a]
+000080: sbi io:25[001a], 0x20 = 3a
+hd44780_write_data 3a
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[003a], 0x20 = 1a
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[001a], 0x40 = 5a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[005a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[80] = 8a
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8a], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[000a], 0x40 = 4a
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[004a], 0x10 = 4a
+00009e: sbi io:25[004a], 0x20 = 6a
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6a]
+0000a8: cbi io:25[006a], 0x20 = 4a
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[004a], 0x40 = 0a
+0000b2: andi r24[6a], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0a], YH[00] = 0a
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0a], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f2]
+00027c: ld r24, Z[02f2]++
+00027e: movw r12:r13, ZL:ZH[02f3]
+000280: cpse r24[30], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[30] = 30
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[30] = 03
+0000c0: andi r24[03], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[000a], 0x40 = 0a
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[000a], 0x10 = 1a
+000074: rjmp .1 [0078]
+000078: in r25, io:25[1a]
+00007a: andi r25[1a], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[30] = 30
+0000c8: andi r24[30], 0x0f
+0000c8: 									SREG = .Z....TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[00] = 10
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[10]
+000080: sbi io:25[0010], 0x20 = 30
+hd44780_write_data 30
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0030], 0x20 = 10
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0010], 0x40 = 50
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0050], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[80] = 8b
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8b], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0000], 0x40 = 40
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0040], 0x10 = 40
+00009e: sbi io:25[0040], 0x20 = 60
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6b]
+0000a8: cbi io:25[0060], 0x20 = 40
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0040], 0x40 = 00
+0000b2: andi r24[6b], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0b], YH[00] = 0b
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0b], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f3]
+00027c: ld r24, Z[02f3]++
+00027e: movw r12:r13, ZL:ZH[02f4]
+000280: cpse r24[37], r1[00]	; Will not skip
+000282: rjmp .-9 [0272]
+000272: ldi r22, 0x01
+000274: rcall .-224 [00b6]
+0000b6: push YL[eb] (@02e8)
+0000b8: push YH[02] (@02e7)
+0000ba: mov YL, r24[37] = 37
+0000bc: mov YH, r22[01] = 01
+0000be: swap r24[37] = 73
+0000c0: andi r24[73], 0x0f
+0000c0: 									SREG = ......TI
+0000c2: rcall .-44 [006c]
+00006c: cbi io:25[0000], 0x40 = 00
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0000], 0x10 = 10
+000074: rjmp .1 [0078]
+000078: in r25, io:25[10]
+00007a: andi r25[10], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[03] = 13
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[13]
+000080: sbi io:25[0013], 0x20 = 33
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0033], 0x20 = 13
+00008a: ret
+0000c4: mov r22, YH[01] = 01
+0000c6: mov r24, YL[37] = 37
+0000c8: andi r24[37], 0x0f
+0000c8: 									SREG = ......TI
+0000ca: pop YH (@02e8)[02]
+0000cc: pop YL (@02e9)[eb]
+0000ce: rjmp .-50 [006c]
+00006c: cbi io:25[0013], 0x40 = 13
+00006e: tst r22[01]
+00006e: 									SREG = ......TI
+000070: breq .2 [0076]	; Will not branch
+000072: sbi io:25[0013], 0x10 = 13
+000074: rjmp .1 [0078]
+000078: in r25, io:25[13]
+00007a: andi r25[13], 0xf0
+00007a: 									SREG = ......TI
+00007c: or r25[10], r24[07] = 17
+00007c: 									SREG = ......TI
+00007e: out io:25, r25[17]
+000080: sbi io:25[0017], 0x20 = 37
+hd44780_write_data 37
+000082: rjmp .0 [0084]
+000084: rjmp .0 [0086]
+000086: nop
+000088: cbi io:25[0037], 0x20 = 17
+00008a: ret
+000276: ldi r24, 0x00
+000278: rcall .-200 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0017], 0x40 = 57
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0057], 0x10 = 47
+00009e: sbi io:25[0047], 0x20 = 67
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[68]
+0000a8: cbi io:25[0067], 0x20 = 47
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0047], 0x40 = 07
+0000b2: andi r24[68], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000d8: mov YH, r24[08] = 08
+0000da: swap YH[08] = 80
+0000dc: andi YH[80], 0xf0
+0000dc: 									SREG = ..N.S.TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0007], 0x40 = 47
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0047], 0x10 = 47
+00009e: sbi io:25[0047], 0x20 = 67
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0067], 0x20 = 47
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0047], 0x40 = 07
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[80] = 8c
+0000e2: 									SREG = ..N.S.TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[8c], 0x80	; Will not branch
+0000f0: rjmp .-4 [00ea]
+0000ea: ldi r24, 0x00
+0000ec: rcall .-15 [00d0]
+0000d0: push YL[eb] (@02e6)
+0000d2: push YH[02] (@02e5)
+0000d4: mov YL, r24[00] = 00
+0000d6: rcall .-38 [008c]
+00008c: sbi io:25[0007], 0x40 = 47
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0047], 0x10 = 47
+00009e: sbi io:25[0047], 0x20 = 67
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[60]
+0000a8: cbi io:25[0067], 0x20 = 47
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0047], 0x40 = 07
+0000b2: andi r24[60], 0x0f
+0000b2: 									SREG = .Z....TI
+0000b4: ret
+0000d8: mov YH, r24[00] = 00
+0000da: swap YH[00] = 00
+0000dc: andi YH[00], 0xf0
+0000dc: 									SREG = .Z....TI
+0000de: mov r24, YL[00] = 00
+0000e0: rcall .-43 [008c]
+00008c: sbi io:25[0007], 0x40 = 47
+00008e: in r25, io:24[7f]
+000090: andi r25[7f], 0xf0
+000090: 									SREG = ......TI
+000092: out io:24, r25[70]
+000094: tst r24[00]
+000094: 									SREG = .Z....TI
+000096: breq .2 [009c]	; Will branch
+00009c: cbi io:25[0047], 0x10 = 47
+00009e: sbi io:25[0047], 0x20 = 67
+0000a0: rjmp .0 [00a2]
+0000a2: rjmp .0 [00a4]
+0000a4: nop
+0000a6: in r24, io:23[6c]
+0000a8: cbi io:25[0067], 0x20 = 47
+0000aa: in r25, io:24[70]
+0000ac: ori r25[70], 0x0f
+0000ac: 									SREG = ......TI
+0000ae: out io:24, r25[7f]
+0000b0: cbi io:25[0047], 0x40 = 07
+0000b2: andi r24[6c], 0x0f
+0000b2: 									SREG = ......TI
+0000b4: ret
+0000e2: or r24[0c], YH[00] = 0c
+0000e2: 									SREG = ......TI
+0000e4: pop YH (@02e6)[02]
+0000e6: pop YL (@02e7)[eb]
+0000e8: ret
+0000ee: sbrc r24[0c], 0x80	; Will branch
+0000f2: ret
+00027a: movw ZL:ZH, r12:r13[02f4]
+00027c: ld r24, Z[02f4]++
+00027e: movw r12:r13, ZL:ZH[02f5]
+000280: cpse r24[00], r1[00]	; Will skip
+000284: rjmp .-50 [0222]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[c0]
+000162: push r0[42] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[00] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[00], 0x010f
+00016e: subi r24[00], 0xff = 01
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[01]
+000174: cpi r24[01], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[00]
+0001bc: pop r0 (@02e7)[42]
+0001be: out SREG, r0[42]
+0001be: 									SREG = .Z....T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[42]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[01], 0xff = 02
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[02]
+000174: cpi r24[02], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[02], 0xff = 03
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[03]
+000174: cpi r24[03], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[03], 0xff = 04
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[04]
+000174: cpi r24[04], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[04], 0xff = 05
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[05]
+000174: cpi r24[05], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[05], 0xff = 06
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[06]
+000174: cpi r24[06], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[06], 0xff = 07
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[07]
+000174: cpi r24[07], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[07], 0xff = 08
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[08]
+000174: cpi r24[08], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[08], 0xff = 09
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[09]
+000174: cpi r24[09], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[09], 0xff = 0a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0a]
+000174: cpi r24[0a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0a], 0xff = 0b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0b]
+000174: cpi r24[0b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0b], 0xff = 0c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0c]
+000174: cpi r24[0c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0c], 0xff = 0d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0d]
+000174: cpi r24[0d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0d], 0xff = 0e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0e]
+000174: cpi r24[0e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0e], 0xff = 0f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[0f]
+000174: cpi r24[0f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[0f], 0xff = 10
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[10]
+000174: cpi r24[10], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[10], 0xff = 11
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[11]
+000174: cpi r24[11], 0x32
+000174: 									SREG = C.N.SHT.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[11], 0xff = 12
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[12]
+000174: cpi r24[12], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[12], 0xff = 13
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[13]
+000174: cpi r24[13], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[13], 0xff = 14
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[14]
+000174: cpi r24[14], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[14], 0xff = 15
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[15]
+000174: cpi r24[15], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[15], 0xff = 16
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[16]
+000174: cpi r24[16], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[16], 0xff = 17
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[17]
+000174: cpi r24[17], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[17], 0xff = 18
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[18]
+000174: cpi r24[18], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[18], 0xff = 19
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[19]
+000174: cpi r24[19], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[19], 0xff = 1a
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1a]
+000174: cpi r24[1a], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1a], 0xff = 1b
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1b]
+000174: cpi r24[1b], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1b], 0xff = 1c
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1c]
+000174: cpi r24[1c], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1c], 0xff = 1d
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1d]
+000174: cpi r24[1d], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1d], 0xff = 1e
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1e]
+000174: cpi r24[1e], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
+000228: breq .-11 [0214]	; Will branch
+000214: in r24, io:53[00]
+000216: ori r24[00], 0x01
+000216: 									SREG = ......TI
+000218: out io:53, r24[01]
+00021a: sleep
+000002: rjmp .172 [015c]
+00015c: push r1[00] (@02e8)
+00015e: push r0[c0] (@02e7)
+000160: in r0, SREG[40]
+000162: push r0[40] (@02e6)
+000164: clr r1[00]
+000164: 									SREG = .Z....T.
+000166: push r24[01] (@02e5)
+000168: push r25[7f] (@02e4)
+00016a: lds r24[01], 0x010f
+00016e: subi r24[1e], 0xff = 1f
+00016e: 									SREG = C.....T.
+000170: sts 0x010f, r24[1f]
+000174: cpi r24[1f], 0x32
+000174: 									SREG = C.N.S.T.
+000176: brne .32 [01b8]	; Will branch
+0001b8: pop r25 (@02e5)[7f]
+0001ba: pop r24 (@02e6)[01]
+0001bc: pop r0 (@02e7)[40]
+0001be: out SREG, r0[40]
+0001be: 									SREG = ......T.
+0001c0: pop r0 (@02e8)[c0]
+0001c2: pop r1 (@02e9)[00]
+0001c4: reti
+00021c: in r24, io:53[01]
+00021e: andi r24[01], 0xfe
+00021e: 									SREG = .Z....TI
+000220: out io:53, r24[00]
+000222: lds r24[00], 0x010e
+000226: tst r24[00]
+000226: 									SREG = .Z....TI
 000228: breq .-11 [0214]	; Will branch
 000214: in r24, io:53[00]
 000216: ori r24[00], 0x01
-000216: 									SREG = ........
+000216: 									SREG = ......TI
 000218: out io:53, r24[01]
 00021a: sleep
-simavr: sleeping with interrupts off, quitting gracefully
